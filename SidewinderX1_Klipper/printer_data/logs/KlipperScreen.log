2023-11-30 21:50:50,284 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-11-30 21:50:50,285 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-11-30 21:50:50,285 [functions.py:log_start()] - Python version: 3.11
2023-11-30 21:50:50,396 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-11-30 21:50:50,399 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-11-30 21:50:50,410 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-11-30 21:50:50,460 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-11-30 21:50:50,460 [config.py:install_language()] - Using system lang
2023-11-30 21:50:50,460 [config.py:install_language()] - Using lang en
2023-11-30 21:50:50,474 [screen.py:__init__()] - Screen resolution: 800x480
2023-11-30 21:50:50,475 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-11-30 21:50:50,904 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-11-30 21:50:50,914 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-11-30 21:50:50,922 [screen.py:initial_connection()] - Default printer: None
2023-11-30 21:50:50,922 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-11-30 21:50:50,923 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-11-30 21:50:50,969 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 21:50:50,979 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-11-30 21:50:50,990 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 21:50:50,998 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-11-30 21:50:50,999 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-11-30 21:50:51,005 [_logging.py:info()] - Websocket connected
2023-11-30 21:50:51,005 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-11-30 21:50:51,101 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 21:50:51,108 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 21:50:51,109 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'authorization', 'octoprint_compat', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 21:50:51,116 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 21:50:51,117 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 21:50:51,124 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 21:50:51,284 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 21:50:51,284 [screen.py:init_printer()] - {'configfile': {'config': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>'}, 'printer': {'kinematics': 'none', 'max_velocity': '1000', 'max_accel': '1000'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'max_accel_to_decel': 500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'none'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 21:50:51,285 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 21:50:51,285 [printer.py:reinit()] - # Extruders: 0
2023-11-30 21:50:51,285 [printer.py:reinit()] - # Temperature devices: 0
2023-11-30 21:50:51,285 [printer.py:reinit()] - # Fans: 0
2023-11-30 21:50:51,285 [printer.py:reinit()] - # Output pins: 0
2023-11-30 21:50:51,285 [printer.py:reinit()] - # Leds: 0
2023-11-30 21:50:51,294 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 21:50:51,295 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 21:50:51,536 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-11-30 21:50:51,537 [files.py:initialize()] - Gcodes path: None
2023-11-30 21:50:51,537 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 21:50:51,537 [screen.py:init_printer()] - Printer initialized
2023-11-30 21:50:51,538 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-11-30 21:50:51,538 [printer.py:change_state()] - Adding callback for state: error
2023-11-30 21:50:51,539 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 21:50:51,581 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 21:55:30,423 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-11-30 21:55:30,423 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-11-30 21:55:30,429 [screen.py:_load_panel()] - Loading panel: menu
2023-11-30 21:55:30,447 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 21:55:30,507 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-11-30 21:55:30,511 [menu.py:arrangeMenuItems()] - X > power
2023-11-30 21:55:30,513 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 21:55:33,058 [screen.py:_menu_go_back()] - #### Menu go back
2023-11-30 21:55:33,067 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:04:33,419 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-11-30 22:04:33,420 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-11-30 22:04:33,436 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-11-30 22:04:33,441 [menu.py:arrangeMenuItems()] - X > power
2023-11-30 22:04:33,443 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 22:04:35,367 [screen.py:_load_panel()] - Loading panel: system
2023-11-30 22:04:35,405 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status
2023-11-30 22:04:35,407 [system.py:_already_updated()] - fluidd v1.26.3
2023-11-30 22:04:35,409 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-11-30 22:04:35,414 [system.py:_already_updated()] - klipper v0.12.0-12
2023-11-30 22:04:35,416 [system.py:_already_updated()] - mainsail v2.8.0
2023-11-30 22:04:35,418 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-11-30 22:04:35,423 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-11-30 22:04:35,425 [system.py:_needs_update()] - system  -> 5
2023-11-30 22:04:35,432 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > system
2023-11-30 22:04:35,439 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status?refresh=false
2023-11-30 22:04:35,440 [system.py:_already_updated()] - fluidd v1.26.3
2023-11-30 22:04:35,442 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-11-30 22:04:35,444 [system.py:_already_updated()] - klipper v0.12.0-12
2023-11-30 22:04:35,445 [system.py:_already_updated()] - mainsail v2.8.0
2023-11-30 22:04:35,446 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-11-30 22:04:35,447 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-11-30 22:04:35,449 [system.py:_needs_update()] - system  -> 5
2023-11-30 22:04:39,484 [KlippyGtk.py:Dialog()] - Showing dialog Shutdown (width=834, height=480)
2023-11-30 22:04:44,476 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-11-30 22:04:54,424 [KlippyGtk.py:Dialog()] - Showing dialog Shutdown (width=834, height=480)
2023-11-30 22:05:01,329 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-11-30 22:05:21,644 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-11-30 22:05:21,645 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-11-30 22:05:21,645 [functions.py:log_start()] - Python version: 3.11
2023-11-30 22:05:21,775 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-11-30 22:05:21,776 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-11-30 22:05:21,792 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-11-30 22:05:21,870 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-11-30 22:05:21,871 [config.py:install_language()] - Using system lang
2023-11-30 22:05:21,871 [config.py:install_language()] - Using lang en
2023-11-30 22:05:21,887 [screen.py:__init__()] - Screen resolution: 800x480
2023-11-30 22:05:21,888 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-11-30 22:05:22,488 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-11-30 22:05:22,499 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-11-30 22:05:22,508 [screen.py:initial_connection()] - Default printer: None
2023-11-30 22:05:22,508 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-11-30 22:05:22,509 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-11-30 22:05:22,562 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:05:22,574 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-11-30 22:05:22,588 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:05:22,596 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-11-30 22:05:22,597 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-11-30 22:05:22,613 [_logging.py:info()] - Websocket connected
2023-11-30 22:05:22,614 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-11-30 22:05:22,722 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:05:22,730 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:05:22,731 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'history', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:05:22,739 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:05:22,739 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:05:22,748 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 22:05:22,760 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 22:05:22,762 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>'}, 'printer': {'kinematics': 'none', 'max_velocity': '1000', 'max_accel': '1000'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'max_accel_to_decel': 500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'none'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 22:05:22,763 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 22:05:22,763 [printer.py:reinit()] - # Extruders: 0
2023-11-30 22:05:22,763 [printer.py:reinit()] - # Temperature devices: 0
2023-11-30 22:05:22,763 [printer.py:reinit()] - # Fans: 0
2023-11-30 22:05:22,763 [printer.py:reinit()] - # Output pins: 0
2023-11-30 22:05:22,763 [printer.py:reinit()] - # Leds: 0
2023-11-30 22:05:22,773 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 22:05:22,774 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 22:05:23,018 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-11-30 22:05:23,021 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-11-30 22:05:23,021 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 22:05:23,021 [screen.py:init_printer()] - Printer initialized
2023-11-30 22:05:23,022 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 22:05:23,022 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 22:09:05,951 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-11-30 22:09:05,952 [printer.py:change_state()] - Adding callback for state: error
2023-11-30 22:09:05,954 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 22:09:06,025 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:09:24,851 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-11-30 22:09:24,851 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-11-30 22:09:24,855 [screen.py:_load_panel()] - Loading panel: menu
2023-11-30 22:09:24,871 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 22:09:24,925 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-11-30 22:09:24,929 [menu.py:arrangeMenuItems()] - X > power
2023-11-30 22:09:24,931 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 22:09:26,318 [screen.py:_load_panel()] - Loading panel: system
2023-11-30 22:09:26,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status
2023-11-30 22:09:26,348 [system.py:_already_updated()] - fluidd v1.26.3
2023-11-30 22:09:26,350 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-11-30 22:09:26,354 [system.py:_already_updated()] - klipper v0.12.0-12
2023-11-30 22:09:26,356 [system.py:_already_updated()] - mainsail v2.8.0
2023-11-30 22:09:26,358 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-11-30 22:09:26,362 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-11-30 22:09:26,364 [system.py:_needs_update()] - system  -> 5
2023-11-30 22:09:26,370 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > system
2023-11-30 22:09:26,377 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status?refresh=false
2023-11-30 22:09:26,378 [system.py:_already_updated()] - fluidd v1.26.3
2023-11-30 22:09:26,381 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-11-30 22:09:26,382 [system.py:_already_updated()] - klipper v0.12.0-12
2023-11-30 22:09:26,383 [system.py:_already_updated()] - mainsail v2.8.0
2023-11-30 22:09:26,385 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-11-30 22:09:26,386 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-11-30 22:09:26,388 [system.py:_needs_update()] - system  -> 5
2023-11-30 22:09:30,380 [KlippyGtk.py:Dialog()] - Showing dialog Shutdown (width=834, height=480)
2023-11-30 22:09:31,149 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-11-30 22:09:51,784 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-11-30 22:09:51,785 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-11-30 22:09:51,785 [functions.py:log_start()] - Python version: 3.11
2023-11-30 22:09:51,912 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-11-30 22:09:51,913 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-11-30 22:09:51,927 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-11-30 22:09:52,012 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-11-30 22:09:52,013 [config.py:install_language()] - Using system lang
2023-11-30 22:09:52,013 [config.py:install_language()] - Using lang en
2023-11-30 22:09:52,030 [screen.py:__init__()] - Screen resolution: 800x480
2023-11-30 22:09:52,032 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-11-30 22:09:52,631 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-11-30 22:09:52,642 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-11-30 22:09:52,651 [screen.py:initial_connection()] - Default printer: None
2023-11-30 22:09:52,651 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-11-30 22:09:52,652 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-11-30 22:09:52,708 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:09:52,721 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-11-30 22:09:52,734 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:09:52,743 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-11-30 22:09:52,744 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-11-30 22:09:52,752 [_logging.py:info()] - Websocket connected
2023-11-30 22:09:52,753 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-11-30 22:09:52,868 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:09:52,876 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:09:52,876 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:09:52,884 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:09:52,885 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:09:52,893 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 22:09:52,904 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 22:09:52,905 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>'}, 'printer': {'kinematics': 'none', 'max_velocity': '1000', 'max_accel': '1000'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'max_accel_to_decel': 500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'none'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 22:09:52,906 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 22:09:52,906 [printer.py:reinit()] - # Extruders: 0
2023-11-30 22:09:52,906 [printer.py:reinit()] - # Temperature devices: 0
2023-11-30 22:09:52,907 [printer.py:reinit()] - # Fans: 0
2023-11-30 22:09:52,907 [printer.py:reinit()] - # Output pins: 0
2023-11-30 22:09:52,907 [printer.py:reinit()] - # Leds: 0
2023-11-30 22:09:52,918 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 22:09:52,919 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 22:09:53,162 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-11-30 22:09:53,163 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-11-30 22:09:53,164 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 22:09:53,165 [screen.py:init_printer()] - Printer initialized
2023-11-30 22:09:53,165 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 22:09:53,165 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 22:12:19,124 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-11-30 22:12:19,124 [printer.py:change_state()] - Adding callback for state: error
2023-11-30 22:12:19,128 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 22:12:19,198 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:14:33,013 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-11-30 22:14:33,013 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 22:14:33,013 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 22:14:33,014 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 22:14:33,066 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:14:36,632 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:14:36,639 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:14:36,640 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:14:36,646 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:14:36,647 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:14:36,654 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 22:14:36,663 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 22:14:36,664 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>'}, 'printer': {'kinematics': 'none', 'max_velocity': '1000', 'max_accel': '1000'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'max_accel_to_decel': 500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'none'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 22:14:36,665 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 22:14:36,665 [printer.py:reinit()] - # Extruders: 0
2023-11-30 22:14:36,665 [printer.py:reinit()] - # Temperature devices: 0
2023-11-30 22:14:36,665 [printer.py:reinit()] - # Fans: 0
2023-11-30 22:14:36,665 [printer.py:reinit()] - # Output pins: 0
2023-11-30 22:14:36,665 [printer.py:reinit()] - # Leds: 0
2023-11-30 22:14:36,674 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 22:14:36,675 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 22:14:36,920 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-11-30 22:14:36,921 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-11-30 22:14:36,921 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 22:14:36,922 [screen.py:init_printer()] - Printer initialized
2023-11-30 22:14:36,923 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 22:14:36,923 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 22:15:26,155 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 22:15:26,156 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 22:15:26,157 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 22:15:26,159 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 22:15:26,229 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:15:29,632 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:15:29,639 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:15:29,639 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:15:29,645 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:15:29,646 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:15:29,653 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 22:15:29,662 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 22:15:29,663 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>'}, 'printer': {'kinematics': 'none', 'max_velocity': '1000', 'max_accel': '1000'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'max_accel_to_decel': 500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'none'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 22:15:29,663 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 22:15:29,664 [printer.py:reinit()] - # Extruders: 0
2023-11-30 22:15:29,664 [printer.py:reinit()] - # Temperature devices: 0
2023-11-30 22:15:29,664 [printer.py:reinit()] - # Fans: 0
2023-11-30 22:15:29,664 [printer.py:reinit()] - # Output pins: 0
2023-11-30 22:15:29,664 [printer.py:reinit()] - # Leds: 0
2023-11-30 22:15:29,672 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 22:15:29,673 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 22:15:29,919 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-11-30 22:15:29,921 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-11-30 22:15:29,921 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 22:15:29,921 [screen.py:init_printer()] - Printer initialized
2023-11-30 22:15:29,921 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 22:15:29,922 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 22:15:37,555 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 22:15:37,555 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 22:15:37,555 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 22:15:37,557 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 22:15:37,645 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:15:40,633 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:15:40,640 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:15:40,642 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:15:40,648 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:15:40,648 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:15:40,656 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 22:15:40,665 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 22:15:40,666 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>'}, 'printer': {'kinematics': 'none', 'max_velocity': '1000', 'max_accel': '1000'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/<your-mcu-id>', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '/home/pi/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'printer': {'max_velocity': 1000.0, 'max_accel': 1000.0, 'max_accel_to_decel': 500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'none'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 22:15:40,667 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 22:15:40,667 [printer.py:reinit()] - # Extruders: 0
2023-11-30 22:15:40,667 [printer.py:reinit()] - # Temperature devices: 0
2023-11-30 22:15:40,667 [printer.py:reinit()] - # Fans: 0
2023-11-30 22:15:40,667 [printer.py:reinit()] - # Output pins: 0
2023-11-30 22:15:40,667 [printer.py:reinit()] - # Leds: 0
2023-11-30 22:15:40,675 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 22:15:40,676 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 22:15:40,922 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-11-30 22:15:40,923 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-11-30 22:15:40,923 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 22:15:40,924 [screen.py:init_printer()] - Printer initialized
2023-11-30 22:15:40,925 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 22:15:40,925 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 22:17:08,908 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-11-30 22:17:08,908 [printer.py:change_state()] - Adding callback for state: error
2023-11-30 22:17:08,910 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 22:17:08,984 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:20:45,214 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-11-30 22:20:45,214 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 22:20:45,215 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 22:20:45,215 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 22:20:45,257 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:20:48,639 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:20:48,650 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:20:48,652 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:20:48,663 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:20:48,665 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:20:48,665 [screen.py:init_printer()] - Klipper not connected
2023-11-30 22:20:51,632 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:20:51,638 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:20:51,639 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:20:51,646 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:20:51,647 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:20:51,647 [screen.py:init_printer()] - Klipper not connected
2023-11-30 22:20:54,641 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:20:54,654 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:20:54,655 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:20:54,668 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:20:54,670 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:20:54,670 [screen.py:init_printer()] - Klipper not connected
2023-11-30 22:20:57,632 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:20:57,638 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:20:57,639 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:20:57,645 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:20:57,646 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:20:57,646 [screen.py:init_printer()] - Klipper not connected
2023-11-30 22:21:00,641 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:21:00,654 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:21:00,656 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'authorization', 'update_manager'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:21:00,668 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:21:00,670 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:21:00,670 [screen.py:init_printer()] - Klipper not connected
2023-11-30 22:36:20,191 [screen.py:_websocket_callback()] - Still not initialized
2023-11-30 22:36:37,599 [KlippyGtk.py:Dialog()] - Showing dialog Updating (width=804, height=480)
2023-11-30 22:37:01,084 [base_panel.py:process_update()] - Update complete
2023-11-30 22:47:52,133 [screen.py:_websocket_callback()] - Still not initialized
2023-11-30 22:59:29,157 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-11-30 22:59:29,157 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-11-30 22:59:29,157 [functions.py:log_start()] - Python version: 3.11
2023-11-30 22:59:29,282 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-11-30 22:59:29,283 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-11-30 22:59:29,303 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-11-30 22:59:29,388 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-11-30 22:59:29,388 [config.py:install_language()] - Using system lang
2023-11-30 22:59:29,389 [config.py:install_language()] - Using lang en
2023-11-30 22:59:29,406 [screen.py:__init__()] - Screen resolution: 800x480
2023-11-30 22:59:29,407 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-11-30 22:59:30,059 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-11-30 22:59:30,071 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-11-30 22:59:30,081 [screen.py:initial_connection()] - Default printer: None
2023-11-30 22:59:30,081 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-11-30 22:59:30,081 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-11-30 22:59:30,148 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 22:59:30,160 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-11-30 22:59:30,174 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:59:30,183 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-11-30 22:59:30,184 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-11-30 22:59:30,192 [_logging.py:info()] - Websocket connected
2023-11-30 22:59:30,192 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-11-30 22:59:30,308 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:59:30,322 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 22:59:30,323 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 22:59:30,332 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 22:59:30,333 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 22:59:30,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 22:59:30,393 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 22:59:30,395 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 22:59:30,396 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 22:59:30,396 [printer.py:reinit()] - # Extruders: 1
2023-11-30 22:59:30,397 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 22:59:30,397 [printer.py:reinit()] - # Fans: 2
2023-11-30 22:59:30,397 [printer.py:reinit()] - # Output pins: 0
2023-11-30 22:59:30,397 [printer.py:reinit()] - # Leds: 0
2023-11-30 22:59:30,411 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 22:59:30,412 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 22:59:30,652 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-11-30 22:59:30,661 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 22:59:30,662 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 22:59:30,662 [files.py:initialize()] - Gcodes path: None
2023-11-30 22:59:30,662 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 22:59:30,663 [screen.py:init_printer()] - Printer initialized
2023-11-30 22:59:30,663 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-11-30 22:59:30,663 [printer.py:change_state()] - Adding callback for state: ready
2023-11-30 22:59:30,665 [screen.py:_load_panel()] - Loading panel: main_menu
2023-11-30 22:59:30,803 [main_menu.py:__init__()] - ### Making MainMenu
2023-11-30 22:59:30,810 [main_menu.py:add_device()] - Adding device: extruder
2023-11-30 22:59:30,819 [main_menu.py:add_device()] - Adding device: heater_bed
2023-11-30 22:59:30,852 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-11-30 22:59:30,854 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-11-30 22:59:36,418 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 22:59:36,425 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 22:59:36,434 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 22:59:36,435 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:00:22,390 [screen.py:_load_panel()] - Loading panel: move
2023-11-30 23:00:22,493 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-11-30 23:00:31,936 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 Z+25 F600'}
2023-11-30 23:00:31,939 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2023-11-30 23:00:32,161 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 25.000 [0.000]
2023-11-30 23:00:46,441 [screen.py:_load_panel()] - Loading panel: menu
2023-11-30 23:00:46,541 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2023-11-30 23:00:46,549 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2023-11-30 23:00:46,552 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2023-11-30 23:00:50,275 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 X'}
2023-11-30 23:00:57,939 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Y'}
2023-11-30 23:01:09,840 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28 Z'}
2023-11-30 23:01:28,924 [screen.py:_menu_go_back()] - #### Menu go back
2023-11-30 23:01:28,974 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-11-30 23:01:32,149 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-11-30 23:01:34,497 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-11-30 23:01:34,497 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M18'}
2023-11-30 23:01:55,156 [screen.py:_menu_go_back()] - #### Menu go back
2023-11-30 23:01:55,197 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-11-30 23:02:17,105 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-11-30 23:02:17,105 [printer.py:change_state()] - Adding callback for state: shutdown
2023-11-30 23:02:17,113 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:02:17,160 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:21:50,277 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-11-30 23:21:50,277 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:21:50,278 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:21:50,280 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:21:50,334 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:21:53,474 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:21:53,481 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:21:53,483 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:21:53,489 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:21:53,489 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:21:53,497 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:21:53,507 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:21:53,508 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio17', 'value': '1'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio17', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:21:53,510 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:21:53,510 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:21:53,510 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:21:53,510 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:21:53,510 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:21:53,510 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:21:53,519 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:21:53,520 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:21:53,763 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:21:53,776 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:21:53,779 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:21:53,786 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:21:53,787 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:21:53,787 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:21:53,787 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:21:53,788 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:21:53,788 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:21:53,788 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:23:20,490 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-11-30 23:23:20,490 [printer.py:change_state()] - Adding callback for state: error
2023-11-30 23:23:20,492 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:23:20,570 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:24:41,856 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-11-30 23:24:41,857 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:24:41,858 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:24:41,860 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:24:41,923 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:24:45,473 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:24:45,480 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:24:45,481 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:24:45,487 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:24:45,488 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:24:45,495 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:24:45,506 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:24:45,507 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio17', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio17', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:24:45,509 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:24:45,509 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:24:45,509 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:24:45,509 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:24:45,509 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:24:45,510 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:24:45,518 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:24:45,520 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:24:45,762 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:24:45,775 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:24:45,779 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:24:45,786 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:24:45,787 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:24:45,788 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:24:45,788 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:24:45,789 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:24:45,789 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:24:45,789 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:26:11,984 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-11-30 23:26:11,984 [printer.py:change_state()] - Adding callback for state: error
2023-11-30 23:26:11,987 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:26:12,059 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:29:23,606 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-11-30 23:29:23,607 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:29:23,607 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:29:23,609 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:29:23,673 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:29:26,474 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:29:26,480 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:29:26,482 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:29:26,488 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:29:26,489 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:29:26,496 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:29:26,506 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:29:26,508 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:29:26,509 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:29:26,510 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:29:26,510 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:29:26,510 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:29:26,510 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:29:26,510 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:29:26,519 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:29:26,520 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:29:26,762 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:29:26,774 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:29:26,778 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:29:26,785 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:29:26,786 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:29:26,786 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:29:26,786 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:29:26,787 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:29:26,788 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:29:26,788 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:30:25,591 [KlippyWebsocket.py:connect()] - Already connected
2023-11-30 23:31:01,816 [KlippyWebsocket.py:restart_firmware()] - Sending printer.firmware_restart
2023-11-30 23:31:02,145 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:31:02,146 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:31:02,148 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:31:02,151 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:31:02,219 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:31:05,474 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:31:05,480 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:31:05,482 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:31:05,488 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:31:05,489 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:31:05,496 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:31:05,506 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:31:05,508 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:31:05,510 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:31:05,510 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:31:05,510 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:31:05,510 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:31:05,510 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:31:05,510 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:31:05,519 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:31:05,520 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:31:05,762 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:31:05,775 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:31:05,778 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:31:05,785 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:31:05,787 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:31:05,787 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:31:05,787 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:31:05,788 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:31:05,788 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:31:05,789 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:31:57,820 [KlippyWebsocket.py:restart()] - Sending printer.restart
2023-11-30 23:31:57,833 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:31:57,833 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:31:57,834 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:31:57,835 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:31:57,899 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:32:01,475 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:32:01,481 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:32:01,482 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:32:01,487 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:32:01,488 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:32:01,495 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:32:01,506 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:32:01,507 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:32:01,509 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:32:01,509 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:32:01,509 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:32:01,509 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:32:01,509 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:32:01,509 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:32:01,519 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:32:01,520 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:32:01,760 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:32:01,773 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:32:01,776 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:32:01,783 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:32:01,784 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:32:01,784 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:32:01,784 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:32:01,784 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:32:01,784 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:32:01,785 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:32:04,528 [KlippyWebsocket.py:restart()] - Sending printer.restart
2023-11-30 23:32:04,542 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:32:04,542 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:32:04,544 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:32:04,546 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:32:04,612 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:32:05,305 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f9dd7c0c0 (GtkDialog at 0xc7bee80)>
2023-11-30 23:32:05,322 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-11-30 23:32:07,160 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-11-30 23:32:07,161 [screen.py:_send_action()] - machine.shutdown: None
2023-11-30 23:32:28,397 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-11-30 23:32:28,397 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-11-30 23:32:28,397 [functions.py:log_start()] - Python version: 3.11
2023-11-30 23:32:28,550 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-11-30 23:32:28,552 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-11-30 23:32:28,574 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-11-30 23:32:28,673 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-11-30 23:32:28,674 [config.py:install_language()] - Using system lang
2023-11-30 23:32:28,675 [config.py:install_language()] - Using lang en
2023-11-30 23:32:28,701 [screen.py:__init__()] - Screen resolution: 800x480
2023-11-30 23:32:28,702 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-11-30 23:32:29,471 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-11-30 23:32:29,488 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-11-30 23:32:29,504 [screen.py:initial_connection()] - Default printer: None
2023-11-30 23:32:29,505 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-11-30 23:32:29,505 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-11-30 23:32:29,575 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:32:29,592 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-11-30 23:32:29,609 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:32:29,623 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-11-30 23:32:29,624 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-11-30 23:32:29,635 [_logging.py:info()] - Websocket connected
2023-11-30 23:32:29,635 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-11-30 23:32:29,811 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:32:29,820 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:32:29,821 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'authorization', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:32:29,832 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:32:29,834 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:32:29,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:32:29,869 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:32:29,872 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:32:29,874 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:32:29,875 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:32:29,875 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:32:29,875 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:32:29,876 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:32:29,876 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:32:29,894 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:32:29,897 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:32:30,123 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:32:30,138 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:32:30,141 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:32:30,144 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:32:30,144 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:32:30,147 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:32:30,148 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:32:30,148 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:32:35,428 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:32:35,429 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:32:40,421 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:32:40,422 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:10,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:10,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:15,013 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:15,015 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:20,008 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:20,009 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:25,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:25,014 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:30,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:30,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:35,003 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:35,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:40,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:40,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:45,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:45,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:50,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:50,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:33:55,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:33:55,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:00,012 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:00,015 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:05,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:05,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:10,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:10,002 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:15,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:15,004 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:19,178 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-11-30 23:34:19,179 [printer.py:change_state()] - Adding callback for state: error
2023-11-30 23:34:19,183 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:34:19,258 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:34:20,003 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:20,004 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:25,008 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:25,009 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:30,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:30,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:35,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:35,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:40,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:40,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:45,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:45,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:50,012 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:50,014 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:34:55,012 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:34:55,014 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:00,003 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:00,004 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:05,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:05,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:10,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:10,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:15,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:15,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:20,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:20,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:25,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:25,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:29,596 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-11-30 23:35:29,597 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:35:29,598 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:35:29,601 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:35:29,673 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:35:30,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:30,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:33,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:35:33,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:35:33,010 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'authorization', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:35:33,016 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:35:33,017 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:35:33,024 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:35:33,035 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:35:33,036 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:35:33,038 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:35:33,038 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:35:33,038 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:35:33,038 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:35:33,038 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:35:33,038 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:35:33,047 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:35:33,048 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:35:33,290 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:35:33,299 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:33,300 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:33,300 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:35:33,300 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:35:33,302 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:35:33,303 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:35:33,303 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:35:35,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:35,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:39,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:39,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:40,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:40,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:44,001 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:44,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:45,001 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:45,002 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:49,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:49,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:50,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:50,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:54,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:54,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:55,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:55,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:35:59,012 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:35:59,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:00,013 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:00,014 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:04,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:04,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:05,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:05,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:09,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:09,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:10,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:10,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:14,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:14,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:15,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:15,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:19,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:19,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:20,003 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:20,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:24,003 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:24,004 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:25,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:25,002 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:29,008 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:29,009 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:30,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:30,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:34,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:34,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:35,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:35,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:39,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:39,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:40,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:40,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:44,001 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:44,002 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:44,136 [KlippyWebsocket.py:connect()] - Already connected
2023-11-30 23:36:45,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:45,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:49,008 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:49,009 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:50,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:50,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:54,014 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:54,016 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:55,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:55,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:36:59,013 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:36:59,014 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:00,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:00,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:01,769 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-11-30 23:37:01,769 [printer.py:change_state()] - Adding callback for state: error
2023-11-30 23:37:01,770 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:37:01,810 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:37:04,001 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:04,002 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:05,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:05,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:06,052 [KlippyWebsocket.py:restart_firmware()] - Sending printer.firmware_restart
2023-11-30 23:37:06,382 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-11-30 23:37:06,382 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:37:06,382 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:37:06,384 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:37:06,463 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:37:09,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:09,002 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:10,003 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:10,004 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:10,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:37:10,017 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:37:10,018 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'authorization', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:37:10,024 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:37:10,024 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:37:10,031 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:37:10,041 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:37:10,042 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:37:10,043 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:37:10,044 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:37:10,044 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:37:10,044 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:37:10,044 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:37:10,044 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:37:10,051 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:37:10,052 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:37:10,296 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:37:10,303 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:10,303 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:10,304 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:37:10,304 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:37:10,304 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:37:10,305 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:37:10,305 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:37:14,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:14,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:15,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:15,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:16,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:16,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:19,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:19,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:20,007 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:20,009 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:21,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:21,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:24,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:24,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:25,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:25,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:26,008 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:26,009 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:29,007 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:29,009 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:30,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:30,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:31,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:31,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:34,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:34,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:35,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:35,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:36,008 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:36,009 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:39,001 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:39,002 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:40,001 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:40,002 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:41,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:41,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:44,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:44,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:45,015 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:45,016 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:46,013 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:46,015 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:49,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:49,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:50,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:50,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:51,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:51,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:54,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:54,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:55,011 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:55,012 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:56,023 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:56,025 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:37:59,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:37:59,010 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:38:00,012 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:38:00,013 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:38:01,010 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:38:01,011 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:38:01,689 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-11-30 23:38:01,690 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-11-30 23:38:01,696 [screen.py:_load_panel()] - Loading panel: menu
2023-11-30 23:38:01,711 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 23:38:01,776 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-11-30 23:38:01,782 [menu.py:arrangeMenuItems()] - X > power
2023-11-30 23:38:01,784 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 23:38:03,403 [screen.py:_load_panel()] - Loading panel: system
2023-11-30 23:38:03,433 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status
2023-11-30 23:38:03,438 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-11-30 23:38:03,440 [system.py:_already_updated()] - fluidd v1.26.3
2023-11-30 23:38:03,441 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-11-30 23:38:03,447 [system.py:_already_updated()] - klipper v0.12.0-12
2023-11-30 23:38:03,448 [system.py:_already_updated()] - mainsail v2.8.0
2023-11-30 23:38:03,450 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-11-30 23:38:03,455 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-11-30 23:38:03,462 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > system
2023-11-30 23:38:03,469 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status?refresh=false
2023-11-30 23:38:03,470 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-11-30 23:38:03,473 [system.py:_already_updated()] - fluidd v1.26.3
2023-11-30 23:38:03,474 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-11-30 23:38:03,476 [system.py:_already_updated()] - klipper v0.12.0-12
2023-11-30 23:38:03,477 [system.py:_already_updated()] - mainsail v2.8.0
2023-11-30 23:38:03,478 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-11-30 23:38:03,479 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-11-30 23:38:04,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:38:04,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:38:05,002 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:38:05,003 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:38:05,085 [KlippyGtk.py:Dialog()] - Showing dialog Restart (width=834, height=480)
2023-11-30 23:38:06,003 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:38:06,004 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:38:07,612 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-11-30 23:38:28,315 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-11-30 23:38:28,315 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-11-30 23:38:28,315 [functions.py:log_start()] - Python version: 3.11
2023-11-30 23:38:28,445 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-11-30 23:38:28,446 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-11-30 23:38:28,461 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-11-30 23:38:28,551 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-11-30 23:38:28,552 [config.py:install_language()] - Using system lang
2023-11-30 23:38:28,552 [config.py:install_language()] - Using lang en
2023-11-30 23:38:28,576 [screen.py:__init__()] - Screen resolution: 800x480
2023-11-30 23:38:28,578 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-11-30 23:38:29,133 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-11-30 23:38:29,143 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-11-30 23:38:29,152 [screen.py:initial_connection()] - Default printer: None
2023-11-30 23:38:29,152 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-11-30 23:38:29,152 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-11-30 23:38:29,203 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:38:29,216 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-11-30 23:38:29,226 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-11-30 23:38:39,672 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-11-30 23:38:39,680 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:38:39,688 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-11-30 23:38:39,689 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-11-30 23:38:39,696 [_logging.py:info()] - Websocket connected
2023-11-30 23:38:39,696 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-11-30 23:38:39,703 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:38:39,711 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:38:39,712 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'octoprint_compat', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:38:39,719 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:38:39,720 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:38:39,727 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:38:39,738 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:38:39,739 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:38:39,741 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:38:39,741 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:38:39,741 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:38:39,741 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:38:39,741 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:38:39,741 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:38:39,749 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:38:39,750 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:38:39,993 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:38:40,000 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:38:40,001 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:38:40,001 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:38:40,001 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:38:40,002 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:38:40,002 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:38:40,002 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:39:22,977 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:39:22,978 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:39:27,979 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:39:27,982 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:39:32,985 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:39:32,987 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:39:37,977 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:39:37,978 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:39:42,976 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:39:42,977 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:39:47,977 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:39:47,978 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:39:52,979 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:39:52,980 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:39:57,983 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:39:57,984 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:40:02,977 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:40:02,978 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:40:07,986 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:40:07,987 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:40:12,984 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:40:12,985 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:40:17,984 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:40:17,986 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:40:22,984 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:40:22,985 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:40:26,959 [KlippyWebsocket.py:connect()] - Already connected
2023-11-30 23:40:27,976 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:40:27,977 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:40:28,202 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-11-30 23:40:28,202 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-11-30 23:40:28,204 [screen.py:_load_panel()] - Loading panel: menu
2023-11-30 23:40:28,222 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 23:40:28,277 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-11-30 23:40:28,280 [menu.py:arrangeMenuItems()] - X > power
2023-11-30 23:40:28,282 [menu.py:evaluate_enable()] - moonraker connected True
2023-11-30 23:40:29,352 [screen.py:_load_panel()] - Loading panel: system
2023-11-30 23:40:29,408 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status
2023-11-30 23:40:29,413 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-11-30 23:40:29,415 [system.py:_already_updated()] - fluidd v1.26.3
2023-11-30 23:40:29,417 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-11-30 23:40:29,421 [system.py:_already_updated()] - klipper v0.12.0-12
2023-11-30 23:40:29,423 [system.py:_already_updated()] - mainsail v2.8.0
2023-11-30 23:40:29,424 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-11-30 23:40:29,429 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-11-30 23:40:29,436 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > system
2023-11-30 23:40:29,443 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status?refresh=false
2023-11-30 23:40:29,444 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-11-30 23:40:29,447 [system.py:_already_updated()] - fluidd v1.26.3
2023-11-30 23:40:29,448 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-11-30 23:40:29,450 [system.py:_already_updated()] - klipper v0.12.0-12
2023-11-30 23:40:29,451 [system.py:_already_updated()] - mainsail v2.8.0
2023-11-30 23:40:29,452 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-11-30 23:40:29,453 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-11-30 23:40:30,912 [KlippyGtk.py:Dialog()] - Showing dialog Restart (width=834, height=480)
2023-11-30 23:40:31,950 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-11-30 23:40:54,782 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-11-30 23:40:54,782 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-11-30 23:40:54,782 [functions.py:log_start()] - Python version: 3.11
2023-11-30 23:40:54,962 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-11-30 23:40:54,963 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-11-30 23:40:54,982 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-11-30 23:40:55,118 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-11-30 23:40:55,119 [config.py:install_language()] - Using system lang
2023-11-30 23:40:55,119 [config.py:install_language()] - Using lang en
2023-11-30 23:40:55,153 [screen.py:__init__()] - Screen resolution: 800x480
2023-11-30 23:40:55,156 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-11-30 23:40:55,982 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-11-30 23:40:56,001 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-11-30 23:40:56,014 [screen.py:initial_connection()] - Default printer: None
2023-11-30 23:40:56,015 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-11-30 23:40:56,015 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-11-30 23:40:56,142 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:40:56,159 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-11-30 23:40:56,190 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:40:56,206 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-11-30 23:40:56,209 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-11-30 23:40:56,231 [_logging.py:info()] - Websocket connected
2023-11-30 23:40:56,231 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-11-30 23:40:56,385 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:40:56,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:40:56,402 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:40:56,417 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:40:56,421 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:40:56,438 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:40:56,460 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:40:56,462 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:40:56,464 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:40:56,465 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:40:56,465 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:40:56,465 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:40:56,465 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:40:56,465 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:40:56,488 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:40:56,489 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:40:56,712 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:40:56,722 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:40:56,723 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:40:56,723 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:40:56,723 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:40:56,725 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:40:56,726 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:40:56,726 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:41:01,660 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:41:01,662 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:41:06,654 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:41:06,654 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:41:48,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:41:48,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:41:53,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:41:53,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:41:58,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:41:58,848 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:03,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:03,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:07,422 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:42:07,422 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:42:07,423 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:42:07,425 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:42:07,477 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:42:08,843 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:08,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:10,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:42:10,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:42:10,849 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:42:10,856 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:42:10,856 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:42:10,863 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:42:10,874 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:42:10,875 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:42:10,876 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:42:10,876 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:42:10,876 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:42:10,877 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:42:10,877 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:42:10,877 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:42:10,885 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:42:10,886 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:42:11,129 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:42:11,137 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:11,138 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:11,138 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:42:11,138 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:42:11,139 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:42:11,139 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:42:11,139 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:42:13,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:13,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:16,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:16,849 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:18,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:18,841 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:21,840 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:21,841 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:23,049 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:42:23,049 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:42:23,050 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:42:23,051 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:42:23,105 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:42:23,845 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:23,845 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:26,843 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:26,844 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:26,852 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:42:26,858 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:42:26,859 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:42:26,865 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:42:26,866 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:42:26,873 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:42:26,883 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:42:26,885 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:42:26,886 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:42:26,886 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:42:26,886 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:42:26,886 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:42:26,886 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:42:26,886 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:42:26,894 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:42:26,895 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:42:27,137 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:42:27,150 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:27,151 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:27,151 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:42:27,151 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:42:27,151 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:42:27,152 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:42:27,152 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:42:28,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:28,852 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:31,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:31,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:32,853 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:32,855 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:33,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:33,849 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:36,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:36,848 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:37,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:37,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:38,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:38,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:39,184 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:42:39,185 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:42:39,185 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:42:39,186 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:42:39,244 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:42:41,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:41,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:42,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:42,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:42,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:42:42,856 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:42:42,857 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:42:42,863 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:42:42,865 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:42:42,872 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:42:42,883 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:42:42,885 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:42:42,886 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:42:42,886 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:42:42,886 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:42:42,886 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:42:42,886 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:42:42,886 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:42:42,896 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:42:42,897 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:42:43,142 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:42:43,149 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:43,149 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:43,149 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:42:43,150 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:42:43,150 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:42:43,150 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:42:43,150 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:42:43,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:43,841 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:46,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:46,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:47,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:47,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:48,384 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:42:48,385 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:42:48,385 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:42:48,386 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:42:48,435 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:42:48,844 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:48,846 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:48,857 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:48,859 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:51,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:51,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:51,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:42:51,855 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:42:51,856 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:42:51,862 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:42:51,863 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:42:51,871 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:42:51,884 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:42:51,886 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:42:51,887 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:42:51,887 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:42:51,888 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:42:51,888 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:42:51,888 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:42:51,888 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:42:51,897 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:42:51,898 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:42:52,136 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:42:52,144 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:52,145 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:52,145 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:42:52,146 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:42:52,147 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:42:52,147 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:42:52,147 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:42:52,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:52,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:53,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:53,841 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:53,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:53,849 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:56,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:56,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:57,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:57,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:57,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:57,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:58,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:58,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:42:58,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:42:58,852 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:01,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:01,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:02,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:02,841 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:02,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:02,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:03,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:03,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:03,852 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:03,853 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:06,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:06,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:07,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:07,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:07,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:07,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:08,843 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:08,844 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:08,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:08,852 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:11,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:11,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:12,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:12,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:12,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:12,852 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:13,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:13,848 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:13,857 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:13,858 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:16,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:16,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:17,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:17,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:17,864 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:17,866 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:18,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:18,853 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:18,864 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:18,865 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:21,541 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:43:21,541 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:43:21,541 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:43:21,543 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:43:21,593 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:43:21,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:21,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:22,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:22,844 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:22,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:22,853 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:23,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:23,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:23,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:23,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:24,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:43:24,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:43:24,850 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:43:24,857 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:43:24,858 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:43:24,858 [screen.py:init_printer()] - Klipper not connected
2023-11-30 23:43:26,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:26,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:27,845 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:27,846 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:27,856 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:27,857 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:27,867 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:43:27,877 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:43:27,878 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:43:27,890 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:43:27,891 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:43:27,891 [screen.py:init_printer()] - Klipper not connected
2023-11-30 23:43:28,845 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:28,846 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:28,857 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:28,859 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:30,846 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:43:30,856 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:43:30,857 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:43:30,866 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:43:30,867 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:43:30,867 [screen.py:init_printer()] - Klipper not connected
2023-11-30 23:43:31,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:31,844 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:32,843 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:32,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:32,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:32,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:33,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:33,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:33,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:33,852 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:33,859 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:43:33,865 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:43:33,866 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:43:33,872 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:43:33,873 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:43:33,881 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:43:33,893 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:43:33,894 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:43:33,896 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:43:33,896 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:43:33,896 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:43:33,896 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:43:33,896 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:43:33,896 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:43:33,910 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:43:33,911 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:43:34,148 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:43:34,156 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:34,156 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:34,157 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:43:34,157 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:43:34,157 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:43:34,157 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-11-30 23:43:34,157 [printer.py:change_state()] - Adding callback for state: startup
2023-11-30 23:43:36,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:36,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:37,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:37,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:37,863 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:37,865 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:38,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:38,843 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:38,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:38,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:39,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:39,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:41,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:41,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:42,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:42,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:42,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:42,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:43,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:43,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:43,861 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:43,862 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:44,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:44,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:46,853 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:46,855 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:47,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:47,853 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:47,866 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:47,867 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:48,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:48,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:48,862 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:48,863 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:49,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:49,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:51,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:51,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:52,846 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:52,847 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:52,859 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:52,860 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:53,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:53,853 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:53,866 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:53,867 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:54,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:54,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:56,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:56,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:57,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:57,850 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:57,861 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:57,863 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:58,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:58,853 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:58,866 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:58,867 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:43:59,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:43:59,852 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:01,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:01,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:02,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:02,851 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:02,864 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:02,866 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:03,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:03,852 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:03,867 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:03,869 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:04,846 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:04,848 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:06,698 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-11-30 23:44:06,698 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:44:06,698 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:44:06,701 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:44:06,783 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:44:06,840 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:06,841 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:07,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:07,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:07,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:07,849 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:08,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:08,842 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:08,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:08,849 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-11-30 23:44:09,288 [screen.py:_websocket_callback()] - Still not initialized
2023-11-30 23:44:09,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:09,848 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:44:09,855 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:44:09,856 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:44:09,862 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:44:09,868 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:44:09,869 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['display_status', 'virtual_sdcard'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:44:09,870 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[display_status]
[virtual_sdcard]

2023-11-30 23:44:09,887 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:44:09,887 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:44:09,895 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:44:10,040 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:44:10,041 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:44:10,042 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:44:10,043 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:44:10,043 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:44:10,043 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:44:10,043 [printer.py:reinit()] - # Output pins: 0
2023-11-30 23:44:10,043 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:44:10,052 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:44:10,053 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:44:10,299 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-11-30 23:44:10,306 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:10,313 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:44:10,320 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:44:10,322 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:44:10,322 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:44:10,322 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:44:10,324 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:44:10,324 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-11-30 23:44:10,324 [printer.py:change_state()] - Adding callback for state: ready
2023-11-30 23:44:10,370 [screen.py:_load_panel()] - Loading panel: main_menu
2023-11-30 23:44:10,467 [main_menu.py:__init__()] - ### Making MainMenu
2023-11-30 23:44:10,474 [main_menu.py:add_device()] - Adding device: extruder
2023-11-30 23:44:10,483 [main_menu.py:add_device()] - Adding device: heater_bed
2023-11-30 23:44:10,510 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-11-30 23:44:11,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:11,861 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:44:11,875 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:44:11,876 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:44:12,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:12,861 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:44:12,875 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:44:12,876 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:44:12,887 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:12,897 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:44:12,908 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:44:12,909 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:44:13,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:13,868 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:44:13,885 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:44:13,887 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:44:13,897 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:44:13,904 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:44:13,912 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:44:13,913 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:51:57,830 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-11-30 23:51:57,830 [printer.py:change_state()] - Adding callback for state: disconnected
2023-11-30 23:51:57,831 [screen.py:state_disconnected()] - ### Going to disconnected
2023-11-30 23:51:57,832 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:51:57,874 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-11-30 23:52:00,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:00,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:00,850 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:52:00,857 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:52:00,858 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:52:00,858 [screen.py:init_printer()] - Klipper not connected
2023-11-30 23:52:03,840 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:03,848 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:03,849 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:52:03,855 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:52:03,855 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:52:03,855 [screen.py:init_printer()] - Klipper not connected
2023-11-30 23:52:06,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:06,859 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:06,860 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:52:06,872 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:52:06,873 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:52:06,873 [screen.py:init_printer()] - Klipper not connected
2023-11-30 23:52:09,852 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:09,866 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:09,867 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:52:09,879 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:52:09,881 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:52:09,881 [screen.py:init_printer()] - Klipper not connected
2023-11-30 23:52:12,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:12,847 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:52:12,848 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:52:12,854 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:52:12,855 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:52:12,855 [screen.py:init_printer()] - Klipper not connected
2023-11-30 23:52:23,022 [screen.py:_websocket_callback()] - Still not initialized
2023-11-30 23:56:48,739 [screen.py:_websocket_callback()] - Still not initialized
2023-11-30 23:57:29,566 [screen.py:_websocket_callback()] - Still not initialized
2023-11-30 23:58:09,413 [KlippyWebsocket.py:connect()] - Already connected
2023-11-30 23:58:54,442 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:58:54,453 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-11-30 23:58:54,454 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'octoprint_compat', 'history', 'authorization'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['display_status', 'virtual_sdcard'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-11-30 23:58:54,456 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[display_status]
[virtual_sdcard]

2023-11-30 23:58:54,472 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-11-30 23:58:54,473 [printer.py:configure_cameras()] - Cameras: []
2023-11-30 23:58:54,484 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-11-30 23:58:54,559 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-11-30 23:58:54,561 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-11-30 23:58:54,563 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-11-30 23:58:54,564 [printer.py:reinit()] - # Extruders: 1
2023-11-30 23:58:54,564 [printer.py:reinit()] - # Temperature devices: 1
2023-11-30 23:58:54,564 [printer.py:reinit()] - # Fans: 2
2023-11-30 23:58:54,564 [printer.py:reinit()] - # Output pins: 1
2023-11-30 23:58:54,564 [printer.py:reinit()] - # Leds: 0
2023-11-30 23:58:54,576 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-11-30 23:58:54,578 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-11-30 23:58:54,827 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-11-30 23:58:54,853 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-11-30 23:58:54,862 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-11-30 23:58:54,876 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-11-30 23:58:54,877 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-11-30 23:58:54,878 [files.py:initialize()] - Gcodes path: None
2023-11-30 23:58:54,878 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-11-30 23:58:54,878 [screen.py:init_printer()] - Printer initialized
2023-11-30 23:58:54,879 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-11-30 23:58:54,879 [printer.py:change_state()] - Adding callback for state: ready
2023-11-30 23:58:54,954 [screen.py:show_panel()] - Reinitializing panel
2023-11-30 23:58:55,014 [main_menu.py:__init__()] - ### Making MainMenu
2023-11-30 23:58:55,020 [main_menu.py:add_device()] - Adding device: extruder
2023-11-30 23:58:55,026 [main_menu.py:add_device()] - Adding device: heater_bed
2023-11-30 23:58:55,054 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-11-30 23:59:08,934 [screen.py:_load_panel()] - Loading panel: gcode_macros
2023-11-30 23:59:09,002 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > gcode_macros
2023-11-30 23:59:12,597 [screen.py:show_popup_message()] - echo: TOGGLE_LIGHT 
2023-11-30 23:59:12,601 [screen.py:_send_action()] - printer.gcode.script: {'script': 'TOGGLE_LIGHT'}
2023-11-30 23:59:17,457 [screen.py:show_popup_message()] - echo: TOGGLE_LIGHT 
2023-11-30 23:59:17,463 [screen.py:_send_action()] - printer.gcode.script: {'script': 'TOGGLE_LIGHT'}
2023-11-30 23:59:35,805 [screen.py:show_popup_message()] - echo: TOGGLE_LIGHT 
2023-11-30 23:59:35,814 [screen.py:_send_action()] - printer.gcode.script: {'script': 'TOGGLE_LIGHT'}
2023-11-30 23:59:42,955 [screen.py:show_popup_message()] - echo: TOGGLE_LIGHT 
2023-11-30 23:59:42,960 [screen.py:_send_action()] - printer.gcode.script: {'script': 'TOGGLE_LIGHT'}
2023-11-30 23:59:51,068 [screen.py:_menu_go_back()] - #### Menu go back
2023-11-30 23:59:51,109 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-11-30 23:59:53,561 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > gcode_macros
2023-11-30 23:59:56,571 [screen_panel.py:load_menu()] - loading menu options
2023-11-30 23:59:59,334 [screen_panel.py:unload_menu()] - self.menu: ['macros_menu', 'options_menu']
2023-12-01 00:00:01,206 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 00:00:01,227 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 00:00:02,781 [screen.py:_load_panel()] - Loading panel: move
2023-12-01 00:00:02,896 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-01 00:00:04,116 [screen.py:_load_panel()] - Loading panel: menu
2023-12-01 00:00:04,201 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2023-12-01 00:00:04,210 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2023-12-01 00:00:04,212 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2023-12-01 00:00:05,626 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2023-12-01 00:00:32,276 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 00:00:32,317 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-01 00:00:37,222 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 00:00:37,244 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 00:00:41,511 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 00:00:41,511 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 00:00:41,520 [screen.py:_load_panel()] - Loading panel: menu
2023-12-01 00:00:41,753 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 00:00:41,762 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 00:00:41,766 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 00:00:41,773 [menu.py:arrangeMenuItems()] - X > more power
2023-12-01 00:00:41,775 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 00:00:41,780 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 00:00:41,786 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 00:00:47,449 [screen.py:_load_panel()] - Loading panel: system
2023-12-01 00:00:47,497 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status
2023-12-01 00:00:47,505 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-12-01 00:00:47,508 [system.py:_already_updated()] - fluidd v1.26.3
2023-12-01 00:00:47,510 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-12-01 00:00:47,518 [system.py:_already_updated()] - klipper v0.12.0-12
2023-12-01 00:00:47,522 [system.py:_already_updated()] - mainsail v2.8.0
2023-12-01 00:00:47,524 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-12-01 00:00:47,532 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-12-01 00:00:47,554 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > system
2023-12-01 00:00:47,569 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status?refresh=false
2023-12-01 00:00:47,570 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-12-01 00:00:47,574 [system.py:_already_updated()] - fluidd v1.26.3
2023-12-01 00:00:47,576 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-12-01 00:00:47,578 [system.py:_already_updated()] - klipper v0.12.0-12
2023-12-01 00:00:47,580 [system.py:_already_updated()] - mainsail v2.8.0
2023-12-01 00:00:47,581 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-12-01 00:00:47,583 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-12-01 00:00:57,153 [KlippyGtk.py:Dialog()] - Showing dialog Restart (width=834, height=480)
2023-12-01 00:01:01,350 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 00:01:27,065 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-12-01 00:01:27,066 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-12-01 00:01:27,066 [functions.py:log_start()] - Python version: 3.11
2023-12-01 00:01:27,202 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-12-01 00:01:27,204 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-12-01 00:01:27,224 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-12-01 00:01:27,315 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-12-01 00:01:27,316 [config.py:install_language()] - Using system lang
2023-12-01 00:01:27,316 [config.py:install_language()] - Using lang en
2023-12-01 00:01:27,337 [screen.py:__init__()] - Screen resolution: 800x480
2023-12-01 00:01:27,338 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-12-01 00:01:28,057 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-12-01 00:01:28,079 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-12-01 00:01:28,098 [screen.py:initial_connection()] - Default printer: None
2023-12-01 00:01:28,098 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-01 00:01:28,099 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-12-01 00:01:28,187 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 00:01:28,201 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 00:01:28,219 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:01:28,231 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-01 00:01:28,233 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-01 00:01:28,246 [_logging.py:info()] - Websocket connected
2023-12-01 00:01:28,247 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-01 00:01:28,408 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:01:28,418 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:01:28,420 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'authorization', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 00:01:28,431 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 00:01:28,432 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 00:01:28,452 [KlippyRest.py:_do_request()] - 404 Client Error>>Not Found for url>>http://127.0.0.1:7125/printer/info
2023-12-01 00:01:28,865 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 00:01:31,776 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:01:31,784 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:01:31,785 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'authorization', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['display_status', 'virtual_sdcard'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 00:01:31,787 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[display_status]
[virtual_sdcard]

2023-12-01 00:01:31,806 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 00:01:31,807 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 00:01:31,814 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 00:01:31,860 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 00:01:31,861 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 00:01:31,863 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 00:01:31,863 [printer.py:reinit()] - # Extruders: 1
2023-12-01 00:01:31,863 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 00:01:31,863 [printer.py:reinit()] - # Fans: 2
2023-12-01 00:01:31,863 [printer.py:reinit()] - # Output pins: 1
2023-12-01 00:01:31,863 [printer.py:reinit()] - # Leds: 0
2023-12-01 00:01:31,875 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 00:01:31,876 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 00:01:32,118 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 00:01:32,127 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 00:01:32,133 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 00:01:32,141 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 00:01:32,142 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 00:01:32,142 [files.py:initialize()] - Gcodes path: None
2023-12-01 00:01:32,142 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 00:01:32,143 [screen.py:init_printer()] - Printer initialized
2023-12-01 00:01:32,143 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 00:01:32,143 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 00:01:32,190 [screen.py:_load_panel()] - Loading panel: main_menu
2023-12-01 00:01:32,266 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 00:01:32,272 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 00:01:32,279 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 00:01:32,306 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 00:04:04,230 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-12-01 00:04:04,230 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-01 00:04:04,237 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 00:04:04,278 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 00:04:31,563 [KlippyWebsocket.py:connect()] - Already connected
2023-12-01 00:04:52,799 [KlippyWebsocket.py:restart()] - Sending printer.restart
2023-12-01 00:04:52,812 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-01 00:04:52,813 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 00:04:52,814 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 00:04:52,817 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 00:04:52,873 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 00:04:56,549 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:04:56,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:04:56,557 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'authorization', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 00:04:56,563 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 00:04:56,565 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 00:04:56,571 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 00:04:56,645 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 00:04:56,646 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 00:04:56,648 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 00:04:56,648 [printer.py:reinit()] - # Extruders: 1
2023-12-01 00:04:56,648 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 00:04:56,648 [printer.py:reinit()] - # Fans: 2
2023-12-01 00:04:56,648 [printer.py:reinit()] - # Output pins: 1
2023-12-01 00:04:56,648 [printer.py:reinit()] - # Leds: 0
2023-12-01 00:04:56,657 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 00:04:56,658 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 00:04:56,899 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 00:04:56,907 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 00:04:56,914 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 00:04:56,922 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 00:04:56,922 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 00:04:56,923 [files.py:initialize()] - Gcodes path: None
2023-12-01 00:04:56,923 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 00:04:56,923 [screen.py:init_printer()] - Printer initialized
2023-12-01 00:04:56,923 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-01 00:04:56,923 [printer.py:change_state()] - Adding callback for state: error
2023-12-01 00:04:56,926 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 00:04:56,969 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 00:05:01,160 [KlippyWebsocket.py:restart_firmware()] - Sending printer.firmware_restart
2023-12-01 00:05:01,524 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-01 00:05:01,524 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 00:05:01,525 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 00:05:01,527 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 00:05:01,594 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 00:05:04,550 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:05:04,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:05:04,558 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'authorization', 'update_manager', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 00:05:04,564 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 00:05:04,565 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 00:05:04,571 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 00:05:04,607 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 00:05:04,608 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 00:05:04,610 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 00:05:04,610 [printer.py:reinit()] - # Extruders: 1
2023-12-01 00:05:04,610 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 00:05:04,610 [printer.py:reinit()] - # Fans: 2
2023-12-01 00:05:04,610 [printer.py:reinit()] - # Output pins: 1
2023-12-01 00:05:04,610 [printer.py:reinit()] - # Leds: 0
2023-12-01 00:05:04,621 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 00:05:04,622 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 00:05:04,862 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 00:05:04,870 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 00:05:04,876 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 00:05:04,883 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 00:05:04,884 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 00:05:04,884 [files.py:initialize()] - Gcodes path: None
2023-12-01 00:05:04,885 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 00:05:04,885 [screen.py:init_printer()] - Printer initialized
2023-12-01 00:05:04,885 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 00:05:04,885 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 00:05:04,889 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 00:05:04,948 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 00:05:04,954 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 00:05:04,959 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 00:05:04,984 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 00:05:28,494 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 00:05:28,494 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 00:05:28,498 [screen.py:_load_panel()] - Loading panel: menu
2023-12-01 00:05:28,699 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 00:05:28,709 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 00:05:28,713 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 00:05:28,720 [menu.py:arrangeMenuItems()] - X > more power
2023-12-01 00:05:28,722 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 00:05:28,727 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 00:05:28,733 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 00:05:29,555 [screen.py:_load_panel()] - Loading panel: system
2023-12-01 00:05:29,585 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status
2023-12-01 00:05:29,590 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-12-01 00:05:29,592 [system.py:_already_updated()] - fluidd v1.26.3
2023-12-01 00:05:29,593 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-12-01 00:05:29,598 [system.py:_already_updated()] - klipper v0.12.0-12
2023-12-01 00:05:29,599 [system.py:_already_updated()] - mainsail v2.8.0
2023-12-01 00:05:29,601 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-12-01 00:05:29,606 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-12-01 00:05:29,621 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > system
2023-12-01 00:05:29,627 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status?refresh=false
2023-12-01 00:05:29,628 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-12-01 00:05:29,632 [system.py:_already_updated()] - fluidd v1.26.3
2023-12-01 00:05:29,634 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-12-01 00:05:29,636 [system.py:_already_updated()] - klipper v0.12.0-12
2023-12-01 00:05:29,638 [system.py:_already_updated()] - mainsail v2.8.0
2023-12-01 00:05:29,640 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-12-01 00:05:29,642 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-12-01 00:05:30,876 [KlippyGtk.py:Dialog()] - Showing dialog Shutdown (width=834, height=480)
2023-12-01 00:05:32,134 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 00:05:53,308 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-12-01 00:05:53,308 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-12-01 00:05:53,308 [functions.py:log_start()] - Python version: 3.11
2023-12-01 00:05:53,470 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-12-01 00:05:53,472 [config.py:__init__()] - Config path location: /home/pi/KlipperScreen/ks_includes/defaults.conf
2023-12-01 00:05:53,492 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-12-01 00:05:53,588 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-12-01 00:05:53,589 [config.py:install_language()] - Using system lang
2023-12-01 00:05:53,589 [config.py:install_language()] - Using lang en
2023-12-01 00:05:53,610 [screen.py:__init__()] - Screen resolution: 800x480
2023-12-01 00:05:53,612 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-12-01 00:05:54,334 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-12-01 00:05:54,351 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-12-01 00:05:54,364 [screen.py:initial_connection()] - Default printer: None
2023-12-01 00:05:54,364 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-01 00:05:54,364 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-12-01 00:05:54,570 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 00:05:54,590 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 00:05:54,649 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:05:54,663 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-01 00:05:54,664 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-01 00:05:54,674 [_logging.py:info()] - Websocket connected
2023-12-01 00:05:54,675 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-01 00:05:54,807 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:05:54,817 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 00:05:54,818 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 00:05:54,830 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 00:05:54,831 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 00:05:54,846 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 00:05:54,869 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 00:05:54,871 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 00:05:54,872 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 00:05:54,872 [printer.py:reinit()] - # Extruders: 1
2023-12-01 00:05:54,872 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 00:05:54,873 [printer.py:reinit()] - # Fans: 2
2023-12-01 00:05:54,873 [printer.py:reinit()] - # Output pins: 1
2023-12-01 00:05:54,873 [printer.py:reinit()] - # Leds: 0
2023-12-01 00:05:54,884 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 00:05:54,885 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 00:05:55,118 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 00:05:55,132 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 00:05:55,133 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 00:05:55,133 [files.py:initialize()] - Gcodes path: None
2023-12-01 00:05:55,133 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 00:05:55,134 [screen.py:init_printer()] - Printer initialized
2023-12-01 00:05:55,134 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-01 00:05:55,134 [printer.py:change_state()] - Adding callback for state: startup
2023-12-01 00:06:00,405 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 00:06:00,406 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 00:06:05,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 00:06:05,405 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:17:33,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:17:33,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:17:38,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:17:38,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:17:43,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:17:43,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:17:48,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:17:48,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:17:53,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:17:53,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:17:58,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:17:58,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:03,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:03,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:08,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:08,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:13,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:13,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:18,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:18,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:23,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:23,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:28,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:28,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:33,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:33,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:38,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:38,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:41,515 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-12-01 19:18:41,515 [printer.py:change_state()] - Adding callback for state: error
2023-12-01 19:18:41,517 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:18:41,582 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:18:43,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:43,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:48,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:48,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:53,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:53,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:18:58,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:18:58,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:03,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:03,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:08,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:08,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:13,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:13,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:18,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:18,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:23,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:23,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:28,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:28,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:33,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:33,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:38,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:38,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:43,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:43,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:48,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:48,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:53,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:53,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:19:58,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:19:58,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:03,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:03,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:08,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:08,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:13,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:13,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:18,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:18,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:23,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:23,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:28,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:28,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:33,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:33,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:38,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:38,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:43,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:43,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:48,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:48,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:53,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:53,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:20:58,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:20:58,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:03,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:03,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:08,341 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:08,342 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:13,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:13,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:18,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:18,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:23,339 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:23,340 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:28,351 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:28,352 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:33,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:33,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:38,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:38,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:43,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:43,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:48,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:48,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:53,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:53,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:21:58,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:21:58,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:03,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:03,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:08,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:08,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:13,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:13,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:18,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:18,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:23,348 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:23,349 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:28,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:28,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:33,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:33,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:38,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:38,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:43,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:43,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:48,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:48,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:53,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:53,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:22:58,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:22:58,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:03,341 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:03,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:08,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:08,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:13,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:13,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:18,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:18,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:23,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:23,349 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:28,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:28,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:33,350 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:33,351 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:38,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:38,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:43,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:43,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:48,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:48,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:53,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:53,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:23:58,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:23:58,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:03,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:03,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:08,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:08,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:13,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:13,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:18,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:18,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:23,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:23,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:28,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:28,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:33,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:33,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:38,341 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:38,342 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:43,335 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:43,336 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:48,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:48,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:53,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:53,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:24:58,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:24:58,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:03,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:03,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:08,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:08,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:13,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:13,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:18,341 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:18,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:23,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:23,342 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:28,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:28,336 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:33,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:33,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:38,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:38,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:43,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:43,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:48,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:48,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:53,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:53,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:25:58,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:25:58,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:03,341 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:03,342 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:08,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:08,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:13,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:13,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:18,348 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:18,350 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:23,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:23,349 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:28,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:28,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:33,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:33,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:38,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:38,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:43,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:43,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:48,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:48,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:53,349 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:53,351 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:26:58,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:26:58,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:03,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:03,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:08,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:08,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:13,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:13,339 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:18,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:18,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:23,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:23,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:28,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:28,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:33,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:33,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:38,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:38,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:43,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:43,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:48,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:48,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:53,348 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:53,349 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:27:58,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:27:58,349 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:03,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:03,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:08,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:08,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:13,353 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:13,354 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:13,477 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-01 19:28:13,477 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-01 19:28:13,480 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:28:13,555 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:28:13,573 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-01 19:28:13,574 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:28:13,629 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:28:13,642 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 19:28:13,646 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-01 19:28:18,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:18,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:23,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:23,350 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:24,333 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 19:28:24,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:28:24,360 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-01 19:28:24,362 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-01 19:28:24,374 [_logging.py:info()] - Websocket connected
2023-12-01 19:28:24,375 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-01 19:28:24,385 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:28:24,394 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:28:24,395 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:28:24,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:28:24,405 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:28:24,405 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}}
2023-12-01 19:28:24,414 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:28:24,414 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:28:24,424 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:28:24,580 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:28:24,582 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:28:24,585 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:28:24,585 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:28:24,585 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:28:24,586 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:28:24,586 [printer.py:reinit()] - # Output pins: 1
2023-12-01 19:28:24,586 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:28:24,600 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:28:24,602 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:28:24,846 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 19:28:24,862 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:24,864 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:24,865 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:28:24,865 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:28:24,866 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:28:24,867 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-01 19:28:24,867 [printer.py:change_state()] - Adding callback for state: error
2023-12-01 19:28:24,871 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:28:24,938 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:28:25,526 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:28:26,842 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-01 19:28:26,842 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:28:26,843 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:28:26,844 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:28:26,885 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:28:28,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:28,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:30,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:30,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:30,360 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:28:30,374 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:28:30,375 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:28:30,388 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:28:30,390 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:28:30,390 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:28:30,400 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:28:30,400 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:28:30,410 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:28:30,425 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:28:30,426 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:28:30,428 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:28:30,428 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:28:30,428 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:28:30,428 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:28:30,429 [printer.py:reinit()] - # Output pins: 1
2023-12-01 19:28:30,429 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:28:30,439 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:28:30,440 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:28:30,693 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 19:28:30,705 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:30,706 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:30,707 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:28:30,707 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:28:30,707 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:28:30,708 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-01 19:28:30,708 [printer.py:change_state()] - Adding callback for state: startup
2023-12-01 19:28:33,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:33,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:35,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:35,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:36,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:36,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:38,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:38,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:40,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:40,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:41,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:41,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:43,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:43,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:45,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:45,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:46,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:46,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:48,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:48,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:50,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:50,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:50,525 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-12-01 19:28:50,525 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:28:50,525 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:28:50,527 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:28:50,576 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:28:51,339 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:51,340 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:53,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:53,339 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:54,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:28:54,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:28:54,345 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:28:54,351 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:28:54,352 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:28:54,352 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:28:54,359 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:28:54,360 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:28:54,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:28:54,379 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:28:54,381 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:28:54,382 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:28:54,383 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:28:54,383 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:28:54,383 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:28:54,383 [printer.py:reinit()] - # Output pins: 1
2023-12-01 19:28:54,383 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:28:54,391 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:28:54,392 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:28:54,643 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 19:28:54,656 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:54,658 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:54,659 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:28:54,659 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:28:54,661 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:28:54,662 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-01 19:28:54,662 [printer.py:change_state()] - Adding callback for state: startup
2023-12-01 19:28:55,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:55,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:56,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:56,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:28:58,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:28:58,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:00,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:00,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:00,361 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:00,362 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:01,335 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:01,336 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:02,258 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-12-01 19:29:02,259 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:29:02,259 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:29:02,261 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:29:02,312 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:29:03,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:03,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:05,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:05,339 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:05,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:05,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:05,356 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:05,365 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:05,366 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:29:05,374 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:29:05,374 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:29:05,374 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:29:05,382 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:29:05,384 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:29:05,392 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:29:05,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:29:05,406 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:29:05,407 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:29:05,408 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:29:05,409 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:29:05,409 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:29:05,409 [printer.py:reinit()] - # Output pins: 1
2023-12-01 19:29:05,409 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:29:05,418 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:29:05,419 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:29:05,661 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 19:29:05,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:05,669 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:05,670 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:29:05,670 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:29:05,670 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:29:05,670 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-01 19:29:05,671 [printer.py:change_state()] - Adding callback for state: startup
2023-12-01 19:29:06,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:06,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:08,348 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:08,351 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:10,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:10,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:10,362 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:10,363 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:11,339 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:11,341 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:11,350 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:11,351 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:13,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:13,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:15,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:15,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:15,359 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:15,360 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:16,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:16,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:16,355 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:16,356 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:18,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:18,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:20,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:20,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:20,357 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:20,358 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:21,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:21,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:21,360 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:21,361 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:23,339 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:23,341 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:25,339 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:25,340 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:25,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:25,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:26,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:26,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:26,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:26,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:28,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:28,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:30,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:30,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:30,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:30,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:31,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:31,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:31,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:31,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:33,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:33,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:35,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:35,339 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:35,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:35,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:36,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:36,339 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:36,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:36,348 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:38,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:38,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:40,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:40,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:40,355 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:40,357 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:41,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:41,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:41,357 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:41,359 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:43,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:43,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:43,686 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-12-01 19:29:43,686 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:29:43,687 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:29:43,688 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:29:43,743 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:29:45,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:45,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:45,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:45,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:46,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:46,338 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:46,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:46,346 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:47,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:47,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:47,346 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:29:47,353 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:29:47,354 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:29:47,354 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:29:47,361 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:29:47,362 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:29:47,362 [screen.py:init_printer()] - Klipper not connected
2023-12-01 19:29:48,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:48,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:50,341 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:50,342 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:50,353 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:50,354 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:50,366 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:50,376 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:50,377 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:29:50,387 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:29:50,388 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:29:50,389 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:29:50,399 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:29:50,401 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:29:50,401 [screen.py:init_printer()] - Klipper not connected
2023-12-01 19:29:51,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:51,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:51,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:51,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:53,341 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:53,343 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:53,354 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:53,362 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:53,364 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:29:53,371 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:29:53,372 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:29:53,372 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:29:53,379 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:29:53,381 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:29:53,381 [screen.py:init_printer()] - Klipper not connected
2023-12-01 19:29:55,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:55,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:55,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:55,344 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:56,078 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:29:56,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:56,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:56,357 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:56,358 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:29:56,369 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:56,380 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:29:56,381 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:29:56,384 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:29:56,415 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:29:56,416 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:29:56,417 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:29:56,426 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:29:56,426 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:29:56,433 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:29:56,570 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:29:56,571 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:29:56,572 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:29:56,572 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:29:56,572 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:29:56,573 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:29:56,573 [printer.py:reinit()] - # Output pins: 1
2023-12-01 19:29:56,573 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:29:56,581 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:29:56,582 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:29:56,819 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 19:29:56,827 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:56,834 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:29:56,841 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:29:56,842 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:29:56,842 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:29:56,842 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:29:56,843 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:29:56,843 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:29:56,843 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:29:56,882 [screen.py:_load_panel()] - Loading panel: main_menu
2023-12-01 19:29:56,952 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:29:56,960 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:29:56,966 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:29:56,993 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:29:58,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:29:58,344 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:29:58,353 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:29:58,355 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:30:00,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:30:00,344 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:30:00,351 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:30:00,353 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:30:00,359 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:30:00,366 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:30:00,374 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:30:00,375 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:30:01,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:30:01,350 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:30:01,359 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:30:01,360 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:30:01,368 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:30:01,375 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:30:01,384 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:30:01,385 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:32:36,048 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-01 19:32:36,048 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-01 19:32:36,053 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:32:36,156 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:32:36,169 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-01 19:32:36,169 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:32:36,211 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:32:36,223 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 19:32:36,226 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-01 19:32:46,334 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 19:32:46,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:32:46,358 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-01 19:32:46,359 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-01 19:32:46,371 [_logging.py:info()] - Websocket connected
2023-12-01 19:32:46,371 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-01 19:32:46,383 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:32:46,393 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:32:46,394 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Failed to load power device [power light]<br/>Error parsing option (pin) from section [power light]', "Unparsed config option 'pin: !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:32:46,397 [screen.py:show_popup_message()] - error: 
Moonraker warnings:
Failed to load power device [power light]
Error parsing option (pin) from section [power light]
Unparsed config option 'pin:
 !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:32:46,424 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:32:46,425 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:32:46,425 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}}
2023-12-01 19:32:46,433 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:32:46,434 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:32:46,444 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:32:46,713 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:32:46,716 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:32:46,719 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:32:46,719 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:32:46,719 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:32:46,719 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:32:46,720 [printer.py:reinit()] - # Output pins: 1
2023-12-01 19:32:46,720 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:32:46,735 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:32:46,737 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:32:46,981 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 19:32:46,995 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:32:47,009 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:32:47,021 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:32:47,022 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:32:47,023 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:32:47,023 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:32:47,025 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:32:47,025 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2023-12-01 19:32:47,026 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-01 19:32:47,155 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:32:47,198 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:32:58,162 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:37:28,574 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-01 19:37:28,574 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-01 19:37:28,575 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:37:28,625 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:37:28,641 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-01 19:37:28,642 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:37:28,688 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:37:28,700 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 19:37:28,703 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-01 19:37:39,334 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 19:37:39,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:37:39,360 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-01 19:37:39,361 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-01 19:37:39,373 [_logging.py:info()] - Websocket connected
2023-12-01 19:37:39,373 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-01 19:37:39,387 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:37:39,397 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:37:39,398 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Failed to load power device [power light]<br/>Error parsing option (pin) from section [power light]', "Unparsed config option 'pin: !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:37:39,400 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Failed to load power device [power light]
Error parsing option (pin) from section [power light]
Unparsed config option 'pin:
 !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2023-12-01 19:37:39,421 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:37:39,422 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:37:39,422 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}}
2023-12-01 19:37:39,430 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:37:39,431 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:37:39,442 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:37:39,490 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:37:39,491 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'output_pin caselight': {'pin': '!rpi:gpio14', 'value': '1'}, 'gcode_macro TOGGLE_LIGHT': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}"}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'output_pin caselight': {'pwm': False, 'pin': '!rpi:gpio14', 'maximum_mcu_duration': 0.0, 'value': 1.0, 'shutdown_value': 0.0}, 'gcode_macro toggle_light': {'gcode': "\nSET_PIN PIN=caselight VALUE={(not printer['output_pin caselight'].value)|int}", 'description': 'G-Code macro'}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:37:39,493 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:37:39,493 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:37:39,494 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:37:39,494 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:37:39,494 [printer.py:reinit()] - # Output pins: 1
2023-12-01 19:37:39,494 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:37:39,505 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:37:39,506 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:37:39,752 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&output_pin caselight
2023-12-01 19:37:39,764 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:37:39,765 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:37:39,766 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:37:39,766 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:37:39,767 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:37:39,767 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-01 19:37:39,767 [printer.py:change_state()] - Adding callback for state: error
2023-12-01 19:37:39,892 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:37:39,935 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:37:44,299 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-01 19:37:44,300 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:37:44,300 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:37:44,301 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:37:44,342 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:37:45,348 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:37:45,350 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:37:47,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:37:47,360 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:37:47,362 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Failed to load power device [power light]<br/>Error parsing option (pin) from section [power light]', "Unparsed config option 'pin: !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:37:47,365 [screen.py:show_popup_message()] - warning: 
Moonraker warnings:
Failed to load power device [power light]
Error parsing option (pin) from section [power light]
Unparsed config option 'pin:
 !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

2023-12-01 19:37:47,397 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:37:47,399 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:37:47,400 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}}
2023-12-01 19:37:47,413 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:37:47,414 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:37:47,426 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:37:47,440 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:37:47,442 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:37:47,443 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:37:47,444 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:37:47,444 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:37:47,444 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:37:47,444 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:37:47,444 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:37:47,454 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:37:47,455 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:37:47,705 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:37:47,719 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:37:47,721 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:37:47,721 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:37:47,721 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:37:47,722 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:37:47,723 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-01 19:37:47,723 [printer.py:change_state()] - Adding callback for state: startup
2023-12-01 19:37:50,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:37:50,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:37:53,346 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:37:53,347 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:37:54,875 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:37:55,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:37:55,345 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:37:58,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:37:58,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:38:00,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:38:00,337 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:38:02,224 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-12-01 19:38:02,225 [printer.py:change_state()] - Adding callback for state: error
2023-12-01 19:38:02,226 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:38:02,268 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:38:03,335 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:38:03,336 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:38:03,577 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-01 19:38:03,577 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:38:03,578 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:38:03,579 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:38:03,621 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:38:05,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:38:05,339 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 19:38:06,407 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:38:07,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:38:07,354 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:38:07,356 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Failed to load power device [power light]<br/>Error parsing option (pin) from section [power light]', "Unparsed config option 'pin: !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:38:07,359 [screen.py:show_popup_message()] - error: 
Moonraker warnings:
Failed to load power device [power light]
Error parsing option (pin) from section [power light]
Unparsed config option 'pin:
 !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:38:07,385 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:38:07,387 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:38:07,387 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:38:07,397 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:38:07,399 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:38:07,411 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:38:07,665 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:38:07,667 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:38:07,670 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:38:07,670 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:38:07,670 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:38:07,670 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:38:07,670 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:38:07,671 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:38:07,685 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:38:07,687 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:38:07,932 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:38:07,947 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:38:07,963 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:38:07,975 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:38:07,976 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:38:07,976 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:38:07,976 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:38:07,977 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:38:07,977 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:38:07,977 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:38:08,102 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:38:08,161 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:38:08,168 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:38:08,173 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:38:08,198 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:38:08,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:38:08,343 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:38:08,351 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:38:08,352 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:38:10,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:38:10,343 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:38:10,351 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:38:10,352 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:39:20,700 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-01 19:39:20,700 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:39:20,701 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:39:20,705 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:39:20,784 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:39:23,282 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:39:24,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:39:24,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:39:24,345 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Failed to load power device [power light]<br/>Error parsing option (pin) from section [power light]', "Unparsed config option 'pin: !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:39:24,347 [screen.py:show_popup_message()] - error: 
Moonraker warnings:
Failed to load power device [power light]
Error parsing option (pin) from section [power light]
Unparsed config option 'pin:
 !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:39:24,368 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:39:24,368 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:39:24,369 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:39:24,375 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:39:24,375 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:39:24,382 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:39:24,533 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:39:24,534 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:39:24,535 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:39:24,535 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:39:24,535 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:39:24,536 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:39:24,536 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:39:24,536 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:39:24,544 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:39:24,544 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:39:24,790 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:39:24,797 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:39:24,805 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:39:24,812 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:39:24,813 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:39:24,813 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:39:24,813 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:39:24,814 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:39:24,814 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:39:24,814 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:39:24,909 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:39:24,972 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:39:24,980 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:39:24,986 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:39:25,012 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:39:49,691 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-01 19:39:49,691 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:39:49,692 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:39:49,695 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:39:49,763 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:39:52,271 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:39:53,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:39:53,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:39:53,345 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': ['Failed to load power device [power light]<br/>Error parsing option (pin) from section [power light]', "Unparsed config option 'pin: !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error."], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:39:53,347 [screen.py:show_popup_message()] - error: 
Moonraker warnings:
Failed to load power device [power light]
Error parsing option (pin) from section [power light]
Unparsed config option 'pin:
 !gpiochip0/gpio14' detected in section [power light].  This may be an option no longer available or could be the result of a module that failed to load.  In the future this will result in a startup error.

Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:39:53,368 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:39:53,369 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:39:53,369 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}}
2023-12-01 19:39:53,376 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:39:53,377 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:39:53,385 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:39:53,522 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:39:53,524 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:39:53,525 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:39:53,526 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:39:53,526 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:39:53,526 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:39:53,526 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:39:53,526 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:39:53,534 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:39:53,535 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:39:53,783 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:39:53,793 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:39:53,801 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:39:53,808 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:39:53,809 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:39:53,810 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:39:53,810 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:39:53,811 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:39:53,811 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:39:53,811 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:39:53,907 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:39:53,965 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:39:53,971 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:39:53,976 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:39:54,001 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:40:23,830 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-01 19:40:23,831 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-01 19:40:23,835 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:40:23,916 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:40:23,928 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-01 19:40:23,929 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:40:23,971 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:40:23,983 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 19:40:23,987 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-01 19:40:34,335 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 19:40:34,350 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:40:34,364 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-01 19:40:34,367 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-01 19:40:34,379 [_logging.py:info()] - Websocket connected
2023-12-01 19:40:34,379 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-01 19:40:34,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:40:34,412 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:40:34,414 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:40:34,418 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:40:34,448 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:40:34,449 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:40:34,450 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-01 19:40:34,456 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:40:34,457 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:40:34,464 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:40:34,496 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:40:34,497 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:40:34,499 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:40:34,499 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:40:34,499 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:40:34,499 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:40:34,499 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:40:34,499 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:40:34,508 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:40:34,509 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:40:34,751 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:40:34,758 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:40:34,764 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:40:34,772 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:40:34,773 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:40:34,773 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:40:34,773 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:40:34,773 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:40:34,774 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2023-12-01 19:40:34,774 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-01 19:40:34,813 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:40:34,854 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:40:47,697 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-01 19:40:47,698 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:40:47,700 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:40:47,702 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:40:47,767 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:40:51,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:40:51,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:40:51,345 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:40:51,351 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:40:51,352 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:40:51,352 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-01 19:40:51,359 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:40:51,360 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:40:51,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:40:51,378 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:40:51,380 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:40:51,382 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:40:51,382 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:40:51,382 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:40:51,383 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:40:51,383 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:40:51,383 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:40:51,391 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:40:51,392 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:40:51,634 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:40:51,642 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:40:51,648 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:40:51,656 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:40:51,657 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:40:51,657 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:40:51,657 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:40:51,658 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:40:51,658 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-01 19:40:51,658 [printer.py:change_state()] - Adding callback for state: startup
2023-12-01 19:40:55,575 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:40:58,895 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-01 19:40:58,896 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:40:58,898 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:40:58,957 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:40:58,963 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:40:58,968 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:40:58,993 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:43:05,669 [screen.py:_load_panel()] - Loading panel: gcode_macros
2023-12-01 19:43:05,721 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > gcode_macros
2023-12-01 19:43:10,537 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:43:10,558 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:43:12,026 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:43:12,026 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:43:12,030 [screen.py:_load_panel()] - Loading panel: menu
2023-12-01 19:43:12,234 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:43:12,244 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:43:12,249 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:43:12,254 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:43:12,258 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:43:12,264 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:43:12,271 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:43:30,434 [KlippyWebsocket.py:emergency_stop()] - Sending printer.emergency_stop
2023-12-01 19:43:30,571 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-12-01 19:43:30,571 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-01 19:43:30,573 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:43:30,616 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:43:30,692 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:43:40,523 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-12-01 19:43:40,523 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-12-01 19:43:40,526 [screen.py:_load_panel()] - Loading panel: menu
2023-12-01 19:43:40,534 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 19:43:40,591 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-01 19:43:40,597 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 19:43:42,238 [screen.py:_load_panel()] - Loading panel: settings
2023-12-01 19:43:42,383 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > settings
2023-12-01 19:43:50,365 [screen_panel.py:switch_config_option()] - [main] confirm_estop toggled True
2023-12-01 19:43:50,367 [config.py:save_user_config_options()] - Creating a new config file in /home/pi/printer_data/config/KlipperScreen.conf
2023-12-01 19:43:51,438 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:43:51,456 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-01 19:43:51,466 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 19:43:53,814 [screen.py:_load_panel()] - Loading panel: power
2023-12-01 19:43:53,830 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > power
2023-12-01 19:43:58,871 [power.py:on_switch()] - Power toggled my_light
2023-12-01 19:43:58,871 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-01 19:43:58,880 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:43:59,817 [power.py:on_switch()] - Power toggled printer
2023-12-01 19:43:59,818 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-01 19:43:59,827 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:44:01,101 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:44:01,110 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-01 19:44:01,115 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 19:44:01,849 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-01 19:44:01,849 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:44:01,849 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:44:01,850 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:44:01,897 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:44:03,432 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:44:05,342 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:44:05,353 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:44:05,354 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:44:05,357 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:44:05,385 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:44:05,386 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:44:05,386 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-01 19:44:05,396 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:44:05,397 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:44:05,408 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:44:05,438 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:44:05,440 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:44:05,442 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:44:05,442 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:44:05,442 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:44:05,442 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:44:05,443 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:44:05,443 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:44:05,455 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:44:05,456 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:44:05,705 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:44:05,722 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:44:05,737 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:44:05,754 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:44:05,755 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:44:05,756 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:44:05,756 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:44:05,757 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:44:05,758 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:44:05,758 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:44:05,810 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:44:05,885 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:44:05,891 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:44:05,897 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:44:05,922 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:44:12,871 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:44:12,871 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:44:12,881 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:44:13,120 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:44:13,129 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:44:13,134 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:44:13,139 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:44:13,143 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:44:13,148 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:44:13,155 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:44:15,469 [screen.py:_menu_go_back()] - #### Menu go home
2023-12-01 19:44:15,490 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:44:16,873 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:44:16,874 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:44:16,901 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:44:16,912 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:44:16,917 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:44:16,923 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:44:16,928 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:44:16,933 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:44:16,939 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:44:18,396 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:44:18,459 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > gcode_macros
2023-12-01 19:44:25,346 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:44:25,389 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:44:25,403 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:44:25,408 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:44:25,413 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:44:25,418 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:44:25,423 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:44:25,429 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:44:30,042 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:44:30,194 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > settings
2023-12-01 19:44:34,482 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:44:34,528 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:44:34,545 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:44:34,552 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:44:34,559 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:44:34,567 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:44:34,574 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:44:34,583 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:44:37,036 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:44:37,056 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > power
2023-12-01 19:44:40,150 [power.py:on_switch()] - Power toggled my_light
2023-12-01 19:44:40,150 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: my_light
2023-12-01 19:44:40,160 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:44:43,419 [power.py:on_switch()] - Power toggled my_light
2023-12-01 19:44:43,420 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-01 19:44:43,428 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 19:44:54,036 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:44:54,095 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:44:54,108 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:44:54,112 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:44:54,117 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:44:54,122 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:44:54,126 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:44:54,133 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:44:55,661 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:44:55,682 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:45:00,255 [heatergraph.py:event_cb()] - Graph area: 215.99545288085938 71.99453735351562
2023-12-01 19:45:01,447 [heatergraph.py:event_cb()] - Graph area: 298.99420166015625 138.9935302734375
2023-12-01 19:45:03,356 [screen.py:_load_panel()] - Loading panel: print
2023-12-01 19:45:03,400 [print.py:__init__()] - 24h time is True
2023-12-01 19:45:03,443 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > print
2023-12-01 19:45:03,444 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:45:04,933 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:45:04,954 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:45:10,374 [main_menu.py:verify_max_temp()] - 50/150
2023-12-01 19:45:10,375 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S50
2023-12-01 19:45:14,041 [main_menu.py:verify_max_temp()] - 90/240
2023-12-01 19:45:14,042 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S90
2023-12-01 19:45:24,782 [screen.py:_load_panel()] - Loading panel: move
2023-12-01 19:45:24,878 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-01 19:45:30,966 [screen.py:_load_panel()] - Loading panel: menu
2023-12-01 19:45:31,096 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2023-12-01 19:45:31,109 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2023-12-01 19:45:31,111 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2023-12-01 19:45:32,965 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2023-12-01 19:46:02,500 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:46:02,545 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-01 19:46:04,353 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:46:04,373 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:46:06,065 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:46:06,066 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:46:06,094 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:46:06,104 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:46:06,109 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:46:06,113 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:46:06,118 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:46:06,122 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:46:06,129 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:46:09,706 [screen.py:_load_panel()] - Loading panel: bed_mesh
2023-12-01 19:46:09,766 [bed_mesh.py:add_profile()] - Adding Profile: default
2023-12-01 19:46:09,782 [bed_mesh.py:add_profile()] - Adding Profile: x1
2023-12-01 19:46:09,808 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2023-12-01 19:46:09,809 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:46:09,810 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:46:18,030 [keyboard.py:__init__()] - Keyboard en
2023-12-01 19:46:18,230 [screen.py:update_size()] - Size changed: 800x480
2023-12-01 19:46:26,425 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:28,368 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:31,287 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:32,023 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:33,388 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:34,259 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:34,727 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:34,895 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:35,039 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:46:42,024 [screen.py:show_popup_message()] - echo: Calibrating
2023-12-01 19:46:42,032 [screen.py:_send_action()] - printer.gcode.script: {'script': 'BED_MESH_CALIBRATE'}
2023-12-01 19:46:42,036 [printer.py:get_probe()] - Probe type: probe
2023-12-01 19:47:18,033 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:47:18,057 [bed_mesh.py:activate_mesh()] - Active None changing to default
2023-12-01 19:47:23,019 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:47:23,020 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SAVE_CONFIG'}
2023-12-01 19:47:24,053 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-01 19:47:24,053 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:47:24,053 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:47:24,056 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:47:24,127 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:47:26,629 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:47:27,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:47:27,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:47:27,345 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:47:27,347 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:47:27,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:47:27,368 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:47:27,369 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-01 19:47:27,379 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:47:27,381 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:47:27,389 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:47:27,628 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:47:27,629 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.112500, 0.115000, 0.037500, -0.040000, -0.167500\n0.142500, 0.075000, 0.087500, 0.032500, -0.075000\n0.112500, 0.127500, 0.110000, 0.027500, -0.077500\n0.000000, 0.022500, 0.057500, 0.025000, -0.030000\n-0.107500, -0.035000, -0.037500, 0.012500, -0.047500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.1125, 0.115, 0.0375, -0.04, -0.1675], [0.1425, 0.075, 0.0875, 0.0325, -0.075], [0.1125, 0.1275, 0.11, 0.0275, -0.0775], [0.0, 0.0225, 0.0575, 0.025, -0.03], [-0.1075, -0.035, -0.0375, 0.0125, -0.0475]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:47:27,630 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:47:27,630 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:47:27,631 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:47:27,631 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:47:27,631 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:47:27,631 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:47:27,639 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:47:27,640 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:47:27,885 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:47:27,894 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:47:27,900 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:47:27,907 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:47:27,908 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:47:27,908 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:47:27,908 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:47:27,909 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:47:27,909 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:47:27,909 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:47:27,947 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:47:28,005 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:47:28,012 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:47:28,017 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:47:28,050 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:47:44,598 [main_menu.py:verify_max_temp()] - 50/150
2023-12-01 19:47:44,598 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S50
2023-12-01 19:47:46,918 [main_menu.py:verify_max_temp()] - 90/240
2023-12-01 19:47:46,918 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S90
2023-12-01 19:47:49,909 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:47:49,910 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:47:49,914 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:47:50,117 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:47:50,127 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:47:50,132 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:47:50,137 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:47:50,141 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:47:50,145 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:47:50,152 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:47:51,667 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:47:51,689 [bed_mesh.py:add_profile()] - Adding Profile: default
2023-12-01 19:47:51,698 [bed_mesh.py:add_profile()] - Adding Profile: x1
2023-12-01 19:47:51,718 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2023-12-01 19:47:51,718 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:47:51,718 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:47:58,262 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='x1'"}
2023-12-01 19:48:02,551 [screen.py:show_popup_message()] - echo: Calibrating
2023-12-01 19:48:02,558 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G28
2023-12-01 19:48:02,559 [screen.py:_send_action()] - printer.gcode.script: {'script': 'BED_MESH_CALIBRATE'}
2023-12-01 19:48:02,563 [printer.py:get_probe()] - Probe type: probe
2023-12-01 19:49:05,875 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f71a2c200 (GtkDialog at 0x27e550f0)>
2023-12-01 19:49:05,918 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:49:05,942 [bed_mesh.py:activate_mesh()] - Active None changing to default
2023-12-01 19:49:14,390 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:49:14,391 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SAVE_CONFIG'}
2023-12-01 19:49:15,436 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-01 19:49:15,436 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:49:15,437 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:49:15,440 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:49:15,519 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:49:17,833 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:49:18,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:49:18,344 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:49:18,344 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:49:18,346 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:49:18,365 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:49:18,367 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:49:18,367 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-01 19:49:18,374 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:49:18,375 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:49:18,382 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:49:18,587 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:49:18,589 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '1.890'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.055000, 0.025000, -0.050000, -0.120000, -0.250000\n0.057500, -0.020000, 0.002500, -0.065000, -0.150000\n0.030000, 0.035000, 0.022500, -0.070000, -0.157500\n-0.095000, -0.077500, -0.045000, -0.082500, -0.112500\n-0.215000, -0.147500, -0.142500, -0.097500, -0.142500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 1.89, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.055, 0.025, -0.05, -0.12, -0.25], [0.0575, -0.02, 0.0025, -0.065, -0.15], [0.03, 0.035, 0.0225, -0.07, -0.1575], [-0.095, -0.0775, -0.045, -0.0825, -0.1125], [-0.215, -0.1475, -0.1425, -0.0975, -0.1425]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:49:18,591 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:49:18,591 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:49:18,591 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:49:18,591 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:49:18,591 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:49:18,591 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:49:18,602 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:49:18,604 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:49:18,839 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:49:18,849 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:49:18,854 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:49:18,862 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:49:18,863 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:49:18,863 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:49:18,863 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:49:18,863 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:49:18,864 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:49:18,864 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:49:18,900 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:49:18,957 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:49:18,963 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:49:18,969 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:49:18,994 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:49:21,803 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:49:21,803 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:49:21,814 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:49:22,050 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:49:22,060 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:49:22,065 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:49:22,069 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:49:22,088 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:49:22,093 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:49:22,100 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:49:22,915 [screen.py:_load_panel()] - Loading panel: zcalibrate
2023-12-01 19:49:22,930 [printer.py:get_probe()] - Probe type: probe
2023-12-01 19:49:22,931 [zcalibrate.py:__init__()] - Z offset: 1.89
2023-12-01 19:49:22,956 [zcalibrate.py:__init__()] - Available functions for calibration: ['probe']
2023-12-01 19:49:22,973 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > zcalibrate
2023-12-01 19:49:24,505 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:49:24,532 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:49:24,543 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:49:24,549 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:49:24,555 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:49:24,560 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:49:24,564 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:49:24,570 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:49:25,707 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:49:25,727 [bed_mesh.py:add_profile()] - Adding Profile: default
2023-12-01 19:49:25,736 [bed_mesh.py:add_profile()] - Adding Profile: x1
2023-12-01 19:49:25,754 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2023-12-01 19:49:25,755 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:49:25,755 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:49:27,920 [keyboard.py:__init__()] - Keyboard en
2023-12-01 19:49:34,459 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:37,487 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:38,015 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:38,219 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:38,371 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:38,540 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:39,223 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:39,755 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:40,091 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:42,916 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:43,391 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:43,583 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:43,926 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:44,126 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:44,274 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:44,426 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:44,594 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:44,766 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:44,894 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:45,066 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:45,210 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:45,382 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:45,550 [functions.py:logging_exception_handler()] - Uncaught exception <class 'AttributeError'>: 'NoneType' object has no attribute 'set_sensitive'
  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 246, in create_profile
    self.calibrate_mesh(None)

  File "/home/pi/KlipperScreen/panels/bed_mesh.py", line 252, in calibrate_mesh
    widget.set_sensitive(False)
    ^^^^^^^^^^^^^^^^^^^^
NoneType: None
2023-12-01 19:49:53,782 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='x1'"}
2023-12-01 19:49:55,422 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='x1'"}
2023-12-01 19:49:55,766 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='x1'"}
2023-12-01 19:50:00,666 [screen.py:_menu_go_back()] - #### Menu go home
2023-12-01 19:50:00,707 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:50:03,637 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:50:03,638 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:50:03,664 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:50:03,674 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:50:03,679 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:50:03,683 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:50:03,688 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:50:03,692 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:50:03,698 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:50:10,230 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > zcalibrate
2023-12-01 19:50:19,255 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G28
2023-12-01 19:50:19,256 [zcalibrate.py:_move_to_position()] - Using safe_z x:122.0
2023-12-01 19:50:19,256 [zcalibrate.py:_move_to_position()] - Using safe_z y:183.0
2023-12-01 19:50:19,257 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G91
G0 Z20 F1200.0
2023-12-01 19:50:19,257 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2023-12-01 19:50:19,262 [zcalibrate.py:_move_to_position()] - Configured probing position X: 122.0 Y: 183.0
2023-12-01 19:50:19,262 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G0 X122.0 Y183.0 F3000
2023-12-01 19:50:19,263 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: PROBE_CALIBRATE
2023-12-01 19:51:01,800 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:51:06,381 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:51:08,682 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:51:09,858 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:51:11,798 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:51:12,510 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:51:15,894 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+1
2023-12-01 19:51:20,247 [zcalibrate.py:change_distance()] - ### Distance .1
2023-12-01 19:51:21,482 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:23,006 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:23,610 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:24,296 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:26,102 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:26,870 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:27,382 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:27,958 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:28,302 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:28,806 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.1
2023-12-01 19:51:31,097 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.1
2023-12-01 19:51:34,550 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.1
2023-12-01 19:51:51,974 [zcalibrate.py:change_distance()] - ### Distance .05
2023-12-01 19:51:52,557 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:51:53,114 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:51:55,822 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:52:01,154 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:52:01,394 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:52:01,591 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:52:04,046 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:52:06,218 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:52:07,542 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:52:10,458 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:52:11,010 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:52:12,638 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:52:13,730 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:52:18,178 [zcalibrate.py:change_distance()] - ### Distance .01
2023-12-01 19:52:18,954 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.01
2023-12-01 19:52:23,782 [zcalibrate.py:accept()] - Accepting Z position
2023-12-01 19:52:23,782 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: ACCEPT
2023-12-01 19:52:23,796 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f6322f500 (GtkDialog at 0x281d0870)>
2023-12-01 19:52:23,826 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:52:25,863 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:52:25,864 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SAVE_CONFIG'}
2023-12-01 19:52:26,891 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-01 19:52:26,892 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:52:26,892 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:52:26,893 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:52:26,936 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:52:29,482 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:52:30,345 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:52:30,356 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:52:30,358 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:52:30,360 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:52:30,398 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:52:30,398 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:52:30,399 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-01 19:52:30,407 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:52:30,408 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:52:30,418 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:52:30,477 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:52:30,479 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.860'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.055000, 0.025000, -0.050000, -0.120000, -0.250000\n0.057500, -0.020000, 0.002500, -0.065000, -0.150000\n0.030000, 0.035000, 0.022500, -0.070000, -0.157500\n-0.095000, -0.077500, -0.045000, -0.082500, -0.112500\n-0.215000, -0.147500, -0.142500, -0.097500, -0.142500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.86, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.055, 0.025, -0.05, -0.12, -0.25], [0.0575, -0.02, 0.0025, -0.065, -0.15], [0.03, 0.035, 0.0225, -0.07, -0.1575], [-0.095, -0.0775, -0.045, -0.0825, -0.1125], [-0.215, -0.1475, -0.1425, -0.0975, -0.1425]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:52:30,481 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:52:30,481 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:52:30,481 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:52:30,482 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:52:30,482 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:52:30,482 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:52:30,493 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:52:30,494 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:52:30,745 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:52:30,766 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:52:30,776 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:52:30,789 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:52:30,790 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:52:30,791 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:52:30,791 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:52:30,791 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:52:30,792 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:52:30,792 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:52:30,847 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:52:30,921 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:52:30,927 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:52:30,933 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:52:30,958 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:52:35,513 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:52:35,514 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:52:35,518 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:52:35,721 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:52:35,730 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:52:35,737 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:52:35,744 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:52:35,751 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:52:35,755 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:52:35,762 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:52:38,108 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:52:38,148 [bed_mesh.py:add_profile()] - Adding Profile: default
2023-12-01 19:52:38,166 [bed_mesh.py:add_profile()] - Adding Profile: x1
2023-12-01 19:52:38,201 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2023-12-01 19:52:38,203 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:52:38,204 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:52:40,653 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:52:40,679 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:52:40,691 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:52:40,696 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:52:40,702 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:52:40,707 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:52:40,712 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:52:40,718 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:52:42,035 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:52:42,038 [printer.py:get_probe()] - Probe type: probe
2023-12-01 19:52:42,039 [zcalibrate.py:__init__()] - Z offset: 0.86
2023-12-01 19:52:42,064 [zcalibrate.py:__init__()] - Available functions for calibration: ['probe']
2023-12-01 19:52:42,083 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > zcalibrate
2023-12-01 19:52:45,506 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:52:45,555 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:52:45,572 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:52:45,579 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:52:45,587 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:52:45,595 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:52:45,602 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:52:45,613 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:52:47,303 [screen.py:_load_panel()] - Loading panel: limits
2023-12-01 19:52:47,312 [limits.py:add_option()] - Adding option: max_accel
2023-12-01 19:52:47,318 [limits.py:add_option()] - Adding option: max_accel_to_decel
2023-12-01 19:52:47,323 [limits.py:add_option()] - Adding option: max_velocity
2023-12-01 19:52:47,329 [limits.py:add_option()] - Adding option: square_corner_velocity
2023-12-01 19:52:47,358 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > limits
2023-12-01 19:52:50,169 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:52:50,194 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:52:50,205 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:52:50,210 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:52:50,214 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:52:50,219 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:52:50,224 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:52:50,230 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:52:57,059 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f6321e380 (GtkDialog at 0x28269eb0)>
2023-12-01 19:52:57,092 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:52:59,259 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:53:06,512 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2023-12-01 19:53:06,513 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:53:06,513 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:53:14,361 [screen.py:show_popup_message()] - echo: Calibrating
2023-12-01 19:53:14,369 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G28
2023-12-01 19:53:14,370 [screen.py:_send_action()] - printer.gcode.script: {'script': 'BED_MESH_CALIBRATE'}
2023-12-01 19:53:14,375 [printer.py:get_probe()] - Probe type: probe
2023-12-01 19:54:16,654 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f63234040 (GtkDialog at 0x2836a8b0)>
2023-12-01 19:54:16,682 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:54:16,783 [bed_mesh.py:activate_mesh()] - Active None changing to default
2023-12-01 19:54:20,414 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:54:26,468 [keyboard.py:__init__()] - Keyboard en
2023-12-01 19:54:30,877 [screen.py:_send_action()] - printer.gcode.script: {'script': 'BED_MESH_PROFILE SAVE=smooth'}
2023-12-01 19:54:30,919 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f71abe2c0 (GtkDialog at 0x27dafed0)>
2023-12-01 19:54:30,938 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:54:31,070 [bed_mesh.py:add_profile()] - Adding Profile: smooth
2023-12-01 19:54:31,081 [bed_mesh.py:activate_mesh()] - Active default changing to smooth
2023-12-01 19:54:32,590 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:54:36,705 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:54:36,716 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f6322cb80 (GtkDialog at 0x284b73d0)>
2023-12-01 19:54:36,734 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:54:40,862 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:54:47,926 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:54:47,952 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:54:47,963 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:54:47,968 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:54:47,974 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:54:47,979 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:54:47,984 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:54:47,991 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:54:49,621 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > zcalibrate
2023-12-01 19:54:51,289 [zcalibrate.py:_move_to_position()] - Using safe_z x:122.0
2023-12-01 19:54:51,289 [zcalibrate.py:_move_to_position()] - Using safe_z y:183.0
2023-12-01 19:54:51,289 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G91
G0 Z20 F1200.0
2023-12-01 19:54:51,291 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2023-12-01 19:54:51,293 [zcalibrate.py:_move_to_position()] - Configured probing position X: 122.0 Y: 183.0
2023-12-01 19:54:51,294 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G0 X122.0 Y183.0 F3000
2023-12-01 19:54:51,295 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: PROBE_CALIBRATE
2023-12-01 19:55:18,874 [zcalibrate.py:change_distance()] - ### Distance 1
2023-12-01 19:55:19,710 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:55:20,290 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:55:21,237 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:55:24,259 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-1
2023-12-01 19:55:30,558 [zcalibrate.py:change_distance()] - ### Distance .05
2023-12-01 19:55:31,221 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:32,161 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:34,501 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:38,286 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:39,010 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:42,054 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:42,394 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:42,730 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:42,949 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:43,138 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:43,333 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:43,510 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:43,654 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:43,846 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:44,014 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:44,210 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:44,402 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:44,594 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:44,786 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:44,958 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:45,106 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:45,274 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:45,442 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:45,614 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:45,762 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:45,970 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:46,138 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:46,290 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:46,470 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:46,618 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:46,798 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:46,946 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:47,143 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:47,304 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:47,478 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:47,650 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:47,974 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:48,222 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:48,438 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:48,617 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:48,809 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:48,978 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:49,174 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:49,322 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:49,514 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:49,710 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:49,866 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:50,063 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:50,282 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:50,506 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:50,684 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:50,878 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:51,046 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:51,242 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:51,418 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:51,586 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:51,754 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:51,904 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:55:57,682 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:57,874 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:58,046 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:58,214 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:58,382 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:58,533 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:58,698 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:58,870 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:59,062 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:59,206 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:59,350 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:59,494 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:59,670 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:55:59,842 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:56:00,002 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:56:00,178 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.05
2023-12-01 19:56:01,329 [zcalibrate.py:change_distance()] - ### Distance .5
2023-12-01 19:56:04,258 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.5
2023-12-01 19:56:06,738 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.5
2023-12-01 19:56:08,494 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.5
2023-12-01 19:56:10,166 [zcalibrate.py:change_distance()] - ### Distance .05
2023-12-01 19:56:10,678 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:56:11,570 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:56:12,283 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:56:12,998 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:56:13,734 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:56:14,434 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=-.05
2023-12-01 19:56:19,874 [zcalibrate.py:change_distance()] - ### Distance .01
2023-12-01 19:56:20,490 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:21,710 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:22,674 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:23,366 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:24,798 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:26,190 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:27,902 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:29,138 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:31,114 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: TESTZ Z=+.01
2023-12-01 19:56:38,111 [zcalibrate.py:accept()] - Accepting Z position
2023-12-01 19:56:38,111 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: ACCEPT
2023-12-01 19:56:38,127 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f6321e380 (GtkDialog at 0x284b85f0)>
2023-12-01 19:56:38,159 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:56:39,456 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:56:53,206 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:56:53,260 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:56:53,281 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:56:53,290 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:56:53,301 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:56:53,309 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:56:53,315 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:56:53,324 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:56:54,757 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f71a1cf00 (GtkDialog at 0x27e565d0)>
2023-12-01 19:56:54,774 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:56:58,666 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:56:58,667 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SAVE_CONFIG'}
2023-12-01 19:56:59,713 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-01 19:56:59,713 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 19:56:59,715 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 19:56:59,719 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:56:59,801 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 19:57:02,294 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 19:57:03,336 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:57:03,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 19:57:03,344 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 19:57:03,345 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 19:57:03,364 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 19:57:03,365 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 19:57:03,365 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-01 19:57:03,371 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 19:57:03,371 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 19:57:03,378 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 19:57:03,545 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 19:57:03,546 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.075000, 0.025000, -0.052500, -0.137500, -0.252500\n0.037500, -0.030000, -0.022500, -0.077500, -0.177500\n0.007500, 0.010000, -0.012500, -0.100000, -0.190000\n-0.132500, -0.117500, -0.075000, -0.117500, -0.157500\n-0.250000, -0.195000, -0.177500, -0.152500, -0.187500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.075000, 0.025000, -0.052500, -0.137500, -0.252500\n0.037500, -0.030000, -0.022500, -0.077500, -0.177500\n0.007500, 0.010000, -0.012500, -0.100000, -0.190000\n-0.132500, -0.117500, -0.075000, -0.117500, -0.157500\n-0.250000, -0.195000, -0.177500, -0.152500, -0.187500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.075, 0.025, -0.0525, -0.1375, -0.2525], [0.0375, -0.03, -0.0225, -0.0775, -0.1775], [0.0075, 0.01, -0.0125, -0.1, -0.19], [-0.1325, -0.1175, -0.075, -0.1175, -0.1575], [-0.25, -0.195, -0.1775, -0.1525, -0.1875]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.075, 0.025, -0.0525, -0.1375, -0.2525], [0.0375, -0.03, -0.0225, -0.0775, -0.1775], [0.0075, 0.01, -0.0125, -0.1, -0.19], [-0.1325, -0.1175, -0.075, -0.1175, -0.1575], [-0.25, -0.195, -0.1775, -0.1525, -0.1875]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 19:57:03,548 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 19:57:03,548 [printer.py:reinit()] - # Extruders: 1
2023-12-01 19:57:03,548 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 19:57:03,548 [printer.py:reinit()] - # Fans: 2
2023-12-01 19:57:03,548 [printer.py:reinit()] - # Output pins: 0
2023-12-01 19:57:03,548 [printer.py:reinit()] - # Leds: 0
2023-12-01 19:57:03,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 19:57:03,557 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 19:57:03,803 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 19:57:03,816 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 19:57:03,820 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 19:57:03,828 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 19:57:03,829 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 19:57:03,829 [files.py:initialize()] - Gcodes path: None
2023-12-01 19:57:03,829 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 19:57:03,829 [screen.py:init_printer()] - Printer initialized
2023-12-01 19:57:03,830 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 19:57:03,830 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 19:57:03,867 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:57:03,926 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 19:57:03,933 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 19:57:03,938 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 19:57:03,964 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:57:06,291 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:57:06,291 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:57:06,303 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:57:06,538 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:57:06,547 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:57:06,554 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:57:06,559 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:57:06,563 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:57:06,568 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:57:06,574 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:57:08,499 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:57:08,522 [bed_mesh.py:add_profile()] - Adding Profile: default
2023-12-01 19:57:08,530 [bed_mesh.py:add_profile()] - Adding Profile: x1
2023-12-01 19:57:08,539 [bed_mesh.py:add_profile()] - Adding Profile: smooth
2023-12-01 19:57:08,559 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2023-12-01 19:57:08,559 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:57:08,560 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 19:57:10,689 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:13,054 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:13,678 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:13,945 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:14,522 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:14,918 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:15,254 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:15,746 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:16,142 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:16,835 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:17,258 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='x1'"}
2023-12-01 19:57:17,683 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='x1'"}
2023-12-01 19:57:18,066 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:18,402 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:18,818 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:19,155 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:19,542 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:20,022 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='default'"}
2023-12-01 19:57:20,096 [bed_mesh.py:activate_mesh()] - Active None changing to default
2023-12-01 19:57:21,879 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='smooth'"}
2023-12-01 19:57:22,101 [bed_mesh.py:activate_mesh()] - Active default changing to smooth
2023-12-01 19:57:24,306 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='default'"}
2023-12-01 19:57:24,356 [bed_mesh.py:activate_mesh()] - Active smooth changing to default
2023-12-01 19:57:25,010 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='smooth'"}
2023-12-01 19:57:25,109 [bed_mesh.py:activate_mesh()] - Active default changing to smooth
2023-12-01 19:57:32,469 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='default'"}
2023-12-01 19:57:32,629 [bed_mesh.py:activate_mesh()] - Active smooth changing to default
2023-12-01 19:57:33,469 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='smooth'"}
2023-12-01 19:57:33,633 [bed_mesh.py:activate_mesh()] - Active default changing to smooth
2023-12-01 19:57:34,537 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:34,546 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f6323eec0 (GtkDialog at 0x283499a0)>
2023-12-01 19:57:34,564 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:57:35,942 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:57:37,838 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='x1'"}
2023-12-01 19:57:37,900 [bed_mesh.py:activate_mesh()] - Active smooth changing to x1
2023-12-01 19:57:40,930 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='smooth'"}
2023-12-01 19:57:41,161 [bed_mesh.py:activate_mesh()] - Active x1 changing to smooth
2023-12-01 19:57:41,726 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='default'"}
2023-12-01 19:57:41,910 [bed_mesh.py:activate_mesh()] - Active smooth changing to default
2023-12-01 19:57:43,069 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='smooth'"}
2023-12-01 19:57:43,163 [bed_mesh.py:activate_mesh()] - Active default changing to smooth
2023-12-01 19:57:45,185 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 19:57:45,194 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f71abf2c0 (GtkDialog at 0x2824ede0)>
2023-12-01 19:57:45,211 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 19:57:47,198 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 19:57:54,722 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:57:54,769 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:57:54,785 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:57:54,792 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:57:54,799 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:57:54,807 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:57:54,813 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:57:54,823 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:58:00,959 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:58:01,005 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:58:04,513 [main_menu.py:toggle_visibility()] - Graph show False: heater_bed
2023-12-01 19:58:04,515 [config.py:save_user_config_options()] - Creating a new config file in /home/pi/printer_data/config/KlipperScreen.conf
2023-12-01 19:58:05,661 [main_menu.py:toggle_visibility()] - Graph show True: heater_bed
2023-12-01 19:58:05,663 [config.py:save_user_config_options()] - Creating a new config file in /home/pi/printer_data/config/KlipperScreen.conf
2023-12-01 19:58:10,301 [main_menu.py:verify_max_temp()] - 60/150
2023-12-01 19:58:10,302 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S60
2023-12-01 19:58:13,810 [main_menu.py:verify_max_temp()] - 90/240
2023-12-01 19:58:13,811 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S90
2023-12-01 19:58:22,070 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:58:22,070 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:58:22,122 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:58:22,139 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:58:22,147 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:58:22,155 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:58:22,163 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:58:22,169 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:58:22,179 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:58:25,677 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:58:25,697 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:58:38,028 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:58:38,138 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-01 19:58:41,762 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 Y+25 F3000'}
2023-12-01 19:58:41,764 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2023-12-01 19:58:41,777 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 25.000 0.000 [0.000]
2023-12-01 19:58:44,970 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 Z+25 F600'}
2023-12-01 19:58:44,975 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2023-12-01 19:58:44,995 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 24.835 [0.000]
2023-12-01 19:58:47,578 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 Z+25 F600'}
2023-12-01 19:58:47,581 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2023-12-01 19:58:47,596 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 24.835 [0.000]
2023-12-01 19:58:50,644 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 19:58:50,741 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2023-12-01 19:58:50,750 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2023-12-01 19:58:50,753 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2023-12-01 19:58:51,750 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2023-12-01 19:58:52,845 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:58:52,867 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-01 19:58:57,175 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 19:58:57,209 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 19:59:20,943 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 19:59:20,943 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 19:59:20,998 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 19:59:21,014 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 19:59:21,022 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 19:59:21,031 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 19:59:21,039 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 19:59:21,046 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 19:59:21,056 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 19:59:21,837 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2023-12-01 19:59:23,813 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='default'"}
2023-12-01 19:59:23,959 [bed_mesh.py:activate_mesh()] - Active smooth changing to default
2023-12-01 19:59:24,729 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='smooth'"}
2023-12-01 19:59:24,962 [bed_mesh.py:activate_mesh()] - Active default changing to smooth
2023-12-01 19:59:31,142 [screen.py:show_popup_message()] - echo: Calibrating
2023-12-01 19:59:31,147 [screen.py:_send_action()] - printer.gcode.script: {'script': 'BED_MESH_CALIBRATE'}
2023-12-01 19:59:31,149 [printer.py:get_probe()] - Probe type: probe
2023-12-01 19:59:31,241 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 20:00:12,890 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f6321e640 (GtkDialog at 0x28375f40)>
2023-12-01 20:00:12,918 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 20:00:13,113 [bed_mesh.py:activate_mesh()] - Active None changing to default
2023-12-01 20:00:20,182 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 20:00:28,649 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE SAVE='smooth'"}
2023-12-01 20:00:28,672 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f71a8f500 (GtkDialog at 0x2834b6d0)>
2023-12-01 20:00:28,703 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-01 20:00:28,902 [bed_mesh.py:activate_mesh()] - Active default changing to smooth
2023-12-01 20:00:31,695 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 20:00:31,695 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SAVE_CONFIG'}
2023-12-01 20:00:32,743 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-01 20:00:32,743 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 20:00:32,744 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 20:00:32,747 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:00:32,826 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 20:00:35,327 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 20:00:36,337 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 20:00:36,343 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 20:00:36,344 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 20:00:36,345 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 20:00:36,364 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 20:00:36,365 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 20:00:36,365 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-01 20:00:36,371 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 20:00:36,372 [printer.py:configure_cameras()] - Cameras: []
2023-12-01 20:00:36,379 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 20:00:36,578 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 20:00:36,580 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 20:00:36,581 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 20:00:36,582 [printer.py:reinit()] - # Extruders: 1
2023-12-01 20:00:36,582 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 20:00:36,582 [printer.py:reinit()] - # Fans: 2
2023-12-01 20:00:36,582 [printer.py:reinit()] - # Output pins: 0
2023-12-01 20:00:36,582 [printer.py:reinit()] - # Leds: 0
2023-12-01 20:00:36,590 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 20:00:36,590 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 20:00:36,836 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 20:00:36,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 20:00:36,854 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 20:00:36,862 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 20:00:36,863 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 20:00:36,863 [files.py:initialize()] - Gcodes path: None
2023-12-01 20:00:36,863 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 20:00:36,864 [screen.py:init_printer()] - Printer initialized
2023-12-01 20:00:36,865 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 20:00:36,865 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 20:00:36,903 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:00:36,961 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 20:00:36,968 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 20:00:36,974 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 20:00:36,999 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 20:00:46,510 [main_menu.py:verify_max_temp()] - 60/150
2023-12-01 20:00:46,510 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S60
2023-12-01 20:00:48,346 [main_menu.py:verify_max_temp()] - 90/240
2023-12-01 20:00:48,346 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S90
2023-12-01 20:00:50,425 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 20:00:50,426 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 20:00:50,429 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:00:50,646 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 20:00:50,655 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 20:00:50,660 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 20:00:50,665 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 20:00:50,669 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 20:00:50,674 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 20:00:50,680 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 20:00:51,543 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:00:51,565 [bed_mesh.py:add_profile()] - Adding Profile: default
2023-12-01 20:00:51,573 [bed_mesh.py:add_profile()] - Adding Profile: x1
2023-12-01 20:00:51,582 [bed_mesh.py:add_profile()] - Adding Profile: smooth
2023-12-01 20:00:51,601 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > bed_mesh
2023-12-01 20:00:51,601 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 20:00:51,601 [bed_mesh.py:activate_mesh()] - Clearing active profile
2023-12-01 20:00:53,018 [screen.py:_send_action()] - printer.gcode.script: {'script': "BED_MESH_PROFILE LOAD='smooth'"}
2023-12-01 20:00:53,130 [bed_mesh.py:activate_mesh()] - Active None changing to smooth
2023-12-01 20:01:03,934 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:01:03,978 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 20:01:03,996 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 20:01:04,004 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 20:01:04,012 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 20:01:04,020 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 20:01:04,027 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 20:01:04,039 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 20:01:04,815 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:01:04,818 [printer.py:get_probe()] - Probe type: probe
2023-12-01 20:01:04,818 [zcalibrate.py:__init__()] - Z offset: 0.81
2023-12-01 20:01:04,843 [zcalibrate.py:__init__()] - Available functions for calibration: ['probe']
2023-12-01 20:01:04,861 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > zcalibrate
2023-12-01 20:01:10,127 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:01:10,174 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 20:01:10,192 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 20:01:10,201 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 20:01:10,209 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 20:01:10,217 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 20:01:10,223 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 20:01:10,234 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 20:01:15,225 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:01:15,245 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 20:01:22,586 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 20:01:22,586 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 20:01:22,634 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 20:01:22,652 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 20:01:22,660 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 20:01:22,668 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 20:01:22,674 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 20:01:22,678 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 20:01:22,685 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 20:01:29,110 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:01:29,145 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 20:01:32,114 [screen.py:_load_panel()] - Loading panel: temperature
2023-12-01 20:01:32,145 [temperature.py:add_device()] - Adding device: extruder
2023-12-01 20:01:32,152 [temperature.py:add_device()] - Adding device: heater_bed
2023-12-01 20:01:32,159 [temperature.py:select_heater()] - Selecting extruder
2023-12-01 20:01:32,161 [temperature.py:select_heater()] - Selecting heater_bed
2023-12-01 20:01:32,188 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > temperature
2023-12-01 20:01:37,638 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S0
2023-12-01 20:01:37,639 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S0
2023-12-01 20:01:44,914 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:01:44,933 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 20:01:50,606 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 20:01:50,607 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 20:01:50,663 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 20:01:50,685 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 20:01:50,689 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 20:01:50,694 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 20:01:50,699 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 20:01:50,703 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 20:01:50,710 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 20:01:52,415 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:01:52,435 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > power
2023-12-01 20:01:54,494 [power.py:on_switch()] - Power toggled my_light
2023-12-01 20:01:54,494 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: my_light
2023-12-01 20:01:54,502 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 20:01:55,923 [power.py:on_switch()] - Power toggled my_light
2023-12-01 20:01:55,923 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-01 20:01:55,935 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 20:02:04,241 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:02:04,286 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 20:02:04,303 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 20:02:04,311 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 20:02:04,320 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 20:02:04,328 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 20:02:04,336 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 20:02:04,350 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 20:02:06,373 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:02:06,393 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 20:02:07,250 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:02:07,320 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-01 20:02:08,822 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G91\nG0 Z+25 F600'}
2023-12-01 20:02:08,825 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: G90
2023-12-01 20:02:08,834 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 24.870 [0.000]
2023-12-01 20:02:10,864 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:02:10,949 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2023-12-01 20:02:10,958 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2023-12-01 20:02:10,960 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2023-12-01 20:02:11,789 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2023-12-01 20:02:41,251 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:02:41,292 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-01 20:02:42,577 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 20:02:42,598 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 20:03:00,755 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 20:03:00,755 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 20:03:00,812 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 20:03:00,829 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 20:03:00,837 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 20:03:00,846 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 20:03:00,854 [menu.py:arrangeMenuItems()] - X > more camera
2023-12-01 20:03:00,861 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 20:03:00,871 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 20:03:03,380 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > power
2023-12-01 20:03:06,216 [power.py:on_switch()] - Power toggled printer
2023-12-01 20:03:06,216 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: printer
2023-12-01 20:03:06,227 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 20:03:12,057 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-12-01 20:03:12,057 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-01 20:03:12,067 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:03:12,133 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 20:03:15,805 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-12-01 20:03:15,806 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-12-01 20:03:15,807 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:03:15,815 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 20:03:15,853 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-01 20:03:15,857 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 20:03:17,094 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:03:17,107 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > power
2023-12-01 20:07:44,414 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 20:07:45,729 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-01 20:07:45,730 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-01 20:07:45,730 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-01 20:07:45,732 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:07:45,781 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 20:07:48,304 [screen.py:_websocket_callback()] - Still not initialized
2023-12-01 20:07:49,339 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 20:07:49,347 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 20:07:49,348 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'authorization', 'gpio', 'power', 'update_manager', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': ['virtual_sdcard', 'display_status'], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 20:07:49,350 [screen.py:show_popup_message()] - error: 
Missing Klipper configuration:
[virtual_sdcard]
[display_status]

2023-12-01 20:07:49,367 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 20:07:49,368 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 20:07:49,368 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-01 20:07:49,375 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 20:07:49,375 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-01 20:07:49,384 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 20:07:49,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 20:07:49,556 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 20:07:49,558 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 20:07:49,558 [printer.py:reinit()] - # Extruders: 1
2023-12-01 20:07:49,558 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 20:07:49,558 [printer.py:reinit()] - # Fans: 2
2023-12-01 20:07:49,558 [printer.py:reinit()] - # Output pins: 0
2023-12-01 20:07:49,558 [printer.py:reinit()] - # Leds: 0
2023-12-01 20:07:49,566 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 20:07:49,567 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 20:07:49,812 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 20:07:49,827 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 20:07:49,830 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-01 20:07:49,839 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-01 20:07:49,840 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-01 20:07:49,840 [files.py:initialize()] - Gcodes path: None
2023-12-01 20:07:49,840 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 20:07:49,840 [screen.py:init_printer()] - Printer initialized
2023-12-01 20:07:49,841 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-01 20:07:49,841 [printer.py:change_state()] - Adding callback for state: ready
2023-12-01 20:07:49,879 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 20:07:49,938 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-01 20:07:49,945 [main_menu.py:add_device()] - Adding device: extruder
2023-12-01 20:07:49,950 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-01 20:07:49,977 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 20:08:16,482 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 20:08:19,008 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 21:03:17,332 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-01 22:47:51,105 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-01 22:47:51,146 [screen.py:wake_screen()] - Screen wake up
2023-12-01 22:47:58,203 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-01 22:47:58,203 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-01 22:47:58,211 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 22:47:58,447 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 22:47:58,458 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 22:47:58,463 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 22:47:58,467 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 22:47:58,477 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 22:47:58,483 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 22:48:02,339 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 22:48:02,359 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > power
2023-12-01 22:48:05,169 [power.py:on_switch()] - Power toggled my_light
2023-12-01 22:48:05,170 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: my_light
2023-12-01 22:48:05,182 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 22:48:06,224 [power.py:on_switch()] - Power toggled printer
2023-12-01 22:48:06,225 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: printer
2023-12-01 22:48:06,237 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-01 22:48:08,274 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 22:48:08,326 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 22:48:08,347 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 22:48:08,352 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 22:48:08,357 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 22:48:08,366 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 22:48:08,373 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 22:48:09,949 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > power
2023-12-01 22:48:11,602 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 22:48:11,632 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-01 22:48:11,643 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-01 22:48:11,648 [menu.py:arrangeMenuItems()] - X > more led
2023-12-01 22:48:11,653 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-01 22:48:11,662 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-01 22:48:11,669 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-01 22:48:15,562 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 22:48:15,605 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-01 22:48:15,685 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-12-01 22:48:15,685 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-01 22:48:15,687 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 22:48:15,730 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 22:48:17,331 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-12-01 22:48:17,331 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-12-01 22:48:17,332 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 22:48:17,340 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 22:48:17,378 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-01 22:48:17,382 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 22:48:19,306 [screen.py:show_panel()] - Reinitializing panel
2023-12-01 22:48:19,319 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > power
2023-12-01 22:48:20,674 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-01 22:48:20,692 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-01 22:48:20,702 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-01 22:48:21,806 [screen.py:_load_panel()] - Loading panel: system
2023-12-01 22:48:21,838 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status
2023-12-01 22:48:21,843 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-12-01 22:48:21,844 [system.py:_already_updated()] - fluidd v1.26.3
2023-12-01 22:48:21,846 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-12-01 22:48:21,851 [system.py:_already_updated()] - klipper v0.12.0-12
2023-12-01 22:48:21,853 [system.py:_already_updated()] - mainsail v2.8.0
2023-12-01 22:48:21,854 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-12-01 22:48:21,859 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-12-01 22:48:21,867 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > system
2023-12-01 22:48:21,875 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/update/status?refresh=false
2023-12-01 22:48:21,876 [system.py:_already_updated()] - crowsnest v4.1.1-1
2023-12-01 22:48:21,879 [system.py:_already_updated()] - fluidd v1.26.3
2023-12-01 22:48:21,880 [system.py:_already_updated()] - fluidd-config v0.0.0-10
2023-12-01 22:48:21,881 [system.py:_already_updated()] - klipper v0.12.0-12
2023-12-01 22:48:21,883 [system.py:_already_updated()] - mainsail v2.8.0
2023-12-01 22:48:21,884 [system.py:_already_updated()] - mainsail-config v1.1.0-1
2023-12-01 22:48:21,885 [system.py:_already_updated()] - moonraker v0.8.0-204
2023-12-01 22:48:23,974 [KlippyGtk.py:Dialog()] - Showing dialog Shutdown (width=834, height=480)
2023-12-01 22:48:25,686 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-01 22:48:51,314 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-12-01 22:48:51,314 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-12-01 22:48:51,314 [functions.py:log_start()] - Python version: 3.11
2023-12-01 22:48:51,462 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-12-01 22:48:51,464 [config.py:__init__()] - Config path location: /home/pi/printer_data/config/KlipperScreen.conf
2023-12-01 22:48:51,482 [config.py:log_config()] -  ===== Config File =====

=======================
2023-12-01 22:48:51,484 [config.py:__init__()] - ====== Saved Def ======

[main]
confirm_estop = True

=======================
2023-12-01 22:48:51,484 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-12-01 22:48:51,580 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-12-01 22:48:51,580 [config.py:install_language()] - Using system lang
2023-12-01 22:48:51,581 [config.py:install_language()] - Using lang en
2023-12-01 22:48:51,601 [screen.py:__init__()] - Screen resolution: 800x480
2023-12-01 22:48:51,603 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-12-01 22:48:52,283 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-12-01 22:48:52,306 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-12-01 22:48:52,318 [screen.py:initial_connection()] - Default printer: None
2023-12-01 22:48:52,318 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-01 22:48:52,318 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-12-01 22:48:52,424 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-01 22:48:52,442 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-01 22:48:52,459 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 22:48:52,476 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-01 22:48:52,479 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-01 22:48:52,508 [_logging.py:info()] - Websocket connected
2023-12-01 22:48:52,508 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-01 22:48:52,675 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 22:48:52,693 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-01 22:48:52,696 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-01 22:48:52,706 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-01 22:48:52,708 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-01 22:48:52,708 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-01 22:48:52,718 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-01 22:48:52,720 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-01 22:48:52,730 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-01 22:48:52,746 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-01 22:48:52,747 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-01 22:48:52,749 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-01 22:48:52,749 [printer.py:reinit()] - # Extruders: 1
2023-12-01 22:48:52,749 [printer.py:reinit()] - # Temperature devices: 1
2023-12-01 22:48:52,749 [printer.py:reinit()] - # Fans: 2
2023-12-01 22:48:52,749 [printer.py:reinit()] - # Output pins: 0
2023-12-01 22:48:52,749 [printer.py:reinit()] - # Leds: 0
2023-12-01 22:48:52,769 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-01 22:48:52,770 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-01 22:48:53,268 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan
2023-12-01 22:48:53,280 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 22:48:53,281 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-01 22:48:53,281 [files.py:initialize()] - Gcodes path: None
2023-12-01 22:48:53,281 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-01 22:48:53,284 [screen.py:init_printer()] - Printer initialized
2023-12-01 22:48:53,285 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-01 22:48:53,285 [printer.py:change_state()] - Adding callback for state: startup
2023-12-01 22:48:58,668 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-01 22:48:58,671 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:26:47,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:26:47,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:26:48,715 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-13 13:26:52,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:26:52,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:26:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:26:57,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:02,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:06,703 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-13 13:27:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:07,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:08,466 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-13 13:27:12,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:12,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:17,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:20,625 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-13 13:27:22,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:22,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:23,268 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-13 13:27:27,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:27,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:32,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:32,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:37,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:37,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:42,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:42,560 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:47,549 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:47,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:52,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:52,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:27:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:27:57,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:00,626 [printer.py:change_state()] - Changing state from 'startup' to 'error'
2023-12-13 13:28:00,626 [printer.py:change_state()] - Adding callback for state: error
2023-12-13 13:28:00,628 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:28:00,701 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:28:02,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:02,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:12,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:12,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:17,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:17,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:22,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:22,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:27,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:27,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:32,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:32,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:37,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:42,549 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:42,550 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:47,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:47,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:52,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:52,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:28:57,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:28:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:02,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:07,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:07,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:12,560 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:12,561 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:17,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:22,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:22,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:27,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:27,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:32,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:32,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:37,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:37,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:42,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:42,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:47,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:47,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:52,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:52,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:29:57,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:29:57,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:07,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:07,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:12,559 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:12,561 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:17,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:22,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:22,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:27,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:27,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:32,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:32,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:37,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:37,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:42,550 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:42,551 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:47,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:47,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:52,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:52,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:30:57,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:30:57,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:07,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:07,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:12,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:12,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:17,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:17,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:22,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:22,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:27,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:27,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:32,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:37,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:42,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:42,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:47,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:47,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:52,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:52,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:31:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:31:57,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:02,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:02,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:07,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:12,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:12,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:22,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:22,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:27,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:27,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:32,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:37,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:42,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:42,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:47,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:47,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:52,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:52,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:32:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:32:57,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:02,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:02,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:12,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:12,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:17,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:17,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:22,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:22,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:27,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:27,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:32,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:32,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:37,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:42,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:42,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:47,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:47,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:52,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:52,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:33:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:33:57,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:02,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:02,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:07,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:12,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:12,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:17,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:17,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:22,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:22,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:27,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:27,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:32,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:32,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:37,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:42,549 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:42,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:47,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:47,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:52,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:52,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:34:57,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:34:57,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:12,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:12,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:17,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:22,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:22,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:27,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:27,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:32,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:32,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:37,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:42,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:42,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:47,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:47,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:52,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:52,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:35:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:35:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:02,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:02,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:07,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:07,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:12,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:12,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:17,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:17,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:22,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:22,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:27,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:27,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:32,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:37,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:37,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:42,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:42,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:47,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:47,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:52,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:36:57,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:36:57,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:02,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:07,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:07,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:12,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:12,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:22,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:22,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:27,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:27,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:32,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:32,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:37,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:37,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:42,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:42,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:47,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:47,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:52,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:37:57,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:37:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:02,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:07,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:07,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:12,559 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:12,560 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:17,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:17,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:22,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:22,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:27,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:27,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:32,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:32,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:42,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:42,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:47,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:47,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:52,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:52,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:38:57,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:38:57,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:07,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:07,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:12,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:12,561 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:17,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:22,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:22,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:27,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:27,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:32,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:37,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:37,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:42,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:42,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:47,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:47,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:52,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:39:57,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:39:57,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:07,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:07,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:12,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:12,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:17,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:17,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:22,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:22,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:27,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:27,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:32,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:42,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:42,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:47,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:47,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:52,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:52,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:40:57,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:40:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:02,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:02,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:07,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:12,559 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:12,561 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:17,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:22,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:22,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:27,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:27,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:32,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:32,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:37,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:37,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:42,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:42,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:47,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:47,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:52,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:52,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:41:57,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:41:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:02,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:07,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:12,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:12,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:17,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:22,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:22,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:27,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:27,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:32,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:42,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:42,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:47,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:47,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:52,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:42:57,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:42:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:02,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:12,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:12,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:22,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:22,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:27,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:27,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:32,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:32,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:37,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:42,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:42,560 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:47,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:47,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:52,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:52,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:43:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:43:57,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:02,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:07,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:12,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:12,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:22,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:22,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:27,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:27,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:32,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:32,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:42,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:42,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:47,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:47,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:52,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:52,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:44:57,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:44:57,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:02,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:07,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:12,566 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:12,568 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:13,637 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-13 13:45:13,638 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 13:45:13,639 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 13:45:13,641 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:45:13,688 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:45:16,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:45:16,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:45:16,557 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 13:45:16,564 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 13:45:16,565 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 13:45:16,565 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'on'}}
2023-12-13 13:45:16,572 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 13:45:16,572 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 13:45:16,579 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 13:45:16,704 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 13:45:16,705 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 13:45:16,705 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 13:45:16,705 [printer.py:reinit()] - # Extruders: 0
2023-12-13 13:45:16,705 [printer.py:reinit()] - # Temperature devices: 0
2023-12-13 13:45:16,705 [printer.py:reinit()] - # Fans: 0
2023-12-13 13:45:16,706 [printer.py:reinit()] - # Output pins: 0
2023-12-13 13:45:16,706 [printer.py:reinit()] - # Leds: 0
2023-12-13 13:45:16,713 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 13:45:16,714 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 13:45:16,957 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-13 13:45:16,960 [files.py:initialize()] - Gcodes path: None
2023-12-13 13:45:16,960 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 13:45:16,960 [screen.py:init_printer()] - Printer initialized
2023-12-13 13:45:16,960 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-13 13:45:16,961 [printer.py:change_state()] - Adding callback for state: error
2023-12-13 13:45:16,964 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:45:17,004 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:45:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:22,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:22,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:23,429 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-13 13:45:25,458 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-13 13:45:25,458 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 13:45:25,458 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 13:45:25,460 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:45:25,505 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:45:27,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:27,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:28,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:45:28,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:45:28,556 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 13:45:28,562 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 13:45:28,563 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 13:45:28,563 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-13 13:45:28,569 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 13:45:28,570 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 13:45:28,577 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 13:45:28,777 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 13:45:28,778 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 13:45:28,778 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 13:45:28,778 [printer.py:reinit()] - # Extruders: 0
2023-12-13 13:45:28,778 [printer.py:reinit()] - # Temperature devices: 0
2023-12-13 13:45:28,779 [printer.py:reinit()] - # Fans: 0
2023-12-13 13:45:28,779 [printer.py:reinit()] - # Output pins: 0
2023-12-13 13:45:28,779 [printer.py:reinit()] - # Leds: 0
2023-12-13 13:45:28,786 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 13:45:28,787 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 13:45:29,032 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-13 13:45:29,032 [files.py:initialize()] - Gcodes path: None
2023-12-13 13:45:29,033 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 13:45:29,033 [screen.py:init_printer()] - Printer initialized
2023-12-13 13:45:29,033 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-13 13:45:29,033 [printer.py:change_state()] - Adding callback for state: error
2023-12-13 13:45:29,035 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:45:29,077 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:45:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:32,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:40,647 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-13 13:45:40,647 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 13:45:40,648 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 13:45:40,650 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:45:40,717 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:45:42,549 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:42,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:43,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:45:43,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:45:43,556 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 13:45:43,563 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 13:45:43,565 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 13:45:43,565 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-13 13:45:43,573 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 13:45:43,573 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 13:45:43,580 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 13:45:43,718 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 13:45:43,719 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 13:45:43,719 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 13:45:43,719 [printer.py:reinit()] - # Extruders: 0
2023-12-13 13:45:43,719 [printer.py:reinit()] - # Temperature devices: 0
2023-12-13 13:45:43,720 [printer.py:reinit()] - # Fans: 0
2023-12-13 13:45:43,720 [printer.py:reinit()] - # Output pins: 0
2023-12-13 13:45:43,720 [printer.py:reinit()] - # Leds: 0
2023-12-13 13:45:43,727 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 13:45:43,728 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 13:45:43,972 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-13 13:45:43,973 [files.py:initialize()] - Gcodes path: None
2023-12-13 13:45:43,973 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 13:45:43,973 [screen.py:init_printer()] - Printer initialized
2023-12-13 13:45:43,974 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-13 13:45:43,974 [printer.py:change_state()] - Adding callback for state: error
2023-12-13 13:45:43,975 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:45:44,017 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:45:47,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:47,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:52,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:52,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:45:57,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:45:57,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:12,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:12,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:22,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:22,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:27,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:27,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:32,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:42,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:42,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:47,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:47,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:52,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:52,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:46:57,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:46:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:02,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:02,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:12,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:12,560 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:17,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:17,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:22,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:22,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:27,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:27,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:32,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:37,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:37,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:42,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:42,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:47,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:47,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:52,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:52,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:47:57,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:47:57,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:02,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:02,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:07,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:07,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:12,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:12,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:17,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:20,054 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-13 13:48:20,054 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 13:48:20,054 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 13:48:20,057 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:48:20,128 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:48:22,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:22,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:23,546 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:48:23,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:48:23,555 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 13:48:23,561 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 13:48:23,561 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 13:48:23,561 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-13 13:48:23,568 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 13:48:23,568 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 13:48:23,575 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 13:48:23,622 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 13:48:23,623 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 13:48:23,623 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 13:48:23,623 [printer.py:reinit()] - # Extruders: 0
2023-12-13 13:48:23,623 [printer.py:reinit()] - # Temperature devices: 0
2023-12-13 13:48:23,623 [printer.py:reinit()] - # Fans: 0
2023-12-13 13:48:23,623 [printer.py:reinit()] - # Output pins: 0
2023-12-13 13:48:23,624 [printer.py:reinit()] - # Leds: 0
2023-12-13 13:48:23,631 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 13:48:23,631 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 13:48:23,874 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-13 13:48:23,874 [files.py:initialize()] - Gcodes path: None
2023-12-13 13:48:23,875 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 13:48:23,877 [screen.py:init_printer()] - Printer initialized
2023-12-13 13:48:23,877 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-13 13:48:23,877 [printer.py:change_state()] - Adding callback for state: error
2023-12-13 13:48:23,878 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:48:23,920 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:48:27,551 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:27,552 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:32,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:32,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:42,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:42,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:47,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:47,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:52,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:48:57,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:48:57,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:02,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:07,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:07,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:12,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:12,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:17,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:17,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:22,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:22,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:27,559 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:27,560 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:32,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:37,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:37,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:42,560 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:42,561 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:47,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:47,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:52,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:52,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:49:57,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:49:57,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:02,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:04,746 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-13 13:50:04,746 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 13:50:04,747 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 13:50:04,748 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:50:04,790 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:50:07,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:07,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:08,549 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:50:08,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:50:08,556 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 13:50:08,563 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 13:50:08,564 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 13:50:08,564 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-13 13:50:08,571 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 13:50:08,572 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 13:50:08,579 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 13:50:08,822 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 13:50:08,823 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:GPIO27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:GPIO27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 13:50:08,825 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 13:50:08,825 [printer.py:reinit()] - # Extruders: 1
2023-12-13 13:50:08,825 [printer.py:reinit()] - # Temperature devices: 1
2023-12-13 13:50:08,825 [printer.py:reinit()] - # Fans: 2
2023-12-13 13:50:08,825 [printer.py:reinit()] - # Output pins: 0
2023-12-13 13:50:08,825 [printer.py:reinit()] - # Leds: 0
2023-12-13 13:50:08,834 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 13:50:08,835 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 13:50:09,080 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-13 13:50:09,089 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:09,090 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:09,090 [files.py:initialize()] - Gcodes path: None
2023-12-13 13:50:09,090 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 13:50:09,091 [screen.py:init_printer()] - Printer initialized
2023-12-13 13:50:09,091 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-13 13:50:09,091 [printer.py:change_state()] - Adding callback for state: error
2023-12-13 13:50:09,093 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:50:09,134 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:50:12,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:12,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:14,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:14,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:17,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:17,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:19,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:19,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:22,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:22,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:24,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:24,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:27,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:27,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:29,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:29,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:32,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:32,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:34,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:34,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:37,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:37,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:39,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:39,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:42,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:42,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:44,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:44,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:47,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:47,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:49,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:49,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:52,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:54,549 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:54,550 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:57,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:57,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:50:59,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:50:59,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:02,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:02,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:04,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:04,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:07,546 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:07,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:09,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:09,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:12,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:12,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:14,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:14,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:19,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:19,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:22,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:22,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:24,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:24,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:27,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:27,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:29,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:29,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:32,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:32,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:34,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:34,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:37,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:37,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:39,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:39,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:42,551 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:42,552 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:44,550 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:44,552 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:47,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:47,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:49,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:49,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:52,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:54,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:54,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:57,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:57,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:51:59,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:51:59,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:02,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:02,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:04,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:04,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:07,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:09,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:09,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:12,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:12,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:14,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:14,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:19,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:19,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:22,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:22,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:24,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:24,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:27,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:27,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:29,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:29,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:32,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:32,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:34,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:34,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:37,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:39,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:39,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:42,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:42,560 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:44,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:44,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:47,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:47,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:49,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:49,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:52,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:54,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:54,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:57,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:57,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:52:59,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:52:59,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:02,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:04,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:04,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:07,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:09,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:09,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:12,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:12,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:14,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:14,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:17,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:17,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:19,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:19,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:22,546 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:22,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:24,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:24,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:27,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:27,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:29,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:29,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:32,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:32,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:34,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:34,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:39,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:39,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:42,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:42,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:44,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:44,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:47,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:47,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:49,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:49,560 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:52,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:52,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:54,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:54,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:57,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:57,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:53:59,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:53:59,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:02,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:02,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:04,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:04,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:07,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:07,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:09,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:09,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:12,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:12,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:14,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:14,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:19,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:19,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:22,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:22,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:24,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:24,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:27,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:27,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:29,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:29,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:31,960 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-13 13:54:31,960 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 13:54:31,961 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 13:54:31,963 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:54:32,036 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:54:32,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:32,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:34,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:34,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:35,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:54:35,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:54:35,554 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 13:54:35,560 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 13:54:35,561 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 13:54:35,561 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-13 13:54:35,567 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 13:54:35,567 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 13:54:35,574 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 13:54:35,777 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 13:54:35,778 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 13:54:35,778 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 13:54:35,778 [printer.py:reinit()] - # Extruders: 0
2023-12-13 13:54:35,779 [printer.py:reinit()] - # Temperature devices: 0
2023-12-13 13:54:35,779 [printer.py:reinit()] - # Fans: 0
2023-12-13 13:54:35,779 [printer.py:reinit()] - # Output pins: 0
2023-12-13 13:54:35,779 [printer.py:reinit()] - # Leds: 0
2023-12-13 13:54:35,786 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 13:54:35,787 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 13:54:36,030 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-13 13:54:36,033 [files.py:initialize()] - Gcodes path: None
2023-12-13 13:54:36,033 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 13:54:36,034 [screen.py:init_printer()] - Printer initialized
2023-12-13 13:54:36,035 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-13 13:54:36,035 [printer.py:change_state()] - Adding callback for state: error
2023-12-13 13:54:36,036 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:54:36,078 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:54:37,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:37,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:39,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:39,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:42,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:42,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:44,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:44,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:47,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:47,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:49,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:49,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:52,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:54,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:54,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:57,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:54:59,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:54:59,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:02,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:04,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:04,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:07,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:09,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:09,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:12,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:12,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:14,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:14,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:19,505 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-13 13:55:19,505 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 13:55:19,505 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 13:55:19,506 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:55:19,551 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:55:19,575 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:19,576 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:22,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:22,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:22,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:55:22,564 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 13:55:22,565 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 13:55:22,571 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 13:55:22,572 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 13:55:22,573 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-13 13:55:22,579 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 13:55:22,580 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 13:55:22,588 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 13:55:22,839 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 13:55:22,840 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpiochip0/GPIO27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpiochip0/GPIO27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 13:55:22,841 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 13:55:22,842 [printer.py:reinit()] - # Extruders: 1
2023-12-13 13:55:22,842 [printer.py:reinit()] - # Temperature devices: 1
2023-12-13 13:55:22,842 [printer.py:reinit()] - # Fans: 2
2023-12-13 13:55:22,842 [printer.py:reinit()] - # Output pins: 0
2023-12-13 13:55:22,842 [printer.py:reinit()] - # Leds: 0
2023-12-13 13:55:22,850 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 13:55:22,851 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 13:55:23,097 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-13 13:55:23,105 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:23,106 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:23,106 [files.py:initialize()] - Gcodes path: None
2023-12-13 13:55:23,107 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 13:55:23,108 [screen.py:init_printer()] - Printer initialized
2023-12-13 13:55:23,108 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-13 13:55:23,108 [printer.py:change_state()] - Adding callback for state: error
2023-12-13 13:55:23,111 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 13:55:23,152 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 13:55:24,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:24,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:27,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:27,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:28,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:28,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:29,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:29,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:32,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:32,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:33,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:33,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:34,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:34,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:38,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:38,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:39,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:39,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:42,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:42,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:43,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:43,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:44,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:44,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:47,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:47,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:48,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:48,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:49,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:49,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:52,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:52,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:53,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:53,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:54,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:54,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:57,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:58,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:58,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:55:59,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:55:59,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:02,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:03,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:03,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:04,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:04,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:07,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:08,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:08,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:09,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:09,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:12,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:12,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:13,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:13,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:14,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:14,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:17,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:17,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:18,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:18,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:19,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:19,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:22,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:22,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:23,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:23,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:24,559 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:24,561 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:27,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:27,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:28,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:28,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:29,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:29,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:32,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:32,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:33,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:33,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:34,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:34,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:38,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:38,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:39,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:39,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:42,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:42,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:43,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:43,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:44,546 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:44,547 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:47,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:47,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:48,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:48,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:49,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:49,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:52,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:52,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:53,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:53,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:54,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:54,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:57,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:57,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:58,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:58,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:56:59,562 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:56:59,563 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:02,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:03,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:03,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:04,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:04,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:07,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:07,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:08,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:08,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:09,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:09,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:12,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:12,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:13,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:13,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:14,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:14,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:17,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:17,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:18,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:18,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:19,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:19,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:22,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:22,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:23,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:23,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:24,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:24,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:27,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:27,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:28,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:28,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:29,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:29,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:32,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:32,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:33,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:33,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:34,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:34,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:37,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:38,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:38,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:39,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:39,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:42,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:42,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:43,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:43,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:44,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:44,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:47,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:47,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:48,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:48,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:49,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:49,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:52,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:53,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:53,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:54,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:54,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:57,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:57,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:58,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:58,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:57:59,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:57:59,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:02,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:02,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:03,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:03,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:04,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:04,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:07,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:08,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:08,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:09,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:09,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:12,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:12,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:13,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:13,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:14,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:14,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:17,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:17,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:18,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:18,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:19,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:19,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:22,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:22,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:23,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:23,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:24,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:24,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:27,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:27,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:28,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:28,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:29,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:29,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:32,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:32,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:33,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:33,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:34,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:34,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:37,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:37,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:38,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:38,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:39,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:39,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:42,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:42,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:43,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:43,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:44,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:44,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:47,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:47,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:48,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:48,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:49,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:49,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:52,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:52,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:53,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:53,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:54,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:54,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:57,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:58,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:58,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:58:59,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:58:59,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:02,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:03,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:03,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:04,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:04,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:07,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:08,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:08,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:09,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:09,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:12,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:12,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:13,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:13,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:14,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:14,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:17,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:17,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:18,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:18,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:19,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:19,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:22,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:22,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:23,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:23,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:24,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:24,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:27,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:27,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:28,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:28,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:29,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:29,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:32,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:32,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:33,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:33,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:34,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:34,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:37,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:37,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:38,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:38,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:39,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:39,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:42,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:42,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:43,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:43,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:44,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:44,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:47,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:47,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:48,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:48,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:49,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:49,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:52,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:52,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:53,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:53,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:54,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:54,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:57,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:57,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:58,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:58,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 13:59:59,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 13:59:59,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:02,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:02,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:03,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:03,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:04,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:04,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:07,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:07,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:08,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:08,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:09,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:09,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:12,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:12,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:13,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:13,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:14,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:14,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:17,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:17,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:18,559 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:18,561 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:19,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:19,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:22,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:22,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:23,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:23,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:24,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:24,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:27,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:27,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:28,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:28,560 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:29,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:29,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:32,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:32,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:33,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:33,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:34,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:34,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:37,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:37,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:38,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:38,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:39,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:39,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:42,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:42,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:43,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:43,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:44,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:44,548 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:47,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:47,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:48,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:48,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:49,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:49,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:52,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:52,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:53,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:53,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:54,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:54,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:57,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:57,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:58,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:58,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:00:59,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:00:59,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:02,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:02,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:03,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:03,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:04,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:04,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:07,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:07,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:08,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:08,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:09,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:09,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:12,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:12,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:13,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:13,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:14,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:14,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:17,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:17,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:18,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:18,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:19,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:19,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:22,552 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:22,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:23,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:23,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:24,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:24,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:27,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:27,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:28,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:28,557 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:29,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:29,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:32,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:32,558 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:33,558 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:33,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:34,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:34,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:37,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:37,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:38,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:38,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:39,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:39,555 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:42,559 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:42,561 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:43,557 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:43,559 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:44,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:44,554 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:47,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:47,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:48,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:48,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:49,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:49,556 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:52,531 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-13 14:01:52,531 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 14:01:52,532 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 14:01:52,534 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 14:01:52,604 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 14:01:52,637 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:52,639 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:53,551 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:53,553 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:54,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:54,549 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:55,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 14:01:55,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 14:01:55,554 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 14:01:55,560 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 14:01:55,561 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 14:01:55,561 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-13 14:01:55,567 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 14:01:55,569 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 14:01:55,577 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 14:01:55,616 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 14:01:55,618 [screen.py:init_printer()] - {'configfile': {'config': {'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'pause_resume': {'recover_velocity': '50.'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'pause_resume': {'recover_velocity': 50.0}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 14:01:55,619 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 14:01:55,620 [printer.py:reinit()] - # Extruders: 1
2023-12-13 14:01:55,620 [printer.py:reinit()] - # Temperature devices: 1
2023-12-13 14:01:55,620 [printer.py:reinit()] - # Fans: 2
2023-12-13 14:01:55,620 [printer.py:reinit()] - # Output pins: 0
2023-12-13 14:01:55,620 [printer.py:reinit()] - # Leds: 0
2023-12-13 14:01:55,638 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 14:01:55,639 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 14:01:55,870 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-13 14:01:55,878 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:55,879 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:01:55,879 [files.py:initialize()] - Gcodes path: None
2023-12-13 14:01:55,879 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 14:01:55,880 [screen.py:init_printer()] - Printer initialized
2023-12-13 14:01:55,880 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-13 14:01:55,880 [printer.py:change_state()] - Adding callback for state: ready
2023-12-13 14:01:55,884 [screen.py:_load_panel()] - Loading panel: main_menu
2023-12-13 14:01:55,960 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-13 14:01:55,967 [main_menu.py:add_device()] - Adding device: extruder
2023-12-13 14:01:55,974 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-13 14:01:56,002 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-13 14:01:56,003 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-12-13 14:01:57,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:57,554 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-13 14:01:57,564 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-13 14:01:57,565 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-13 14:01:58,553 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:58,566 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-13 14:01:58,581 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-13 14:01:58,583 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-13 14:01:59,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:01:59,554 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-13 14:01:59,562 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-13 14:01:59,563 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-13 14:02:01,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:02:01,554 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-13 14:02:01,562 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-13 14:02:01,563 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-13 14:08:55,750 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-13 14:08:55,750 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-13 14:08:55,751 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-13 14:08:55,754 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 14:08:55,831 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 14:08:59,083 [screen.py:_websocket_callback()] - Still not initialized
2023-12-13 14:08:59,548 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 14:08:59,554 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 14:08:59,555 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'gpio', 'power', 'authorization', 'octoprint_compat', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 14:08:59,561 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 14:08:59,562 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 14:08:59,562 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-13 14:08:59,568 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 14:08:59,569 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 14:08:59,578 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 14:08:59,839 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 14:08:59,840 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 14:08:59,842 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 14:08:59,843 [printer.py:reinit()] - # Extruders: 1
2023-12-13 14:08:59,843 [printer.py:reinit()] - # Temperature devices: 1
2023-12-13 14:08:59,843 [printer.py:reinit()] - # Fans: 2
2023-12-13 14:08:59,843 [printer.py:reinit()] - # Output pins: 0
2023-12-13 14:08:59,843 [printer.py:reinit()] - # Leds: 0
2023-12-13 14:08:59,852 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 14:08:59,853 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 14:09:00,088 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-13 14:09:00,098 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:09:00,104 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-13 14:09:00,112 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-13 14:09:00,113 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-13 14:09:00,113 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-13 14:09:00,113 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 14:09:00,113 [screen.py:init_printer()] - Printer initialized
2023-12-13 14:09:00,114 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-13 14:09:00,114 [printer.py:change_state()] - Adding callback for state: ready
2023-12-13 14:09:00,117 [screen.py:show_panel()] - Reinitializing panel
2023-12-13 14:09:00,181 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-13 14:09:00,188 [main_menu.py:add_device()] - Adding device: extruder
2023-12-13 14:09:00,194 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-13 14:09:00,221 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-13 14:22:40,609 [files.py:_callback()] - Error in getting metadata for moonraker.upload-3394.mru. Retrying in 6 seconds
2023-12-13 14:22:41,560 [files.py:_callback()] - Error in getting metadata for .. Retrying in 6 seconds
2023-12-13 14:23:19,190 [files.py:_callback()] - Error in getting metadata for moonraker.upload-3433.mru. Retrying in 6 seconds
2023-12-13 14:23:20,171 [files.py:add_file()] - File already exists: .
2023-12-13 14:23:20,175 [files.py:_callback()] - Error in getting metadata for .. Retrying in 6 seconds
2023-12-13 14:25:21,292 [KlippyWebsocket.py:get_file_dir()] - Sending server.files.directory
2023-12-13 14:26:36,543 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-13 14:29:01,076 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-12-13 14:29:01,077 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-12-13 14:29:01,077 [functions.py:log_start()] - Python version: 3.11
2023-12-13 14:29:01,227 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-12-13 14:29:01,228 [config.py:__init__()] - Config path location: /home/pi/printer_data/config/KlipperScreen.conf
2023-12-13 14:29:01,245 [config.py:log_config()] -  ===== Config File =====

=======================
2023-12-13 14:29:01,247 [config.py:__init__()] - ====== Saved Def ======

[main]
confirm_estop = True

=======================
2023-12-13 14:29:01,248 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-12-13 14:29:01,365 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-12-13 14:29:01,365 [config.py:install_language()] - Using system lang
2023-12-13 14:29:01,366 [config.py:install_language()] - Using lang en
2023-12-13 14:29:01,389 [screen.py:__init__()] - Screen resolution: 800x480
2023-12-13 14:29:01,390 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-12-13 14:29:02,202 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-12-13 14:29:02,221 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-12-13 14:29:02,244 [screen.py:initial_connection()] - Default printer: None
2023-12-13 14:29:02,245 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-13 14:29:02,245 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-12-13 14:29:02,381 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-13 14:29:02,409 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-13 14:29:02,432 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 14:29:02,447 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-13 14:29:02,448 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-13 14:29:02,459 [_logging.py:info()] - Websocket connected
2023-12-13 14:29:02,460 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-13 14:29:02,635 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 14:29:02,644 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-13 14:29:02,645 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'history', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-13 14:29:02,658 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-13 14:29:02,659 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-13 14:29:02,659 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-13 14:29:02,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-13 14:29:02,671 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-13 14:29:02,681 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-13 14:29:02,702 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-13 14:29:02,705 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-13 14:29:02,707 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-13 14:29:02,708 [printer.py:reinit()] - # Extruders: 1
2023-12-13 14:29:02,708 [printer.py:reinit()] - # Temperature devices: 1
2023-12-13 14:29:02,708 [printer.py:reinit()] - # Fans: 2
2023-12-13 14:29:02,708 [printer.py:reinit()] - # Output pins: 0
2023-12-13 14:29:02,708 [printer.py:reinit()] - # Leds: 0
2023-12-13 14:29:02,725 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-13 14:29:02,729 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-13 14:29:02,965 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-13 14:29:02,982 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:29:02,983 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:29:02,984 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-13 14:29:02,984 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-13 14:29:02,985 [screen.py:init_printer()] - Printer initialized
2023-12-13 14:29:02,985 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-13 14:29:02,985 [printer.py:change_state()] - Adding callback for state: startup
2023-12-13 14:29:08,670 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:29:08,671 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-13 14:29:13,671 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-13 14:29:13,672 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 11:02:16,681 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 11:02:16,682 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 11:02:21,678 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 11:02:21,679 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 11:02:26,677 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 11:02:26,678 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 11:02:31,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 11:02:31,671 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 11:02:35,996 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 11:02:36,677 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 11:02:36,679 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 11:02:41,303 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-14 11:02:41,304 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 11:02:41,307 [screen.py:_load_panel()] - Loading panel: main_menu
2023-12-14 11:02:41,378 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-14 11:02:41,384 [main_menu.py:add_device()] - Adding device: extruder
2023-12-14 11:02:41,390 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-14 11:02:41,417 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 11:02:41,418 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-12-14 11:02:41,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 11:02:41,670 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 11:02:46,674 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 11:02:46,688 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-14 11:02:46,705 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-14 11:02:46,707 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-14 12:02:00,663 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-14 19:51:25,716 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-14 19:51:25,756 [screen.py:wake_screen()] - Screen wake up
2023-12-14 19:51:27,414 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-14 19:51:27,414 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-14 19:51:27,418 [screen.py:_load_panel()] - Loading panel: menu
2023-12-14 19:51:27,630 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-14 19:51:27,641 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-14 19:51:27,646 [menu.py:arrangeMenuItems()] - X > more led
2023-12-14 19:51:27,654 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-14 19:51:27,665 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-14 19:51:27,671 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-14 19:51:29,107 [screen.py:_load_panel()] - Loading panel: power
2023-12-14 19:51:29,129 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > power
2023-12-14 19:51:30,831 [power.py:on_switch()] - Power toggled my_light
2023-12-14 19:51:30,831 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-14 19:51:30,840 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 19:51:34,834 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 19:51:34,884 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-14 19:51:34,902 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-14 19:51:34,907 [menu.py:arrangeMenuItems()] - X > more led
2023-12-14 19:51:34,912 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-14 19:51:34,922 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-14 19:51:34,929 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-14 19:51:39,851 [screen.py:_load_panel()] - Loading panel: camera
2023-12-14 19:51:40,674 [camera.py:__init__()] - {'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}
2023-12-14 19:51:40,699 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > camera
2023-12-14 19:51:40,700 [camera.py:play()] - camera URL is relative
2023-12-14 19:51:40,700 [camera.py:play()] - video filters: rotate:0.0
2023-12-14 19:51:40,794 [camera.py:play()] - Camera URL: http://127.0.0.1/webcam/?action=stream
2023-12-14 19:51:40,867 [camera.py:log()] - [warn] lavf: This format is marked by FFmpeg as having no timestamps!

2023-12-14 19:51:40,868 [camera.py:log()] - [warn] lavf: FFmpeg will likely make up its own broken timestamps. For

2023-12-14 19:51:40,868 [camera.py:log()] - [warn] lavf: video streams you can correct this with:

2023-12-14 19:51:40,869 [camera.py:log()] - [warn] lavf:     --no-correct-pts --fps=VALUE

2023-12-14 19:51:40,869 [camera.py:log()] - [warn] lavf: with VALUE being the real framerate of the stream. You can

2023-12-14 19:51:40,869 [camera.py:log()] - [warn] lavf: expect seeking and buffering estimation to be generally

2023-12-14 19:51:40,869 [camera.py:log()] - [warn] lavf: broken as well.

2023-12-14 19:51:40,869 [camera.py:log()] - [info] cplayer:  (+) Video --vid=1 (mjpeg)

2023-12-14 19:51:41,338 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,340 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,353 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,354 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,355 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,356 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,357 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,359 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,360 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,361 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,362 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,362 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,364 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,365 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,366 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,367 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,368 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,370 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,372 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,373 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,374 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,375 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:51:41,385 [camera.py:log()] - [info] cplayer: VO: [gpu] 640x480 yuv444p

2023-12-14 19:51:41,393 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,395 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,406 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,408 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,478 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,482 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,489 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,491 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,506 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,508 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,514 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,516 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,539 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,541 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,547 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,549 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,572 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,575 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,581 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,583 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,606 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,607 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,614 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,618 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,674 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,677 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,741 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,744 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,810 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,812 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,874 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,876 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,944 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:41,946 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,011 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,013 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,074 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,077 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,142 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,146 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,210 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,212 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,274 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,276 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,346 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,349 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,411 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,413 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,474 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,477 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,542 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,545 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,610 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,613 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,674 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,676 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,741 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,744 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,811 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,815 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,873 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,877 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,944 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:42,948 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,011 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,014 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,074 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,076 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,142 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,144 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,210 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,213 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,274 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,279 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,344 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,350 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,411 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,413 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,474 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,477 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,542 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,544 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,610 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,614 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,674 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,676 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,744 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,749 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,811 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,814 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,874 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,879 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,942 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:43,944 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,010 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,014 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,110 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,113 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,173 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,176 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,210 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,213 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,276 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,279 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,374 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,377 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,441 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,444 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,510 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,513 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,573 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,576 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,644 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,647 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,710 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,714 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,774 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,778 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,842 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,845 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,910 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,913 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,973 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:44,976 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,044 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,047 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,111 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,114 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,174 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,179 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,243 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,248 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,311 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,316 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,375 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,381 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,442 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,447 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,512 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,518 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,575 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,582 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,642 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,647 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,711 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,717 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,775 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,780 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,843 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,847 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,911 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,918 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,975 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:45,981 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,043 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,049 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,112 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,118 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,176 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,182 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,243 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,247 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,312 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,318 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,375 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,381 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,443 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,449 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,512 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,519 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,575 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,584 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,644 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,651 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,710 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,719 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,774 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,781 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,842 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,848 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,910 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,918 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,974 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:46,981 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,042 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,048 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,110 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,116 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,173 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,177 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,244 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,251 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,311 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,314 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,374 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,379 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,442 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,446 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,510 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,514 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,574 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,578 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,642 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,645 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,757 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,770 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,781 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,792 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,842 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,847 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,911 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,915 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,975 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:47,979 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,042 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,049 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,112 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,117 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,174 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,178 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,242 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,246 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,310 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,314 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,374 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,379 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,444 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,449 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,511 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,516 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,574 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,579 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,642 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,647 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,710 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,715 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,810 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,814 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,845 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,849 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,911 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:48,916 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,011 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,016 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,076 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,084 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,111 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,117 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,210 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,216 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,273 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,279 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,344 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,351 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,412 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,418 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,474 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,480 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,541 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,549 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,610 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,617 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,673 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,680 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,744 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,750 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,810 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,816 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,874 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,880 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,945 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:49,951 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,010 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,016 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,077 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,084 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,144 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,150 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,210 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,219 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,274 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,280 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,341 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,348 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,410 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,417 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,477 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,483 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,544 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,551 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,610 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,617 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,674 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,682 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,743 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,751 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,810 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,819 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,873 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,879 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,944 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:50,950 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,010 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,016 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,074 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,081 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,141 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,149 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,210 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,216 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,275 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,283 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,344 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,350 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,411 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,417 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,474 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,480 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,542 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,548 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,610 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,616 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,674 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,681 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,743 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,751 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,810 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,819 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,875 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,883 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,942 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:51,950 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,010 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,020 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,074 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,082 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,145 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,157 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,212 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,221 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,276 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,286 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,343 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,354 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,412 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,421 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,475 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,487 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,543 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,551 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,612 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,625 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,676 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,686 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,743 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,754 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,812 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,823 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,876 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,888 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,943 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:52,952 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,012 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,025 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,076 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,086 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,143 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,152 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,213 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,223 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,276 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,285 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,344 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,356 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,412 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,423 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,476 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,488 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,543 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,554 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,612 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,624 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,711 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,724 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,743 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,754 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,811 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,824 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,911 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,922 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,976 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:53,988 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,043 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,052 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,111 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,124 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,175 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,187 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,243 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,253 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,312 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,324 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,376 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,388 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,443 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,454 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,512 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,523 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,576 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,588 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,643 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,651 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,710 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,720 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,773 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,781 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,844 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,854 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,911 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,919 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,974 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:54,983 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,042 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,051 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,111 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,118 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,174 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,182 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,241 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,249 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,310 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,318 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,373 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,381 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,444 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,454 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,511 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,519 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,574 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,582 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,641 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,649 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,710 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,718 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,773 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,781 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,844 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,854 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,911 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,919 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,974 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:55,982 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,042 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,050 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,110 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,120 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,174 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,182 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,243 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,251 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,310 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,320 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,373 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,382 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,444 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,453 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,510 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,520 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,577 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,586 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,644 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,653 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,709 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,718 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,777 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,786 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,843 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,852 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,910 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,919 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,973 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:56,982 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,044 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,053 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,110 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,118 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,177 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,186 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,244 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,254 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,310 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,319 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,377 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,386 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,443 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,453 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,510 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,520 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,574 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,582 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,641 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,651 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,710 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,719 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:51:57,776 [camera.py:log()] - [info] cplayer: 

2023-12-14 19:51:57,805 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 19:51:57,832 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-14 19:51:57,844 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-14 19:51:57,849 [menu.py:arrangeMenuItems()] - X > more led
2023-12-14 19:51:57,854 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-14 19:51:57,864 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-14 19:51:57,871 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-14 19:52:02,037 [screen.py:_load_panel()] - Loading panel: fan
2023-12-14 19:52:02,047 [fan.py:add_fan()] - Adding fan: fan
2023-12-14 19:52:02,065 [fan.py:add_fan()] - Adding fan: heater_fan my_nozzle_fan
2023-12-14 19:52:02,094 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > fan
2023-12-14 19:52:04,090 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 19:52:04,117 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-14 19:52:04,128 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-14 19:52:04,133 [menu.py:arrangeMenuItems()] - X > more led
2023-12-14 19:52:04,137 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-14 19:52:04,147 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-14 19:52:04,153 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-14 19:52:05,276 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > camera
2023-12-14 19:52:05,276 [camera.py:play()] - camera URL is relative
2023-12-14 19:52:05,276 [camera.py:play()] - video filters: rotate:0.0
2023-12-14 19:52:05,324 [camera.py:play()] - Camera URL: http://127.0.0.1/webcam/?action=stream
2023-12-14 19:52:05,394 [camera.py:log()] - [warn] lavf: This format is marked by FFmpeg as having no timestamps!

2023-12-14 19:52:05,394 [camera.py:log()] - [warn] lavf: FFmpeg will likely make up its own broken timestamps. For

2023-12-14 19:52:05,394 [camera.py:log()] - [warn] lavf: video streams you can correct this with:

2023-12-14 19:52:05,394 [camera.py:log()] - [warn] lavf:     --no-correct-pts --fps=VALUE

2023-12-14 19:52:05,395 [camera.py:log()] - [warn] lavf: with VALUE being the real framerate of the stream. You can

2023-12-14 19:52:05,395 [camera.py:log()] - [warn] lavf: expect seeking and buffering estimation to be generally

2023-12-14 19:52:05,395 [camera.py:log()] - [warn] lavf: broken as well.

2023-12-14 19:52:05,395 [camera.py:log()] - [info] cplayer:  (+) Video --vid=1 (mjpeg)

2023-12-14 19:52:05,798 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,800 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,809 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,810 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,810 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,810 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,810 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,810 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,811 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,811 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,812 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,812 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,813 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,814 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,814 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,815 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,815 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,816 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,817 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,817 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,817 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,818 [camera.py:log()] - [warn] ffmpeg: swscaler: deprecated pixel format used, make sure you did set range correctly

2023-12-14 19:52:05,826 [camera.py:log()] - [info] cplayer: VO: [gpu] 640x480 yuv444p

2023-12-14 19:52:05,830 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,835 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,845 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,849 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,897 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,901 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,911 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,916 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,926 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,932 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,941 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,945 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,959 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,963 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,976 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,980 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,992 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:05,996 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,043 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,048 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,110 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,114 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,174 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,178 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,244 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,248 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,310 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,314 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,376 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,381 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,444 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,448 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,510 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,514 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,574 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,579 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,643 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,648 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,712 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,718 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,773 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,778 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,844 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,849 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,910 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,914 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,976 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:06,981 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,044 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,048 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,109 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,114 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,176 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,180 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,241 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,246 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,312 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,319 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,373 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,381 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,444 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,450 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,510 [camera.py:log()] - [error] ffmpeg/video: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,517 [screen.py:show_popup_message()] - error: mjpeg: unable to decode APP fields: Invalid data found when processing input

2023-12-14 19:52:07,606 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 19:52:07,636 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-14 19:52:07,648 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-14 19:52:07,653 [menu.py:arrangeMenuItems()] - X > more led
2023-12-14 19:52:07,658 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-14 19:52:07,667 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-14 19:52:07,676 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-14 19:52:14,507 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 19:52:14,557 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 19:52:21,246 [screen.py:_load_panel()] - Loading panel: move
2023-12-14 19:52:21,351 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-14 19:52:25,089 [screen.py:_load_panel()] - Loading panel: menu
2023-12-14 19:52:25,175 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move > menu
2023-12-14 19:52:25,185 [menu.py:arrangeMenuItems()] - X > homing quad_gantry_level
2023-12-14 19:52:25,187 [menu.py:arrangeMenuItems()] - X > homing Z-Tilt
2023-12-14 19:52:29,972 [screen.py:_send_action()] - printer.gcode.script: {'script': 'G28'}
2023-12-14 19:53:24,702 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 19:53:24,744 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-14 19:53:26,578 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 19:53:26,601 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 19:53:29,686 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-14 19:53:29,686 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-14 19:53:29,716 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-14 19:53:29,728 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-14 19:53:29,733 [menu.py:arrangeMenuItems()] - X > more led
2023-12-14 19:53:29,738 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-14 19:53:29,746 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-14 19:53:29,754 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-14 19:53:31,519 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > power
2023-12-14 19:53:33,765 [power.py:on_switch()] - Power toggled printer
2023-12-14 19:53:33,765 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: printer
2023-12-14 19:53:33,774 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 19:53:34,600 [power.py:on_switch()] - Power toggled my_light
2023-12-14 19:53:34,600 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: my_light
2023-12-14 19:53:34,608 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 19:53:38,962 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-12-14 19:53:38,962 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-14 19:53:38,983 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 19:53:39,062 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 19:53:43,738 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-12-14 19:53:43,738 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-12-14 19:53:43,740 [screen.py:_load_panel()] - Loading panel: menu
2023-12-14 19:53:43,745 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-14 19:53:43,779 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-14 19:53:43,784 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-14 19:53:45,765 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 19:53:45,789 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > power
2023-12-14 20:00:00,668 [power.py:on_switch()] - Power toggled printer
2023-12-14 20:00:00,669 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-14 20:00:00,693 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 20:00:01,214 [power.py:on_switch()] - Power toggled my_light
2023-12-14 20:00:01,214 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-14 20:00:01,226 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 20:00:02,018 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-14 20:00:02,018 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-14 20:00:02,018 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-14 20:00:02,020 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 20:00:02,061 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 20:00:05,354 [screen.py:_websocket_callback()] - Still not initialized
2023-12-14 20:00:05,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 20:00:05,676 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 20:00:05,677 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'history', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-14 20:00:05,683 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-14 20:00:05,684 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-14 20:00:05,685 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-14 20:00:05,691 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-14 20:00:05,692 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-14 20:00:05,699 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-14 20:00:05,858 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-14 20:00:05,859 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-14 20:00:05,862 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-14 20:00:05,862 [printer.py:reinit()] - # Extruders: 1
2023-12-14 20:00:05,862 [printer.py:reinit()] - # Temperature devices: 1
2023-12-14 20:00:05,862 [printer.py:reinit()] - # Fans: 2
2023-12-14 20:00:05,862 [printer.py:reinit()] - # Output pins: 0
2023-12-14 20:00:05,862 [printer.py:reinit()] - # Leds: 0
2023-12-14 20:00:05,872 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-14 20:00:05,873 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-14 20:00:06,107 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-14 20:00:06,121 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 20:00:06,125 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-14 20:00:06,132 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-14 20:00:06,133 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-14 20:00:06,133 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-14 20:00:06,133 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 20:00:06,134 [screen.py:init_printer()] - Printer initialized
2023-12-14 20:00:06,134 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-14 20:00:06,135 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 20:00:06,137 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 20:00:06,202 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-14 20:00:06,211 [main_menu.py:add_device()] - Adding device: extruder
2023-12-14 20:00:06,216 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-14 20:00:06,244 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 20:00:11,719 [screen.py:_load_panel()] - Loading panel: print
2023-12-14 20:00:11,727 [print.py:__init__()] - 24h time is True
2023-12-14 20:00:11,750 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > print
2023-12-14 20:00:11,750 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 20:00:18,227 [KlippyGtk.py:Dialog()] - Showing dialog Print OrcaCube_PLA_1h40m.gcode (width=800, height=480)
2023-12-14 20:00:20,162 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-14 20:00:20,162 [print.py:confirm_print_response()] - Starting print: OrcaCube_PLA_1h40m.gcode
2023-12-14 20:00:20,162 [KlippyWebsocket.py:print_start()] - Sending printer.print.start
2023-12-14 20:00:20,182 [screen.py:show_popup_message()] - error: // Unknown command:"M201"
2023-12-14 20:00:20,194 [screen.py:show_popup_message()] - error: // Unknown command:"M203"
2023-12-14 20:00:20,206 [screen.py:show_popup_message()] - error: // Unknown command:"M205"
2023-12-14 20:00:20,393 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-14 20:00:20,393 [printer.py:change_state()] - Adding callback for state: printing
2023-12-14 20:00:20,396 [screen.py:_load_panel()] - Loading panel: job_status
2023-12-14 20:00:20,551 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-14 20:00:20,557 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-14 20:00:20,571 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_1h40m.gcode Size: 4198463
2023-12-14 20:00:20,576 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_1h40m.gcode
2023-12-14 20:01:00,936 [screen.py:_load_panel()] - Loading panel: fine_tune
2023-12-14 20:01:01,049 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2023-12-14 20:01:14,920 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 20:01:14,977 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-14 20:01:15,005 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_1h40m.gcode Size: 4198463
2023-12-14 20:01:15,012 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_1h40m.gcode
2023-12-14 20:01:58,251 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 3.000 [0.000]
2023-12-14 20:01:58,322 [screen.py:show_popup_message()] - echo: "extruder" not hot enough
2023-12-14 20:01:58,417 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelled'
2023-12-14 20:01:59,157 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2023-12-14 20:01:59,157 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 20:02:04,334 [job_status.py:close_panel()] - Closing job_status panel
2023-12-14 20:02:04,339 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 20:02:04,433 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-14 20:02:04,439 [main_menu.py:add_device()] - Adding device: extruder
2023-12-14 20:02:04,445 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-14 20:02:04,471 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 20:02:26,387 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-14 20:02:26,387 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-14 20:02:26,395 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 20:02:26,607 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-14 20:02:26,616 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-14 20:02:26,621 [menu.py:arrangeMenuItems()] - X > more led
2023-12-14 20:02:26,625 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-14 20:02:26,634 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-14 20:02:26,640 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-14 20:02:28,375 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 20:02:28,396 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more > power
2023-12-14 20:02:30,771 [power.py:on_switch()] - Power toggled my_light
2023-12-14 20:02:30,771 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: my_light
2023-12-14 20:02:30,779 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 20:02:31,173 [power.py:on_switch()] - Power toggled printer
2023-12-14 20:02:31,173 [KlippyWebsocket.py:power_device_off()] - Sending machine.device_power.off: printer
2023-12-14 20:02:31,181 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 20:02:40,034 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-12-14 20:02:40,035 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-14 20:02:40,047 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 20:02:40,089 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 20:57:35,729 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 20:57:37,074 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-14 20:57:37,074 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-14 20:57:37,075 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-14 20:57:37,077 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 20:57:37,120 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 20:57:40,410 [screen.py:_websocket_callback()] - Still not initialized
2023-12-14 20:57:40,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 20:57:40,676 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 20:57:40,677 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'history', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-14 20:57:40,687 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-14 20:57:40,688 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-14 20:57:40,688 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'off'}}
2023-12-14 20:57:40,695 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-14 20:57:40,695 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-14 20:57:40,703 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-14 20:57:40,915 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-14 20:57:40,918 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-14 20:57:40,920 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-14 20:57:40,921 [printer.py:reinit()] - # Extruders: 1
2023-12-14 20:57:40,921 [printer.py:reinit()] - # Temperature devices: 1
2023-12-14 20:57:40,921 [printer.py:reinit()] - # Fans: 2
2023-12-14 20:57:40,921 [printer.py:reinit()] - # Output pins: 0
2023-12-14 20:57:40,921 [printer.py:reinit()] - # Leds: 0
2023-12-14 20:57:40,930 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-14 20:57:40,931 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-14 20:57:41,182 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-14 20:57:41,212 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 20:57:41,220 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-14 20:57:41,235 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-14 20:57:41,237 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-14 20:57:41,237 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-14 20:57:41,237 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 20:57:41,238 [screen.py:init_printer()] - Printer initialized
2023-12-14 20:57:41,239 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-14 20:57:41,239 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 20:57:41,243 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 20:57:41,309 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-14 20:57:41,316 [main_menu.py:add_device()] - Adding device: extruder
2023-12-14 20:57:41,323 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-14 20:57:41,352 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 20:58:09,326 [print.py:_callback()] - newfiles: []
2023-12-14 20:58:09,326 [print.py:_callback()] - deletedfiles: ['OrcaCube_PLA_1h40m.gcode']
2023-12-14 20:58:09,329 [print.py:_callback()] - updatefiles: []
2023-12-14 21:02:31,663 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-14 21:03:17,091 [print.py:_callback()] - newfiles: ['OrcaCube_PLA_1h28m.gcode']
2023-12-14 21:03:17,106 [print.py:_callback()] - deletedfiles: []
2023-12-14 21:03:17,106 [print.py:_callback()] - updatefiles: []
2023-12-14 21:03:17,112 [print.py:_callback()] - newfiles: ['.thumbs/OrcaCube_PLA_1h28m-300x300.png']
2023-12-14 21:03:17,112 [print.py:_callback()] - deletedfiles: []
2023-12-14 21:03:17,112 [print.py:_callback()] - updatefiles: []
2023-12-14 21:03:17,112 [print.py:_callback()] - newfiles: ['.thumbs/OrcaCube_PLA_1h28m-32x32.png']
2023-12-14 21:03:17,112 [print.py:_callback()] - deletedfiles: []
2023-12-14 21:03:17,112 [print.py:_callback()] - updatefiles: []
2023-12-14 21:03:17,113 [print.py:_callback()] - newfiles: []
2023-12-14 21:03:17,113 [print.py:_callback()] - deletedfiles: []
2023-12-14 21:03:17,113 [print.py:_callback()] - updatefiles: ['OrcaCube_PLA_1h28m.gcode']
2023-12-14 21:03:17,113 [print.py:update_file()] - Updating file OrcaCube_PLA_1h28m.gcode
2023-12-14 21:03:17,113 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_1h28m-300x300.png. Retrying in 6 seconds
2023-12-14 21:03:17,113 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_1h28m-32x32.png. Retrying in 6 seconds
2023-12-14 21:04:06,307 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 21:05:54,394 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-14 21:05:54,493 [screen.py:wake_screen()] - Screen wake up
2023-12-14 21:05:55,680 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:05:55,687 [print.py:__init__()] - 24h time is True
2023-12-14 21:05:55,711 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > print
2023-12-14 21:05:55,711 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 21:05:55,757 [print.py:_callback()] - newfiles: []
2023-12-14 21:05:55,757 [print.py:_callback()] - deletedfiles: ['.thumbs/OrcaCube_PLA_1h28m-300x300.png', '.thumbs/OrcaCube_PLA_1h28m-32x32.png']
2023-12-14 21:05:55,757 [print.py:_callback()] - updatefiles: []
2023-12-14 21:05:55,757 [print.py:_callback()] - newfiles: []
2023-12-14 21:05:55,757 [print.py:_callback()] - deletedfiles: ['.thumbs/OrcaCube_PLA_1h28m-300x300.png', '.thumbs/OrcaCube_PLA_1h28m-32x32.png']
2023-12-14 21:05:55,757 [print.py:_callback()] - updatefiles: []
2023-12-14 21:05:55,757 [print.py:_callback()] - newfiles: []
2023-12-14 21:05:55,757 [print.py:_callback()] - deletedfiles: ['.thumbs/OrcaCube_PLA_1h28m-300x300.png']
2023-12-14 21:05:55,758 [print.py:_callback()] - updatefiles: []
2023-12-14 21:05:55,758 [print.py:_callback()] - newfiles: []
2023-12-14 21:05:55,758 [print.py:_callback()] - deletedfiles: ['.thumbs/OrcaCube_PLA_1h28m-300x300.png']
2023-12-14 21:05:55,758 [print.py:_callback()] - updatefiles: []
2023-12-14 21:05:55,758 [print.py:_callback()] - newfiles: []
2023-12-14 21:05:55,758 [print.py:_callback()] - deletedfiles: ['.thumbs/OrcaCube_PLA_1h28m-32x32.png']
2023-12-14 21:05:55,758 [print.py:_callback()] - updatefiles: []
2023-12-14 21:05:55,758 [print.py:_callback()] - newfiles: []
2023-12-14 21:05:55,758 [print.py:_callback()] - deletedfiles: ['.thumbs/OrcaCube_PLA_1h28m-32x32.png']
2023-12-14 21:05:55,758 [print.py:_callback()] - updatefiles: []
2023-12-14 21:05:58,183 [KlippyGtk.py:Dialog()] - Showing dialog Print OrcaCube_PLA_1h28m.gcode (width=800, height=480)
2023-12-14 21:05:59,459 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-14 21:05:59,459 [print.py:confirm_print_response()] - Starting print: OrcaCube_PLA_1h28m.gcode
2023-12-14 21:05:59,459 [KlippyWebsocket.py:print_start()] - Sending printer.print.start
2023-12-14 21:05:59,479 [screen.py:show_popup_message()] - error: // Unknown command:"EXCLUDE_OBJECT_DEFINE"
2023-12-14 21:05:59,493 [screen.py:show_popup_message()] - error: // Unknown command:"EXCLUDE_OBJECT_DEFINE"
2023-12-14 21:05:59,708 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-14 21:05:59,709 [printer.py:change_state()] - Adding callback for state: printing
2023-12-14 21:05:59,711 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:05:59,830 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-14 21:05:59,836 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-14 21:05:59,848 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_1h28m.gcode Size: 3686483
2023-12-14 21:05:59,854 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_1h28m.gcode
2023-12-14 21:07:08,530 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 3.000 [0.000]
2023-12-14 21:07:08,607 [screen.py:show_popup_message()] - echo: "extruder" not hot enough
2023-12-14 21:07:08,686 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelled'
2023-12-14 21:07:09,383 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2023-12-14 21:07:09,383 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 21:07:17,466 [job_status.py:close_panel()] - Closing job_status panel
2023-12-14 21:07:17,469 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:07:17,530 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-14 21:07:17,537 [main_menu.py:add_device()] - Adding device: extruder
2023-12-14 21:07:17,542 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-14 21:07:17,569 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 21:07:30,797 [screen.py:_load_panel()] - Loading panel: temperature
2023-12-14 21:07:30,823 [temperature.py:add_device()] - Adding device: extruder
2023-12-14 21:07:30,831 [temperature.py:add_device()] - Adding device: heater_bed
2023-12-14 21:07:30,839 [temperature.py:select_heater()] - Selecting extruder
2023-12-14 21:07:30,841 [temperature.py:select_heater()] - Selecting heater_bed
2023-12-14 21:07:30,873 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > temperature
2023-12-14 21:07:33,611 [temperature.py:select_heater()] - Deselecting extruder
2023-12-14 21:07:35,050 [temperature.py:set_temperature()] - {'bed': 40.0, 'extruder': 195.0}
2023-12-14 21:07:35,050 [temperature.py:set_temperature()] - {'bed': 40.0, 'extruder': 195.0}
2023-12-14 21:07:35,050 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S40.0
2023-12-14 21:07:39,192 [temperature.py:select_heater()] - Selecting extruder
2023-12-14 21:07:40,523 [temperature.py:set_temperature()] - {'bed': 40.0, 'extruder': 195.0}
2023-12-14 21:07:40,523 [temperature.py:set_temperature()] - {'bed': 40.0, 'extruder': 195.0}
2023-12-14 21:07:40,524 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S40.0
2023-12-14 21:07:40,525 [temperature.py:set_temperature()] - {'bed': 40.0, 'extruder': 195.0}
2023-12-14 21:07:40,526 [temperature.py:set_temperature()] - {'bed': 40.0, 'extruder': 195.0}
2023-12-14 21:07:40,526 [temperature.py:set_temperature()] - name match extruder
2023-12-14 21:07:40,526 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S195.0
2023-12-14 21:07:42,684 [temperature.py:select_heater()] - Deselecting heater_bed
2023-12-14 21:07:43,879 [temperature.py:select_heater()] - Selecting heater_bed
2023-12-14 21:07:51,422 [temperature.py:select_heater()] - Deselecting extruder
2023-12-14 21:07:53,362 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S50.0
2023-12-14 21:07:53,364 [temperature.py:change_target_temp_incremental()] - Setting heater_bed to 50.0
2023-12-14 21:07:54,015 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S60.0
2023-12-14 21:07:54,016 [temperature.py:change_target_temp_incremental()] - Setting heater_bed to 60.0
2023-12-14 21:07:54,886 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S70.0
2023-12-14 21:07:54,888 [temperature.py:change_target_temp_incremental()] - Setting heater_bed to 70.0
2023-12-14 21:07:59,150 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 21:07:59,189 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 21:08:10,724 [heatergraph.py:event_cb()] - Graph area: 266.99468994140625 102.99407958984375
2023-12-14 21:08:12,658 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:08:12,676 [print.py:__init__()] - 24h time is True
2023-12-14 21:08:12,713 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > print
2023-12-14 21:08:12,713 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 21:08:20,136 [KlippyGtk.py:Dialog()] - Showing dialog Print OrcaCube_PLA_1h28m.gcode (width=800, height=480)
2023-12-14 21:08:21,510 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-14 21:08:21,510 [print.py:confirm_print_response()] - Starting print: OrcaCube_PLA_1h28m.gcode
2023-12-14 21:08:21,511 [KlippyWebsocket.py:print_start()] - Sending printer.print.start
2023-12-14 21:08:21,530 [screen.py:show_popup_message()] - error: // Unknown command:"EXCLUDE_OBJECT_DEFINE"
2023-12-14 21:08:21,542 [screen.py:show_popup_message()] - error: // Unknown command:"EXCLUDE_OBJECT_DEFINE"
2023-12-14 21:08:21,555 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 3.000 [0.000]
2023-12-14 21:08:30,640 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 21:08:30,692 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 21:08:32,826 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-14 21:08:32,826 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-14 21:08:32,831 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:08:33,047 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-14 21:08:33,057 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-14 21:08:33,063 [menu.py:arrangeMenuItems()] - X > more led
2023-12-14 21:08:33,069 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-14 21:08:33,079 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-14 21:08:33,086 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-14 21:08:36,963 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 21:08:37,008 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 21:08:38,154 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > temperature
2023-12-14 21:08:38,822 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S0
2023-12-14 21:20:36,394 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-14 21:20:36,394 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-14 21:20:36,395 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-14 21:20:36,399 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:20:36,472 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:20:39,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:20:39,676 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:20:39,676 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'history', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-14 21:20:39,683 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-14 21:20:39,683 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-14 21:20:39,683 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-14 21:20:39,689 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-14 21:20:39,690 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-14 21:20:39,697 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-14 21:20:39,717 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-14 21:20:39,717 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-14 21:20:39,718 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-14 21:20:39,718 [printer.py:reinit()] - # Extruders: 0
2023-12-14 21:20:39,718 [printer.py:reinit()] - # Temperature devices: 0
2023-12-14 21:20:39,718 [printer.py:reinit()] - # Fans: 0
2023-12-14 21:20:39,719 [printer.py:reinit()] - # Output pins: 0
2023-12-14 21:20:39,719 [printer.py:reinit()] - # Leds: 0
2023-12-14 21:20:39,726 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-14 21:20:39,727 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-14 21:20:39,971 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-14 21:20:39,972 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-14 21:20:39,972 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 21:20:39,972 [screen.py:init_printer()] - Printer initialized
2023-12-14 21:20:39,973 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-14 21:20:39,973 [printer.py:change_state()] - Adding callback for state: error
2023-12-14 21:20:39,975 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:20:40,017 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:21:46,106 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-14 21:21:46,107 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-14 21:21:46,109 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-14 21:21:46,112 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:21:46,187 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:21:49,668 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:21:49,675 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:21:49,676 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'history', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-14 21:21:49,682 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-14 21:21:49,683 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-14 21:21:49,683 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-14 21:21:49,690 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-14 21:21:49,690 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-14 21:21:49,698 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-14 21:21:49,925 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-14 21:21:49,925 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-14 21:21:49,926 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-14 21:21:49,926 [printer.py:reinit()] - # Extruders: 0
2023-12-14 21:21:49,926 [printer.py:reinit()] - # Temperature devices: 0
2023-12-14 21:21:49,926 [printer.py:reinit()] - # Fans: 0
2023-12-14 21:21:49,926 [printer.py:reinit()] - # Output pins: 0
2023-12-14 21:21:49,926 [printer.py:reinit()] - # Leds: 0
2023-12-14 21:21:49,933 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-14 21:21:49,934 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-14 21:21:50,179 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-14 21:21:50,180 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-14 21:21:50,180 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 21:21:50,181 [screen.py:init_printer()] - Printer initialized
2023-12-14 21:21:50,181 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-14 21:21:50,181 [printer.py:change_state()] - Adding callback for state: error
2023-12-14 21:21:50,183 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:21:50,226 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:21:52,039 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-14 21:21:52,039 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-14 21:21:52,040 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-14 21:21:52,041 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:21:52,084 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:21:55,668 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:21:55,675 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:21:55,676 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'authorization', 'history', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-14 21:21:55,682 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-14 21:21:55,683 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-14 21:21:55,683 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-14 21:21:55,690 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-14 21:21:55,690 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-14 21:21:55,698 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-14 21:21:55,863 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-14 21:21:55,864 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-14 21:21:55,864 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-14 21:21:55,864 [printer.py:reinit()] - # Extruders: 0
2023-12-14 21:21:55,864 [printer.py:reinit()] - # Temperature devices: 0
2023-12-14 21:21:55,864 [printer.py:reinit()] - # Fans: 0
2023-12-14 21:21:55,864 [printer.py:reinit()] - # Output pins: 0
2023-12-14 21:21:55,864 [printer.py:reinit()] - # Leds: 0
2023-12-14 21:21:55,872 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-14 21:21:55,873 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-14 21:21:56,119 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-14 21:21:56,120 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-14 21:21:56,121 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 21:21:56,121 [screen.py:init_printer()] - Printer initialized
2023-12-14 21:21:56,121 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-14 21:21:56,121 [printer.py:change_state()] - Adding callback for state: error
2023-12-14 21:21:56,124 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:21:56,168 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:22:34,255 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-12-14 21:22:34,255 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-12-14 21:22:34,256 [functions.py:log_start()] - Python version: 3.11
2023-12-14 21:22:34,405 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-12-14 21:22:34,406 [config.py:__init__()] - Config path location: /home/pi/printer_data/config/KlipperScreen.conf
2023-12-14 21:22:34,426 [config.py:log_config()] -  ===== Config File =====

=======================
2023-12-14 21:22:34,428 [config.py:__init__()] - ====== Saved Def ======

[main]
confirm_estop = True

=======================
2023-12-14 21:22:34,428 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-12-14 21:22:34,524 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-12-14 21:22:34,525 [config.py:install_language()] - Using system lang
2023-12-14 21:22:34,525 [config.py:install_language()] - Using lang en
2023-12-14 21:22:34,551 [screen.py:__init__()] - Screen resolution: 800x480
2023-12-14 21:22:34,554 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-12-14 21:22:35,291 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-12-14 21:22:35,319 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-12-14 21:22:35,337 [screen.py:initial_connection()] - Default printer: None
2023-12-14 21:22:35,337 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-14 21:22:35,338 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-12-14 21:22:35,414 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:22:35,436 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-14 21:22:35,463 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:22:35,495 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-14 21:22:35,497 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-14 21:22:35,508 [_logging.py:info()] - Websocket connected
2023-12-14 21:22:35,508 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-14 21:22:35,643 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:22:35,653 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:22:35,654 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-14 21:22:35,664 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-14 21:22:35,666 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-14 21:22:35,666 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-14 21:22:35,676 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-14 21:22:35,677 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-14 21:22:35,688 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-14 21:22:35,742 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-14 21:22:35,743 [screen.py:init_printer()] - {'configfile': {'config': {}, 'settings': {}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-14 21:22:35,744 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-14 21:22:35,745 [printer.py:reinit()] - # Extruders: 0
2023-12-14 21:22:35,745 [printer.py:reinit()] - # Temperature devices: 0
2023-12-14 21:22:35,745 [printer.py:reinit()] - # Fans: 0
2023-12-14 21:22:35,745 [printer.py:reinit()] - # Output pins: 0
2023-12-14 21:22:35,745 [printer.py:reinit()] - # Leds: 0
2023-12-14 21:22:35,758 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-14 21:22:35,760 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-14 21:22:35,997 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe
2023-12-14 21:22:35,998 [files.py:initialize()] - Gcodes path: None
2023-12-14 21:22:35,999 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 21:22:36,000 [screen.py:init_printer()] - Printer initialized
2023-12-14 21:22:36,000 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-14 21:22:36,000 [printer.py:change_state()] - Adding callback for state: error
2023-12-14 21:22:36,003 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:22:36,061 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:23:09,563 [printer.py:change_state()] - Changing state from 'error' to 'disconnected'
2023-12-14 21:23:09,563 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-14 21:23:09,564 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-14 21:23:09,568 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:23:09,637 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:23:12,449 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:23:12,457 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:23:12,459 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-14 21:23:12,465 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-14 21:23:12,465 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-14 21:23:12,465 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-14 21:23:12,471 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-14 21:23:12,472 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-14 21:23:12,479 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-14 21:23:12,492 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-14 21:23:12,494 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n\nG28\n\nG29\n\n\n\nG90\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-14 21:23:12,496 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-14 21:23:12,496 [printer.py:reinit()] - # Extruders: 1
2023-12-14 21:23:12,496 [printer.py:reinit()] - # Temperature devices: 1
2023-12-14 21:23:12,496 [printer.py:reinit()] - # Fans: 2
2023-12-14 21:23:12,496 [printer.py:reinit()] - # Output pins: 0
2023-12-14 21:23:12,496 [printer.py:reinit()] - # Leds: 0
2023-12-14 21:23:12,505 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-14 21:23:12,506 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-14 21:23:12,756 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-14 21:23:12,765 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 21:23:12,766 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 21:23:12,766 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-14 21:23:12,766 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 21:23:12,769 [screen.py:init_printer()] - Printer initialized
2023-12-14 21:23:12,769 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-14 21:23:12,769 [printer.py:change_state()] - Adding callback for state: startup
2023-12-14 21:23:18,458 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 21:23:18,460 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 21:23:23,458 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 21:23:23,459 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 21:23:26,726 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 21:23:28,449 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 21:23:28,450 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-14 21:23:31,541 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-14 21:23:31,541 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 21:23:31,543 [screen.py:_load_panel()] - Loading panel: main_menu
2023-12-14 21:23:31,615 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-14 21:23:31,623 [main_menu.py:add_device()] - Adding device: extruder
2023-12-14 21:23:31,630 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-14 21:23:31,657 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 21:23:31,658 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-12-14 21:23:33,457 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 21:23:33,470 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-14 21:23:33,484 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-14 21:23:33,485 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-14 21:24:18,204 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-14 21:24:18,204 [printer.py:change_state()] - Adding callback for state: printing
2023-12-14 21:24:18,223 [screen.py:_load_panel()] - Loading panel: job_status
2023-12-14 21:24:18,401 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-14 21:24:18,407 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-14 21:24:18,423 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_1h28m.gcode Size: 3686483
2023-12-14 21:24:18,443 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_1h28m.gcode
2023-12-14 21:25:57,046 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 3.000 [0.000]
2023-12-14 21:25:57,116 [screen.py:show_popup_message()] - echo: "extruder" not hot enough
2023-12-14 21:25:57,215 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'cancelled'
2023-12-14 21:25:57,956 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2023-12-14 21:25:57,956 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 21:43:20,236 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_1h28m-300x300.png. Retrying in 6 seconds
2023-12-14 21:43:20,237 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_1h28m-32x32.png. Retrying in 6 seconds
2023-12-14 21:43:58,741 [job_status.py:set_state()] - Changing job_status state from 'cancelled' to 'standby'
2023-12-14 21:44:02,379 [screen.py:show_popup_message()] - error: // Unknown command:"PRINT_START"
2023-12-14 21:44:02,437 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 3.000 [0.000]
2023-12-14 21:44:02,447 [screen.py:show_popup_message()] - echo: "extruder" not hot enough
2023-12-14 21:44:02,523 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'cancelled'
2023-12-14 21:44:02,527 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_1h28m.gcode Size: 3686646
2023-12-14 21:44:02,534 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_1h28m.gcode
2023-12-14 21:46:10,082 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-14 21:46:10,082 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-14 21:46:10,082 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-14 21:46:10,083 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:46:10,126 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-14 21:46:13,456 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:46:13,469 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-14 21:46:13,471 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-14 21:46:13,482 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-14 21:46:13,483 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-14 21:46:13,483 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'off'}}
2023-12-14 21:46:13,496 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-14 21:46:13,497 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-14 21:46:13,507 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-14 21:46:13,685 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-14 21:46:13,688 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-14 21:46:13,692 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-14 21:46:13,696 [printer.py:reinit()] - # Extruders: 1
2023-12-14 21:46:13,697 [printer.py:reinit()] - # Temperature devices: 1
2023-12-14 21:46:13,697 [printer.py:reinit()] - # Fans: 2
2023-12-14 21:46:13,697 [printer.py:reinit()] - # Output pins: 0
2023-12-14 21:46:13,697 [printer.py:reinit()] - # Leds: 0
2023-12-14 21:46:13,721 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-14 21:46:13,723 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-14 21:46:13,961 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-14 21:46:13,992 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-14 21:46:13,999 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-14 21:46:14,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-14 21:46:14,010 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-14 21:46:14,011 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-14 21:46:14,011 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-14 21:46:14,011 [screen.py:init_printer()] - Printer initialized
2023-12-14 21:46:14,012 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-14 21:46:14,012 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 21:46:14,018 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:46:14,099 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-14 21:46:14,106 [main_menu.py:add_device()] - Adding device: extruder
2023-12-14 21:46:14,111 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-14 21:46:14,137 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-14 21:46:53,152 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_1h28m-300x300.png. Retrying in 6 seconds
2023-12-14 21:46:53,153 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_1h28m-32x32.png. Retrying in 6 seconds
2023-12-14 21:46:57,318 [screen.py:show_popup_message()] - error: // Unknown command:"PRINT_START"
2023-12-14 21:46:57,374 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 3.000 [0.000]
2023-12-14 21:46:57,383 [screen.py:show_popup_message()] - echo: "extruder" not hot enough
2023-12-14 21:48:47,717 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_1h28m-300x300.png. Retrying in 6 seconds
2023-12-14 21:48:47,718 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_1h28m-32x32.png. Retrying in 6 seconds
2023-12-14 21:48:52,902 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-14 21:48:52,902 [printer.py:change_state()] - Adding callback for state: printing
2023-12-14 21:48:52,922 [screen.py:show_panel()] - Reinitializing panel
2023-12-14 21:48:53,057 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-14 21:48:53,063 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-14 21:48:53,075 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_1h28m.gcode Size: 3686666
2023-12-14 21:48:53,082 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_1h28m.gcode
2023-12-14 21:50:47,059 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-12-14 21:50:47,059 [screen.py:_go_to_submenu()] - #### Menu __print
2023-12-14 21:50:47,066 [screen.py:_load_panel()] - Loading panel: menu
2023-12-14 21:50:47,258 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2023-12-14 21:50:47,275 [menu.py:arrangeMenuItems()] - X > move
2023-12-14 21:50:47,283 [menu.py:arrangeMenuItems()] - X > led
2023-12-14 21:50:47,294 [menu.py:arrangeMenuItems()] - X > retraction
2023-12-14 21:50:47,297 [menu.py:arrangeMenuItems()] - X > spoolman
2023-12-14 21:50:49,059 [screen.py:_load_panel()] - Loading panel: power
2023-12-14 21:50:49,082 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > power
2023-12-14 21:50:50,244 [power.py:on_switch()] - Power toggled my_light
2023-12-14 21:50:50,244 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-14 21:50:50,252 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-14 21:50:51,294 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 21:50:51,318 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2023-12-14 21:50:51,331 [menu.py:arrangeMenuItems()] - X > move
2023-12-14 21:50:51,341 [menu.py:arrangeMenuItems()] - X > led
2023-12-14 21:50:51,352 [menu.py:arrangeMenuItems()] - X > retraction
2023-12-14 21:50:51,355 [menu.py:arrangeMenuItems()] - X > spoolman
2023-12-14 21:50:52,034 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 21:50:52,060 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-14 21:50:52,073 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_1h28m.gcode Size: 3686666
2023-12-14 21:50:52,079 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_1h28m.gcode
2023-12-14 21:51:09,968 [screen.py:_load_panel()] - Loading panel: fine_tune
2023-12-14 21:51:10,058 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2023-12-14 21:52:02,055 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-14 21:52:03,213 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-14 21:52:04,080 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-14 21:52:15,668 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-14 21:52:17,002 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-14 22:41:14,794 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-14 22:41:14,819 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-14 22:41:14,831 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_1h28m.gcode Size: 3686666
2023-12-14 22:41:14,837 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_1h28m.gcode
2023-12-14 23:25:08,239 [screen.py:show_popup_message()] - error: // Unknown command:"M200"
2023-12-14 23:25:08,289 [screen.py:show_popup_message()] - error: // Unknown command:"M150"
2023-12-14 23:25:08,297 [screen.py:show_popup_message()] - error: // Unknown command:"M85"
2023-12-14 23:25:16,441 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2023-12-14 23:25:18,944 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2023-12-14 23:25:18,944 [printer.py:change_state()] - Adding callback for state: ready
2023-12-14 23:41:15,445 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-15 00:16:24,903 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-15 00:16:26,776 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-15 00:16:36,568 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-12-15 00:16:36,568 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-15 00:16:36,575 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-15 00:16:36,612 [screen.py:wake_screen()] - Screen wake up
2023-12-15 00:16:37,023 [screen.py:show_panel()] - Reinitializing panel
2023-12-15 00:16:37,099 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-15 01:16:37,443 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-15 09:53:19,350 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-15 09:53:33,514 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-15 09:53:34,864 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-15 09:53:34,864 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-15 09:53:34,865 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-15 09:53:34,865 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-15 09:53:34,876 [screen.py:wake_screen()] - Screen wake up
2023-12-15 09:53:35,274 [screen.py:show_panel()] - Reinitializing panel
2023-12-15 09:53:35,315 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-15 09:53:38,208 [screen.py:_websocket_callback()] - Still not initialized
2023-12-15 09:53:38,452 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-15 09:53:38,462 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-15 09:53:38,463 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-15 09:53:38,470 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-15 09:53:38,471 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-15 09:53:38,472 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-15 09:53:38,485 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-15 09:53:38,486 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-15 09:53:38,493 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-15 09:53:38,711 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-15 09:53:38,714 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '190', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 190.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-15 09:53:38,716 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-15 09:53:38,716 [printer.py:reinit()] - # Extruders: 1
2023-12-15 09:53:38,716 [printer.py:reinit()] - # Temperature devices: 1
2023-12-15 09:53:38,716 [printer.py:reinit()] - # Fans: 2
2023-12-15 09:53:38,717 [printer.py:reinit()] - # Output pins: 0
2023-12-15 09:53:38,717 [printer.py:reinit()] - # Leds: 0
2023-12-15 09:53:38,726 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-15 09:53:38,728 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-15 09:53:38,967 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-15 09:53:38,982 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-15 09:53:38,985 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-15 09:53:38,993 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-15 09:53:38,994 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-15 09:53:38,994 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-15 09:53:38,995 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-15 09:53:38,996 [screen.py:init_printer()] - Printer initialized
2023-12-15 09:53:38,996 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-15 09:53:38,996 [printer.py:change_state()] - Adding callback for state: ready
2023-12-15 09:53:38,999 [screen.py:show_panel()] - Reinitializing panel
2023-12-15 09:53:39,065 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-15 09:53:39,072 [main_menu.py:add_device()] - Adding device: extruder
2023-12-15 09:53:39,078 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-15 09:53:39,108 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-15 09:53:48,168 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 -10.000 0.000 [0.000]
2023-12-15 09:53:52,647 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 10.000 0.000 [0.000]
2023-12-15 09:53:57,673 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 10.000 0.000 [0.000]
2023-12-15 09:54:00,933 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 10.000 0.000 [0.000]
2023-12-15 09:54:07,344 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 -10.000 0.000 [0.000]
2023-12-15 09:54:10,243 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 -10.000 0.000 [0.000]
2023-12-15 10:53:35,452 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-15 13:28:52,382 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-15 13:28:52,420 [screen.py:wake_screen()] - Screen wake up
2023-12-15 14:28:52,445 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-15 23:13:33,310 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-15 23:13:33,350 [screen.py:wake_screen()] - Screen wake up
2023-12-16 00:13:33,447 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-16 10:38:21,358 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 10:38:22,786 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 10:41:58,593 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 10:41:58,594 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 10:41:58,594 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 10:41:58,594 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-16 10:41:58,633 [screen.py:wake_screen()] - Screen wake up
2023-12-16 10:41:59,035 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 10:41:59,115 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 10:42:01,929 [screen.py:_websocket_callback()] - Still not initialized
2023-12-16 10:42:02,451 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 10:42:02,463 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 10:42:02,463 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 10:42:02,470 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 10:42:02,471 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 10:42:02,471 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-16 10:42:02,477 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 10:42:02,478 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 10:42:02,486 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 10:42:02,685 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 10:42:02,687 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 10:42:02,689 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-16 10:42:02,690 [printer.py:reinit()] - # Extruders: 1
2023-12-16 10:42:02,690 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 10:42:02,690 [printer.py:reinit()] - # Fans: 2
2023-12-16 10:42:02,690 [printer.py:reinit()] - # Output pins: 0
2023-12-16 10:42:02,690 [printer.py:reinit()] - # Leds: 0
2023-12-16 10:42:02,700 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 10:42:02,701 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 10:42:02,936 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 10:42:02,950 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 10:42:02,953 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 10:42:02,961 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 10:42:02,962 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 10:42:02,962 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 10:42:02,962 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 10:42:02,962 [screen.py:init_printer()] - Printer initialized
2023-12-16 10:42:02,963 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 10:42:02,963 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 10:42:02,966 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 10:42:03,028 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 10:42:03,034 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 10:42:03,040 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 10:42:03,066 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 10:42:33,667 [screen.py:show_popup_message()] - error: Must home axis first: 0.000 0.000 25.000 [0.000]
2023-12-16 10:45:20,547 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-16 10:45:20,547 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-16 10:45:20,554 [screen.py:_load_panel()] - Loading panel: menu
2023-12-16 10:45:20,799 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-16 10:45:20,810 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-16 10:45:20,816 [menu.py:arrangeMenuItems()] - X > more led
2023-12-16 10:45:20,822 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-16 10:45:20,832 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-16 10:45:20,839 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-16 10:45:29,123 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-16 10:45:29,163 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 10:45:30,512 [screen.py:_load_panel()] - Loading panel: move
2023-12-16 10:45:30,596 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > move
2023-12-16 10:45:31,882 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-16 10:45:33,436 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-16 10:45:33,437 [screen.py:_send_action()] - printer.gcode.script: {'script': 'M18'}
2023-12-16 10:53:05,639 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 10:53:05,639 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 10:53:05,640 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 10:53:05,644 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 10:53:05,718 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 10:53:08,975 [screen.py:_websocket_callback()] - Still not initialized
2023-12-16 10:53:09,450 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 10:53:09,457 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 10:53:09,457 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 10:53:09,464 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 10:53:09,464 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 10:53:09,465 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-16 10:53:09,472 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 10:53:09,473 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 10:53:09,483 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 10:53:09,729 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 10:53:09,731 [screen.py:init_printer()] - {'configfile': {'config': {'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 10:53:09,734 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8
2023-12-16 10:53:09,734 [printer.py:reinit()] - # Extruders: 1
2023-12-16 10:53:09,734 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 10:53:09,734 [printer.py:reinit()] - # Fans: 2
2023-12-16 10:53:09,734 [printer.py:reinit()] - # Output pins: 0
2023-12-16 10:53:09,734 [printer.py:reinit()] - # Leds: 0
2023-12-16 10:53:09,743 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 10:53:09,744 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 10:53:09,980 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 10:53:09,995 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 10:53:09,999 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 10:53:10,009 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 10:53:10,011 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 10:53:10,011 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 10:53:10,011 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 10:53:10,011 [screen.py:init_printer()] - Printer initialized
2023-12-16 10:53:10,012 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 10:53:10,012 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 10:53:10,016 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 10:53:10,077 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 10:53:10,084 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 10:53:10,090 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 10:53:10,115 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 10:55:59,841 [screen.py:_load_panel()] - Loading panel: temperature
2023-12-16 10:55:59,860 [temperature.py:add_device()] - Adding device: extruder
2023-12-16 10:55:59,870 [temperature.py:add_device()] - Adding device: heater_bed
2023-12-16 10:55:59,883 [temperature.py:select_heater()] - Selecting extruder
2023-12-16 10:55:59,884 [temperature.py:select_heater()] - Selecting heater_bed
2023-12-16 10:55:59,923 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > temperature
2023-12-16 10:56:00,686 [KlippyWebsocket.py:set_tool_temp()] - Sending set_tool_temp: M104 T0 S0
2023-12-16 10:56:00,687 [KlippyWebsocket.py:set_bed_temp()] - Sending set_bed_temp: M140 S0
2023-12-16 11:28:57,350 [printer.py:change_state()] - Changing state from 'ready' to 'shutdown'
2023-12-16 11:28:57,350 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 11:28:57,359 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 11:28:57,401 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 11:28:57,413 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 11:28:58,329 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-16 11:28:58,329 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 11:28:58,329 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 11:28:58,331 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 11:28:58,377 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 11:29:01,449 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:01,456 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:01,457 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 11:29:01,463 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 11:29:01,464 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 11:29:01,464 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'on'}}
2023-12-16 11:29:01,471 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 11:29:01,472 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 11:29:01,472 [screen.py:init_printer()] - Klipper not connected
2023-12-16 11:29:04,457 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:04,470 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:04,471 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 11:29:04,480 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 11:29:04,481 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 11:29:04,481 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'on'}}
2023-12-16 11:29:04,492 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 11:29:04,494 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 11:29:04,494 [screen.py:init_printer()] - Klipper not connected
2023-12-16 11:29:07,449 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:07,456 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:07,457 [screen.py:init_printer()] - Moonraker info {'klippy_connected': False, 'klippy_state': 'disconnected', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 11:29:07,463 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 11:29:07,464 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 11:29:07,464 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'on'}}
2023-12-16 11:29:07,471 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 11:29:07,472 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 11:29:07,472 [screen.py:init_printer()] - Klipper not connected
2023-12-16 11:29:10,456 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:10,470 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:10,472 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 11:29:10,484 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 11:29:10,485 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 11:29:10,485 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'on'}}
2023-12-16 11:29:10,496 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 11:29:10,497 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 11:29:10,510 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 11:29:10,531 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 11:29:10,535 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 11:29:10,540 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 11:29:10,540 [printer.py:reinit()] - # Extruders: 1
2023-12-16 11:29:10,541 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 11:29:10,541 [printer.py:reinit()] - # Fans: 2
2023-12-16 11:29:10,541 [printer.py:reinit()] - # Output pins: 0
2023-12-16 11:29:10,541 [printer.py:reinit()] - # Leds: 0
2023-12-16 11:29:10,556 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 11:29:10,558 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 11:29:10,789 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 11:29:10,806 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 11:29:10,808 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 11:29:10,817 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 11:29:10,817 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 11:29:10,818 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 11:29:10,818 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 11:29:10,818 [screen.py:init_printer()] - Printer initialized
2023-12-16 11:29:10,818 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-16 11:29:10,818 [printer.py:change_state()] - Adding callback for state: startup
2023-12-16 11:29:53,181 [printer.py:change_state()] - Changing state from 'startup' to 'disconnected'
2023-12-16 11:29:53,181 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 11:29:53,182 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 11:29:53,184 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 11:29:53,254 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 11:29:56,449 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:56,455 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:29:56,456 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 11:29:56,464 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 11:29:56,465 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 11:29:56,465 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'on'}}
2023-12-16 11:29:56,471 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 11:29:56,471 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 11:29:56,478 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 11:29:56,491 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 11:29:56,493 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 11:29:56,496 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 11:29:56,496 [printer.py:reinit()] - # Extruders: 1
2023-12-16 11:29:56,496 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 11:29:56,496 [printer.py:reinit()] - # Fans: 2
2023-12-16 11:29:56,496 [printer.py:reinit()] - # Output pins: 0
2023-12-16 11:29:56,496 [printer.py:reinit()] - # Leds: 0
2023-12-16 11:29:56,505 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 11:29:56,506 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 11:29:56,752 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 11:29:56,768 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 11:29:56,771 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 11:29:56,779 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 11:29:56,779 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 11:29:56,780 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 11:29:56,780 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 11:29:56,780 [screen.py:init_printer()] - Printer initialized
2023-12-16 11:29:56,780 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-16 11:29:56,781 [printer.py:change_state()] - Adding callback for state: startup
2023-12-16 11:29:57,444 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 11:30:01,015 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-16 11:30:01,015 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 11:30:01,017 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 11:30:01,077 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 11:30:01,084 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 11:30:01,090 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 11:30:01,115 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 11:35:59,761 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 11:35:59,762 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 11:35:59,762 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 11:35:59,764 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 11:35:59,805 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 11:36:03,111 [screen.py:_websocket_callback()] - Still not initialized
2023-12-16 11:36:03,521 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:36:03,527 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:36:03,528 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 11:36:03,534 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 11:36:03,535 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 11:36:03,535 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-16 11:36:03,541 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 11:36:03,542 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 11:36:03,549 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 11:36:03,617 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 11:36:03,619 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 11:36:03,621 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 11:36:03,622 [printer.py:reinit()] - # Extruders: 1
2023-12-16 11:36:03,622 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 11:36:03,622 [printer.py:reinit()] - # Fans: 2
2023-12-16 11:36:03,622 [printer.py:reinit()] - # Output pins: 0
2023-12-16 11:36:03,622 [printer.py:reinit()] - # Leds: 0
2023-12-16 11:36:03,633 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 11:36:03,634 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 11:36:03,866 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 11:36:03,881 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 11:36:03,884 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 11:36:03,891 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 11:36:03,892 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 11:36:03,892 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 11:36:03,892 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 11:36:03,893 [screen.py:init_printer()] - Printer initialized
2023-12-16 11:36:03,893 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 11:36:03,893 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 11:36:03,896 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 11:36:03,957 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 11:36:03,963 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 11:36:03,969 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 11:36:03,994 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 11:41:12,789 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 11:41:12,789 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 11:41:12,790 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 11:41:12,791 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 11:41:12,832 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 11:41:16,375 [screen.py:_websocket_callback()] - Still not initialized
2023-12-16 11:41:16,448 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:41:16,456 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 11:41:16,457 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 11:41:16,463 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 11:41:16,463 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 11:41:16,464 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-16 11:41:16,470 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 11:41:16,471 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 11:41:16,478 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 11:41:16,630 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 11:41:16,634 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/klipper/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/klipper/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 11:41:16,637 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 11:41:16,637 [printer.py:reinit()] - # Extruders: 1
2023-12-16 11:41:16,637 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 11:41:16,637 [printer.py:reinit()] - # Fans: 2
2023-12-16 11:41:16,637 [printer.py:reinit()] - # Output pins: 0
2023-12-16 11:41:16,638 [printer.py:reinit()] - # Leds: 0
2023-12-16 11:41:16,654 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 11:41:16,655 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 11:41:16,883 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 11:41:16,898 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 11:41:16,902 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 11:41:16,911 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 11:41:16,912 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 11:41:16,912 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 11:41:16,912 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 11:41:16,912 [screen.py:init_printer()] - Printer initialized
2023-12-16 11:41:16,913 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 11:41:16,913 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 11:41:16,917 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 11:41:16,983 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 11:41:16,990 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 11:41:16,996 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 11:41:17,025 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 11:41:34,502 [screen.py:show_popup_message()] - error: // Author identity unknown
// 
// *** Please tell me who you are.
// 
// Run
// 
// git config --global user.email "you@example.com"
// git config --global user.name "Your Name"
// 
// to set your account's default identity.
// Omit --global to set the identity only in this repository.
// 
// fatal: unable to auto-detect email address (got 'pi@klipper.(none)')
2023-12-16 11:47:01,353 [screen.py:show_popup_message()] - error: // Author identity unknown
// 
// *** Please tell me who you are.
// 
// Run
// 
// git config --global user.email "you@example.com"
// git config --global user.name "Your Name"
// 
// to set your account's default identity.
// Omit --global to set the identity only in this repository.
// 
// fatal: unable to auto-detect email address (got 'pi@klipper.(none)')
2023-12-16 11:49:04,522 [screen.py:show_popup_message()] - error: // Author identity unknown
// 
// *** Please tell me who you are.
// 
// Run
// 
// git config --global user.email "you@example.com"
// git config --global user.name "Your Name"
// 
// to set your account's default identity.
// Omit --global to set the identity only in this repository.
// 
// fatal: unable to auto-detect email address (got 'pi@klipper.(none)')
2023-12-16 11:51:19,922 [screen.py:show_popup_message()] - error: // Author identity unknown
// 
// *** Please tell me who you are.
// 
// Run
// 
// git config --global user.email "you@example.com"
// git config --global user.name "Your Name"
// 
// to set your account's default identity.
// Omit --global to set the identity only in this repository.
// 
// fatal: unable to auto-detect email address (got 'pi@klipper.(none)')
2023-12-16 11:56:01,444 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-16 11:59:14,158 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-16 11:59:14,180 [screen.py:wake_screen()] - Screen wake up
2023-12-16 11:59:14,577 [screen.py:show_popup_message()] - error: // Author identity unknown
// 
// *** Please tell me who you are.
// 
// Run
// 
// git config --global user.email "you@example.com"
// git config --global user.name "Your Name"
// 
// to set your account's default identity.
// Omit --global to set the identity only in this repository.
// 
// fatal: empty ident name (for <busky@busky.net>) not allowed
2023-12-16 12:48:25,278 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 12:48:25,278 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 12:48:25,281 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 12:48:25,284 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 12:48:25,365 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 12:48:28,449 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 12:48:28,456 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 12:48:28,457 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 12:48:28,463 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 12:48:28,464 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 12:48:28,464 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-16 12:48:28,471 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 12:48:28,472 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 12:48:28,479 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 12:48:28,612 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 12:48:28,614 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 12:48:28,617 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 12:48:28,617 [printer.py:reinit()] - # Extruders: 1
2023-12-16 12:48:28,617 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 12:48:28,617 [printer.py:reinit()] - # Fans: 2
2023-12-16 12:48:28,617 [printer.py:reinit()] - # Output pins: 0
2023-12-16 12:48:28,617 [printer.py:reinit()] - # Leds: 0
2023-12-16 12:48:28,644 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 12:48:28,645 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 12:48:28,873 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 12:48:28,888 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 12:48:28,892 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 12:48:28,903 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 12:48:28,904 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 12:48:28,904 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 12:48:28,904 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 12:48:28,905 [screen.py:init_printer()] - Printer initialized
2023-12-16 12:48:28,905 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 12:48:28,906 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 12:48:28,909 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 12:48:28,970 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 12:48:28,977 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 12:48:28,982 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 12:48:29,008 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 12:58:03,774 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-16 12:58:03,775 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-16 12:58:03,779 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 12:58:03,878 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 12:58:03,890 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-16 12:58:03,891 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 12:58:03,933 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 12:58:03,946 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 12:58:03,951 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-16 12:58:14,446 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 12:58:14,460 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 12:58:14,473 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-16 12:58:14,475 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-16 12:58:14,486 [_logging.py:info()] - Websocket connected
2023-12-16 12:58:14,486 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-16 12:58:14,496 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 12:58:14,505 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 12:58:14,506 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 12:58:14,515 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 12:58:14,516 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 12:58:14,516 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 12:58:14,526 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 12:58:14,527 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 12:58:14,539 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 12:58:14,645 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 12:58:14,646 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 12:58:14,650 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 12:58:14,650 [printer.py:reinit()] - # Extruders: 1
2023-12-16 12:58:14,650 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 12:58:14,650 [printer.py:reinit()] - # Fans: 2
2023-12-16 12:58:14,650 [printer.py:reinit()] - # Output pins: 0
2023-12-16 12:58:14,651 [printer.py:reinit()] - # Leds: 0
2023-12-16 12:58:14,663 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 12:58:14,665 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 12:58:14,931 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 12:58:14,947 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 12:58:14,963 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 12:58:14,982 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 12:58:14,984 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 12:58:14,985 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 12:58:14,985 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 12:58:14,987 [screen.py:init_printer()] - Printer initialized
2023-12-16 12:58:14,987 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2023-12-16 12:58:14,987 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 12:58:14,990 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 12:58:15,033 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 12:58:18,900 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 12:59:15,447 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-16 13:00:40,765 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-16 13:00:40,766 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-16 13:00:40,767 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-16 13:00:40,775 [screen.py:wake_screen()] - Screen wake up
2023-12-16 13:00:41,175 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:00:41,217 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:00:41,241 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-16 13:00:41,243 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:00:41,321 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:00:41,333 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 13:00:41,337 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-16 13:00:51,450 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 13:00:51,463 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:00:51,475 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-16 13:00:51,476 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-16 13:00:51,488 [_logging.py:info()] - Websocket connected
2023-12-16 13:00:51,488 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-16 13:00:51,499 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:00:51,510 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:00:51,511 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'gpio', 'power', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 13:00:51,522 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 13:00:51,523 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 13:00:51,523 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 13:00:51,534 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 13:00:51,535 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 13:00:51,547 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 13:00:51,798 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 13:00:51,799 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 13:00:51,802 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 13:00:51,802 [printer.py:reinit()] - # Extruders: 1
2023-12-16 13:00:51,802 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 13:00:51,802 [printer.py:reinit()] - # Fans: 2
2023-12-16 13:00:51,802 [printer.py:reinit()] - # Output pins: 0
2023-12-16 13:00:51,802 [printer.py:reinit()] - # Leds: 0
2023-12-16 13:00:51,811 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 13:00:51,812 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 13:00:52,060 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 13:00:52,068 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:00:52,069 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:00:52,070 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 13:00:52,070 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 13:00:52,071 [screen.py:init_printer()] - Printer initialized
2023-12-16 13:00:52,071 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-16 13:00:52,071 [printer.py:change_state()] - Adding callback for state: error
2023-12-16 13:00:52,074 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:00:52,119 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:00:54,038 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 13:00:57,455 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:00:57,456 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:01:02,449 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:01:02,450 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:01:07,459 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:01:07,460 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:01:12,448 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:01:12,449 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:01:17,458 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:01:17,459 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:01:45,547 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-12-16 13:01:45,547 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-12-16 13:01:45,548 [functions.py:log_start()] - Python version: 3.11
2023-12-16 13:01:45,688 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-12-16 13:01:45,689 [config.py:__init__()] - Config path location: /home/pi/printer_data/config/KlipperScreen.conf
2023-12-16 13:01:45,706 [config.py:log_config()] -  ===== Config File =====

=======================
2023-12-16 13:01:45,708 [config.py:__init__()] - ====== Saved Def ======

[main]
confirm_estop = True

=======================
2023-12-16 13:01:45,708 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-12-16 13:01:45,815 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-12-16 13:01:45,815 [config.py:install_language()] - Using system lang
2023-12-16 13:01:45,816 [config.py:install_language()] - Using lang en
2023-12-16 13:01:45,840 [screen.py:__init__()] - Screen resolution: 800x480
2023-12-16 13:01:45,842 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-12-16 13:01:46,548 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-12-16 13:01:46,562 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-12-16 13:01:46,576 [screen.py:initial_connection()] - Default printer: None
2023-12-16 13:01:46,576 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-16 13:01:46,576 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-12-16 13:01:46,669 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:01:46,687 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 13:01:46,724 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:01:46,741 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-16 13:01:46,744 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-16 13:01:46,760 [_logging.py:info()] - Websocket connected
2023-12-16 13:01:46,760 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-16 13:01:46,991 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:01:47,003 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:01:47,005 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'update_manager', 'history', 'authorization', 'gpio', 'power', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 13:01:47,015 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 13:01:47,017 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 13:01:47,017 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 13:01:47,027 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 13:01:47,029 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 13:01:47,042 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 13:01:47,064 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 13:01:47,066 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 13:01:47,068 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 13:01:47,069 [printer.py:reinit()] - # Extruders: 1
2023-12-16 13:01:47,069 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 13:01:47,070 [printer.py:reinit()] - # Fans: 2
2023-12-16 13:01:47,070 [printer.py:reinit()] - # Output pins: 0
2023-12-16 13:01:47,070 [printer.py:reinit()] - # Leds: 0
2023-12-16 13:01:47,091 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 13:01:47,092 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 13:01:47,324 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 13:01:47,338 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:01:47,340 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:01:47,340 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 13:01:47,341 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 13:01:47,344 [screen.py:init_printer()] - Printer initialized
2023-12-16 13:01:47,345 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-16 13:01:47,345 [printer.py:change_state()] - Adding callback for state: startup
2023-12-16 13:01:51,408 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 13:01:52,302 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:01:52,304 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:02:34,397 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:02:34,398 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:02:34,680 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-16 13:02:34,680 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 13:02:34,684 [screen.py:_load_panel()] - Loading panel: main_menu
2023-12-16 13:02:34,757 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 13:02:34,764 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 13:02:34,771 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 13:02:34,800 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 13:02:34,801 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-12-16 13:02:39,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:02:39,402 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 13:02:39,411 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 13:02:39,412 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 13:02:50,977 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-16 13:02:50,977 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-16 13:02:50,982 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:02:51,079 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:02:51,109 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-16 13:02:51,110 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:02:51,184 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:02:51,205 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 13:02:51,212 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-16 13:03:01,390 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 13:03:01,398 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:03:01,405 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-16 13:03:01,407 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-16 13:03:01,413 [_logging.py:info()] - Websocket connected
2023-12-16 13:03:01,413 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-16 13:03:01,420 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:03:01,426 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:03:01,427 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'gpio', 'power', 'history', 'update_manager', 'authorization', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 13:03:01,434 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 13:03:01,435 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 13:03:01,435 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 13:03:01,441 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 13:03:01,442 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 13:03:01,449 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 13:03:01,542 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 13:03:01,543 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 13:03:01,546 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 13:03:01,546 [printer.py:reinit()] - # Extruders: 1
2023-12-16 13:03:01,546 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 13:03:01,546 [printer.py:reinit()] - # Fans: 2
2023-12-16 13:03:01,546 [printer.py:reinit()] - # Output pins: 0
2023-12-16 13:03:01,546 [printer.py:reinit()] - # Leds: 0
2023-12-16 13:03:01,555 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 13:03:01,556 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 13:03:01,808 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 13:03:01,816 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:01,823 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 13:03:01,830 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 13:03:01,832 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 13:03:01,832 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 13:03:01,832 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 13:03:01,833 [screen.py:init_printer()] - Printer initialized
2023-12-16 13:03:01,833 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2023-12-16 13:03:01,833 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 13:03:01,835 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:03:01,878 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:03:09,632 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-16 13:03:09,632 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-16 13:03:09,634 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:03:09,718 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:03:09,746 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-16 13:03:09,749 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:03:09,821 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:03:09,846 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 13:03:09,852 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-16 13:03:20,393 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 13:03:20,408 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:03:20,421 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-16 13:03:20,423 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-16 13:03:20,435 [_logging.py:info()] - Websocket connected
2023-12-16 13:03:20,435 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-16 13:03:20,447 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:03:20,460 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:03:20,461 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'gpio', 'power', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 13:03:20,472 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 13:03:20,473 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 13:03:20,473 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 13:03:20,485 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 13:03:20,486 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 13:03:20,498 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 13:03:20,579 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 13:03:20,581 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 13:03:20,583 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 13:03:20,583 [printer.py:reinit()] - # Extruders: 1
2023-12-16 13:03:20,583 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 13:03:20,583 [printer.py:reinit()] - # Fans: 2
2023-12-16 13:03:20,583 [printer.py:reinit()] - # Output pins: 0
2023-12-16 13:03:20,583 [printer.py:reinit()] - # Leds: 0
2023-12-16 13:03:20,592 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 13:03:20,593 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 13:03:20,842 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 13:03:20,851 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:20,852 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:20,853 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 13:03:20,853 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 13:03:20,854 [screen.py:init_printer()] - Printer initialized
2023-12-16 13:03:20,855 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2023-12-16 13:03:20,855 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 13:03:20,857 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:03:20,898 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:03:21,588 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 13:03:26,402 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:26,403 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:31,402 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:31,404 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:36,409 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:36,411 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:41,405 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:41,407 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:46,405 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:46,407 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:51,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:51,396 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:52,966 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-16 13:03:52,967 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 13:03:52,968 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 13:03:52,969 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:03:53,021 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:03:56,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:56,396 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:56,402 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:03:56,409 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:03:56,410 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'gpio', 'power', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 13:03:56,416 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 13:03:56,417 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 13:03:56,417 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'off'}}
2023-12-16 13:03:56,424 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 13:03:56,424 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 13:03:56,431 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 13:03:56,565 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 13:03:56,567 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 13:03:56,568 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 13:03:56,569 [printer.py:reinit()] - # Extruders: 1
2023-12-16 13:03:56,569 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 13:03:56,569 [printer.py:reinit()] - # Fans: 2
2023-12-16 13:03:56,569 [printer.py:reinit()] - # Output pins: 0
2023-12-16 13:03:56,569 [printer.py:reinit()] - # Leds: 0
2023-12-16 13:03:56,577 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 13:03:56,578 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 13:03:56,826 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 13:03:56,834 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:03:56,835 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:03:56,835 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 13:03:56,835 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 13:03:56,837 [screen.py:init_printer()] - Printer initialized
2023-12-16 13:03:56,837 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-16 13:03:56,837 [printer.py:change_state()] - Adding callback for state: error
2023-12-16 13:03:56,839 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:03:56,882 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:04:01,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:01,405 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:02,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:02,406 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:06,402 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:06,404 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:07,397 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:07,398 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:11,397 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:11,398 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:12,403 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:12,404 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:16,127 [printer.py:change_state()] - Changing state from 'error' to 'shutdown'
2023-12-16 13:04:16,128 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 13:04:16,130 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:04:16,173 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:04:16,245 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 13:04:16,394 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:16,395 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:17,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:17,396 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:21,396 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:21,397 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:22,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:22,396 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:26,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:26,406 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:27,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:27,406 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:31,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:31,406 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:32,400 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:32,401 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:32,569 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-16 13:04:32,569 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 13:04:32,569 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 13:04:32,571 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:04:32,643 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 13:04:36,396 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:36,397 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:36,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:04:36,410 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 13:04:36,411 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'gpio', 'power', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 13:04:36,417 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 13:04:36,417 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 13:04:36,418 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 13:04:36,424 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 13:04:36,424 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 13:04:36,431 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 13:04:36,444 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 13:04:36,446 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.810'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.81, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\n\n\nBED_MESH_PROFILE LOAD=default\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 13:04:36,448 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 13:04:36,448 [printer.py:reinit()] - # Extruders: 1
2023-12-16 13:04:36,449 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 13:04:36,449 [printer.py:reinit()] - # Fans: 2
2023-12-16 13:04:36,449 [printer.py:reinit()] - # Output pins: 0
2023-12-16 13:04:36,449 [printer.py:reinit()] - # Leds: 0
2023-12-16 13:04:36,457 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 13:04:36,458 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 13:04:36,706 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 13:04:36,713 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:36,715 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:36,715 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 13:04:36,716 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 13:04:36,717 [screen.py:init_printer()] - Printer initialized
2023-12-16 13:04:36,717 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-16 13:04:36,717 [printer.py:change_state()] - Adding callback for state: startup
2023-12-16 13:04:37,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:37,396 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:41,396 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:41,397 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:42,396 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:42,397 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:42,403 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:42,404 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:43,982 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 13:04:46,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:46,396 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:47,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:47,395 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:47,402 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:47,403 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:50,235 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-16 13:04:50,235 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 13:04:50,239 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 13:04:50,346 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 13:04:50,353 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 13:04:50,358 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 13:04:50,384 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 13:04:50,385 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-12-16 13:04:51,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:51,397 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 13:04:52,395 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:52,401 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 13:04:52,410 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 13:04:52,411 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 13:04:52,417 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:52,424 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 13:04:52,432 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 13:04:52,433 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 13:04:56,401 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 13:04:56,417 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 13:04:56,432 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 13:04:56,433 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 14:02:24,391 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-16 15:07:46,625 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_2h12m-300x300.png. Retrying in 6 seconds
2023-12-16 15:07:46,627 [files.py:_callback()] - Error in getting metadata for .thumbs/OrcaCube_PLA_2h12m-32x32.png. Retrying in 6 seconds
2023-12-16 15:08:03,614 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-16 15:08:03,614 [printer.py:change_state()] - Adding callback for state: printing
2023-12-16 15:08:03,616 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-16 15:08:03,636 [screen.py:wake_screen()] - Screen wake up
2023-12-16 15:08:04,035 [screen.py:_load_panel()] - Loading panel: job_status
2023-12-16 15:08:04,179 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 15:08:04,186 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-16 15:08:04,202 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_2h12m.gcode Size: 5345828
2023-12-16 15:08:04,208 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_2h12m.gcode
2023-12-16 15:09:26,170 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 15:13:15,299 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2023-12-16 15:13:15,299 [printer.py:change_state()] - Adding callback for state: paused
2023-12-16 15:13:15,312 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2023-12-16 15:13:15,366 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 15:13:15,498 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 15:13:15,504 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'paused'
2023-12-16 15:13:15,515 [job_status.py:update_file_metadata()] - Update Metadata. File: OrcaCube_PLA_2h12m.gcode Size: 5345828
2023-12-16 15:13:15,521 [job_status.py:show_file_thumbnail()] - OrcaCube_PLA_2h12m.gcode
2023-12-16 15:13:15,525 [screen.py:_load_panel()] - Loading panel: extrude
2023-12-16 15:13:15,601 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2023-12-16 15:13:15,603 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: SET_FILAMENT_SENSOR SENSOR=RUNOUT ENABLE=1
2023-12-16 15:13:15,604 [extrude.py:process_update()] - filament_switch_sensor RUNOUT: {'filament_detected': True, 'enabled': True}
2023-12-16 15:13:28,483 [screen.py:show_popup_message()] - error: Must home axis first: 303.000 303.000 35.030 [26.000]
2023-12-16 15:13:28,562 [screen.py:show_popup_message()] - error: Must home axis first: 303.000 303.000 35.030 [26.000]
2023-12-16 15:13:28,571 [screen.py:show_popup_message()] - error: Must home axis first: 303.000 303.000 35.030 [26.000]
2023-12-16 15:13:39,112 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2023-12-16 15:13:39,112 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 15:46:36,951 [files.py:_callback()] - Error in getting metadata for .thumbs/SpeedTestStructure_PLA_39m4s-300x300.png. Retrying in 6 seconds
2023-12-16 15:46:36,952 [files.py:_callback()] - Error in getting metadata for .thumbs/SpeedTestStructure_PLA_39m4s-32x32.png. Retrying in 6 seconds
2023-12-16 15:46:46,413 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-16 15:46:46,413 [printer.py:change_state()] - Adding callback for state: printing
2023-12-16 15:46:46,437 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 15:46:46,582 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 15:46:46,589 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-16 15:46:46,601 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_PLA_39m4s.gcode Size: 1118968
2023-12-16 15:46:46,608 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_PLA_39m4s.gcode
2023-12-16 15:47:43,823 [screen.py:_load_panel()] - Loading panel: fine_tune
2023-12-16 15:47:43,918 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2023-12-16 15:48:05,857 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-16 15:48:05,907 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 15:48:05,927 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_PLA_39m4s.gcode Size: 1118968
2023-12-16 15:48:05,935 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_PLA_39m4s.gcode
2023-12-16 15:50:38,936 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2023-12-16 15:50:40,817 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-16 15:50:41,421 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-16 15:50:42,757 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-16 15:50:43,940 [screen.py:_send_action()] - printer.gcode.script: {'script': 'SET_GCODE_OFFSET Z_ADJUST=+0.05 MOVE=1'}
2023-12-16 16:28:45,117 [screen.py:show_popup_message()] - error: // Unknown command:"M200"
2023-12-16 16:28:45,190 [screen.py:show_popup_message()] - error: // Unknown command:"M150"
2023-12-16 16:28:45,203 [screen.py:show_popup_message()] - error: // Unknown command:"M85"
2023-12-16 16:28:55,935 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2023-12-16 16:28:55,935 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 16:50:44,389 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-16 16:53:37,181 [files.py:_callback()] - Error in getting metadata for .thumbs/SpeedTestStructure_15-40mms_PLA_37m41s-300x300.png. Retrying in 6 seconds
2023-12-16 16:53:37,182 [files.py:_callback()] - Error in getting metadata for .thumbs/SpeedTestStructure_15-40mms_PLA_37m41s-32x32.png. Retrying in 6 seconds
2023-12-16 16:54:17,836 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-16 16:54:17,836 [printer.py:change_state()] - Adding callback for state: printing
2023-12-16 16:54:17,838 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-16 16:54:17,859 [screen.py:wake_screen()] - Screen wake up
2023-12-16 16:54:18,252 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 16:54:18,381 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 16:54:18,387 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-16 16:54:18,402 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_15-40mms_PLA_37m41s.gcode Size: 1795887
2023-12-16 16:54:18,408 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_15-40mms_PLA_37m41s.gcode
2023-12-16 17:07:46,313 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:07:46,401 [screen.py:attach_panel()] - Current panel hierarchy: job_status > fine_tune
2023-12-16 17:07:51,444 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-16 17:07:51,492 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 17:07:51,515 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_15-40mms_PLA_37m41s.gcode Size: 1795887
2023-12-16 17:07:51,525 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_15-40mms_PLA_37m41s.gcode
2023-12-16 17:07:58,025 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-12-16 17:07:58,025 [screen.py:_go_to_submenu()] - #### Menu __print
2023-12-16 17:07:58,034 [screen.py:_load_panel()] - Loading panel: menu
2023-12-16 17:07:58,260 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2023-12-16 17:07:58,275 [menu.py:arrangeMenuItems()] - X > move
2023-12-16 17:07:58,283 [menu.py:arrangeMenuItems()] - X > led
2023-12-16 17:07:58,296 [menu.py:arrangeMenuItems()] - X > retraction
2023-12-16 17:07:58,300 [menu.py:arrangeMenuItems()] - X > spoolman
2023-12-16 17:07:59,761 [screen.py:_load_panel()] - Loading panel: temperature
2023-12-16 17:07:59,788 [temperature.py:add_device()] - Adding device: extruder
2023-12-16 17:07:59,796 [temperature.py:add_device()] - Adding device: heater_bed
2023-12-16 17:07:59,842 [screen.py:attach_panel()] - Current panel hierarchy: job_status >  > temperature
2023-12-16 17:08:29,412 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-16 17:08:29,466 [screen.py:attach_panel()] - Current panel hierarchy: job_status > 
2023-12-16 17:08:29,488 [menu.py:arrangeMenuItems()] - X > move
2023-12-16 17:08:29,500 [menu.py:arrangeMenuItems()] - X > led
2023-12-16 17:08:29,512 [menu.py:arrangeMenuItems()] - X > retraction
2023-12-16 17:08:29,515 [menu.py:arrangeMenuItems()] - X > spoolman
2023-12-16 17:08:31,100 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-16 17:08:31,124 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 17:08:31,136 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_15-40mms_PLA_37m41s.gcode Size: 1795887
2023-12-16 17:08:31,142 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_15-40mms_PLA_37m41s.gcode
2023-12-16 17:18:03,954 [KlippyWebsocket.py:print_pause()] - Sending printer.print.pause
2023-12-16 17:18:04,450 [printer.py:change_state()] - Changing state from 'printing' to 'paused'
2023-12-16 17:18:04,450 [printer.py:change_state()] - Adding callback for state: paused
2023-12-16 17:18:04,458 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'paused'
2023-12-16 17:18:04,497 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:18:04,628 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 17:18:04,634 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'paused'
2023-12-16 17:18:04,645 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_15-40mms_PLA_37m41s.gcode Size: 1795887
2023-12-16 17:18:04,651 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_15-40mms_PLA_37m41s.gcode
2023-12-16 17:18:04,657 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:18:04,718 [screen.py:attach_panel()] - Current panel hierarchy: job_status > extrude
2023-12-16 17:18:04,719 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: SET_FILAMENT_SENSOR SENSOR=RUNOUT ENABLE=1
2023-12-16 17:18:04,722 [extrude.py:process_update()] - filament_switch_sensor RUNOUT: {'filament_detected': True, 'enabled': True}
2023-12-16 17:18:31,016 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-16 17:18:31,045 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 17:18:31,060 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_15-40mms_PLA_37m41s.gcode Size: 1795887
2023-12-16 17:18:31,067 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_15-40mms_PLA_37m41s.gcode
2023-12-16 17:18:32,924 [KlippyGtk.py:Dialog()] - Showing dialog Cancel (width=800, height=480)
2023-12-16 17:18:33,978 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-16 17:18:33,978 [job_status.py:cancel_confirm()] - Canceling print
2023-12-16 17:18:33,979 [job_status.py:set_state()] - Changing job_status state from 'paused' to 'cancelling'
2023-12-16 17:18:33,983 [KlippyWebsocket.py:print_cancel()] - Sending printer.print.cancel
2023-12-16 17:18:34,039 [printer.py:change_state()] - Changing state from 'paused' to 'ready'
2023-12-16 17:18:34,039 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 17:18:34,050 [job_status.py:set_state()] - Changing job_status state from 'cancelling' to 'cancelled'
2023-12-16 17:18:36,903 [printer.py:get_probe()] - Probe type: probe
2023-12-16 17:18:36,944 [KlippyGtk.py:Dialog()] - Showing dialog Save Z (width=800, height=480)
2023-12-16 17:18:39,038 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-16 17:18:39,038 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: Z_OFFSET_APPLY_PROBE
2023-12-16 17:18:39,039 [KlippyWebsocket.py:gcode_script()] - Sending printer.gcode.script: SAVE_CONFIG
2023-12-16 17:18:39,099 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-16 17:18:40,088 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 17:18:40,089 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 17:18:40,090 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 17:18:40,093 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-16 17:18:40,094 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:18:40,140 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:18:43,397 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:18:43,404 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:18:43,406 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'gpio', 'power', 'octoprint_compat', 'authorization', 'update_manager', 'history'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 3, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:18:43,413 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:18:43,414 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:18:43,414 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-16 17:18:43,420 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:18:43,421 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:18:43,433 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:18:43,680 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:18:43,682 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:18:43,685 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:18:43,685 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:18:43,685 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:18:43,686 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:18:43,686 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:18:43,686 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:18:43,695 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:18:43,697 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:18:43,940 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:18:43,955 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:18:43,959 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:18:43,974 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:18:43,975 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:18:43,976 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:18:43,976 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:18:43,976 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:18:43,976 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 17:18:43,976 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 17:18:43,981 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:18:44,043 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 17:18:44,050 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 17:18:44,056 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 17:18:44,085 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 17:24:19,700 [files.py:_callback()] - Error in getting metadata for .thumbs/SpeedTestStructure_20-35mm3_PLA_24m52s-300x300.png. Retrying in 6 seconds
2023-12-16 17:24:19,702 [files.py:_callback()] - Error in getting metadata for .thumbs/SpeedTestStructure_20-35mm3_PLA_24m52s-32x32.png. Retrying in 6 seconds
2023-12-16 17:25:05,257 [functions.py:log_start()] - --------------------KlipperScreen Log Start--------------------
2023-12-16 17:25:05,257 [functions.py:log_start()] - KlipperScreen Version: v0.3.7-4-gf3dd3aa
2023-12-16 17:25:05,257 [functions.py:log_start()] - Python version: 3.11
2023-12-16 17:25:05,405 [config.py:get_config_file_location()] - Passed config (-c): /home/pi/KlipperScreen.conf
2023-12-16 17:25:05,406 [config.py:__init__()] - Config path location: /home/pi/printer_data/config/KlipperScreen.conf
2023-12-16 17:25:05,429 [config.py:log_config()] -  ===== Config File =====

=======================
2023-12-16 17:25:05,431 [config.py:__init__()] - ====== Saved Def ======

[main]
confirm_estop = True

=======================
2023-12-16 17:25:05,432 [config.py:__init__()] - Configured printers: [
  {
    "Printer": {
      "moonraker_host": "127.0.0.1",
      "moonraker_port": "7125",
      "moonraker_api_key": ""
    }
  }
]
2023-12-16 17:25:05,542 [config.py:create_translations()] - Selected lang: None OS lang: en_GB
2023-12-16 17:25:05,543 [config.py:install_language()] - Using system lang
2023-12-16 17:25:05,543 [config.py:install_language()] - Using lang en
2023-12-16 17:25:05,566 [screen.py:__init__()] - Screen resolution: 800x480
2023-12-16 17:25:05,567 [KlippyGtk.py:__init__()] - Font size: 16.6 (medium)
2023-12-16 17:25:06,271 [screen.py:set_screenblanking_timeout()] - Changing screen blanking to: 3600
2023-12-16 17:25:06,291 [screen.py:set_screenblanking_timeout()] - Using DPMS
2023-12-16 17:25:06,304 [screen.py:initial_connection()] - Default printer: None
2023-12-16 17:25:06,311 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-16 17:25:06,325 [screen.py:_load_panel()] - Loading panel: splash_screen
2023-12-16 17:25:06,447 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:25:06,465 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 17:25:06,487 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:25:06,498 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-16 17:25:06,499 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-16 17:25:06,511 [_logging.py:info()] - Websocket connected
2023-12-16 17:25:06,511 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-16 17:25:06,668 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:25:06,684 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:25:06,686 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'gpio', 'power', 'update_manager', 'history', 'authorization', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes'], 'warnings': [], 'websocket_count': 1, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:25:06,697 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:25:06,699 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:25:06,699 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 17:25:06,721 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:25:06,724 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:25:06,768 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:25:06,792 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:25:06,794 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': '!rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': '!rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:25:06,796 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:25:06,797 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:25:06,797 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:25:06,797 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:25:06,797 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:25:06,797 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:25:06,818 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:25:06,819 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:25:07,060 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:25:07,071 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:25:07,072 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:25:07,072 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:25:07,072 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:25:07,073 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:25:07,074 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-16 17:25:07,074 [printer.py:change_state()] - Adding callback for state: startup
2023-12-16 17:25:12,325 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:25:12,326 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:25:13,022 [screen.py:_go_to_submenu()] - #### Go to submenu 
2023-12-16 17:25:13,023 [screen.py:_go_to_submenu()] - #### Menu __splashscreen
2023-12-16 17:25:13,025 [screen.py:_load_panel()] - Loading panel: menu
2023-12-16 17:25:13,034 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-16 17:25:13,083 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-16 17:25:13,089 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-16 17:25:15,386 [screen.py:_load_panel()] - Loading panel: power
2023-12-16 17:25:15,399 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen >  > power
2023-12-16 17:25:17,006 [power.py:on_switch()] - Power toggled my_light
2023-12-16 17:25:17,006 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-16 17:25:17,014 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:25:17,324 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:25:17,325 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:25:17,526 [power.py:on_switch()] - Power toggled printer
2023-12-16 17:25:17,526 [KlippyWebsocket.py:power_device_on()] - Sending machine.device_power.on {device}
2023-12-16 17:25:17,538 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:25:18,473 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-16 17:25:18,484 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen > 
2023-12-16 17:25:18,490 [menu.py:evaluate_enable()] - moonraker connected True
2023-12-16 17:25:19,234 [screen.py:_menu_go_back()] - #### Menu go back
2023-12-16 17:25:19,241 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:27:49,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:27:49,598 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:27:49,603 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-16 17:27:49,603 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 17:27:49,605 [screen.py:_load_panel()] - Loading panel: main_menu
2023-12-16 17:27:49,672 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 17:27:49,679 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 17:27:49,685 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 17:27:49,713 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 17:27:49,714 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-12-16 17:27:54,606 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:27:54,619 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:27:54,635 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:27:54,636 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:27:57,158 [screen.py:_go_to_submenu()] - #### Go to submenu more
2023-12-16 17:27:57,158 [screen.py:_go_to_submenu()] - #### Menu __main
2023-12-16 17:27:57,163 [screen.py:_load_panel()] - Loading panel: menu
2023-12-16 17:27:57,447 [screen.py:attach_panel()] - Current panel hierarchy: main_menu > more
2023-12-16 17:27:57,458 [menu.py:arrangeMenuItems()] - X > more retraction
2023-12-16 17:27:57,463 [menu.py:arrangeMenuItems()] - X > more led
2023-12-16 17:27:57,468 [menu.py:arrangeMenuItems()] - X > more pins
2023-12-16 17:27:57,478 [menu.py:arrangeMenuItems()] - X > more input_shaper
2023-12-16 17:27:57,485 [menu.py:arrangeMenuItems()] - X > more spoolman
2023-12-16 17:31:26,415 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 17:31:26,415 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 17:31:26,416 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 17:31:26,419 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:31:26,488 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:31:29,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:31:29,603 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:31:29,604 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'gpio', 'power', 'update_manager', 'history', 'authorization', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:31:29,611 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:31:29,612 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:31:29,612 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-16 17:31:29,619 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:31:29,620 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:31:29,627 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:31:29,750 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:31:29,752 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:31:29,755 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:31:29,755 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:31:29,755 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:31:29,756 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:31:29,756 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:31:29,756 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:31:29,769 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:31:29,771 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:31:30,008 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:31:30,018 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:31:30,024 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:31:30,035 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:31:30,037 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:31:30,037 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:31:30,037 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:31:30,039 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:31:30,039 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 17:31:30,039 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 17:31:30,043 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:31:30,106 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 17:31:30,115 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 17:31:30,120 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 17:31:30,147 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 17:32:13,147 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-16 17:32:13,148 [printer.py:change_state()] - Adding callback for state: printing
2023-12-16 17:32:13,165 [screen.py:_load_panel()] - Loading panel: job_status
2023-12-16 17:32:13,299 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 17:32:13,306 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-16 17:32:13,322 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_20-35mm3_PLA_24m52s.gcode Size: 1118832
2023-12-16 17:32:13,329 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_20-35mm3_PLA_24m52s.gcode
2023-12-16 17:33:11,598 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:33:17,321 [printer.py:change_state()] - Changing state from 'printing' to 'shutdown'
2023-12-16 17:33:17,321 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 17:33:17,352 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:33:17,431 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:33:22,101 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:34:03,354 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-16 17:34:03,354 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 17:34:03,355 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 17:34:03,357 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:34:03,433 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:34:06,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:34:06,605 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:34:06,607 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'error', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'gpio', 'power', 'update_manager', 'history', 'authorization', 'octoprint_compat'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:34:06,614 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:34:06,614 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:34:06,614 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'on'}}
2023-12-16 17:34:06,621 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:34:06,622 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:34:06,630 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:34:06,697 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:34:06,698 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:34:06,701 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:34:06,701 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:34:06,701 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:34:06,701 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:34:06,701 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:34:06,701 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:34:06,711 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:34:06,713 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:34:06,961 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:34:06,971 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:06,977 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:34:06,985 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:34:06,986 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:34:06,986 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:34:06,986 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:34:06,986 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:34:06,987 [printer.py:change_state()] - Changing state from 'disconnected' to 'error'
2023-12-16 17:34:06,987 [printer.py:change_state()] - Adding callback for state: error
2023-12-16 17:34:06,989 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:34:07,035 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:34:14,218 [printer.py:change_state()] - Changing state from 'error' to 'shutdown'
2023-12-16 17:34:14,218 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 17:34:14,222 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:34:14,270 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:34:14,346 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:34:22,291 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-16 17:34:22,292 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-16 17:34:22,295 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:34:22,368 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:34:22,390 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-16 17:34:22,392 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:34:22,456 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:34:22,476 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 17:34:22,482 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-16 17:34:32,593 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 17:34:32,607 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:34:32,620 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-16 17:34:32,621 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-16 17:34:32,632 [_logging.py:info()] - Websocket connected
2023-12-16 17:34:32,633 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-16 17:34:32,644 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:34:32,656 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:34:32,658 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager', 'authorization', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:34:32,669 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:34:32,670 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:34:32,671 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 17:34:32,684 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:34:32,686 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:34:32,699 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:34:32,928 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:34:32,930 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:34:32,932 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:34:32,932 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:34:32,932 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:34:32,932 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:34:32,932 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:34:32,932 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:34:32,942 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:34:32,943 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:34:33,194 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:34:33,203 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:33,204 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:34:33,205 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:34:33,205 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:34:33,206 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:34:33,206 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2023-12-16 17:34:33,207 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 17:34:33,209 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:34:33,256 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:34:34,994 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-16 17:34:34,994 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 17:34:34,994 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 17:34:34,997 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:34:35,042 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:34:38,603 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:38,604 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:34:38,620 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:34:38,631 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:34:38,633 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'octoprint_compat', 'history', 'update_manager', 'authorization', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:34:38,643 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:34:38,645 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:34:38,645 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 17:34:38,654 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:34:38,656 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:34:38,666 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:34:38,689 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:34:38,691 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:34:38,695 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:34:38,695 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:34:38,695 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:34:38,695 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:34:38,695 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:34:38,695 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:34:38,713 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:34:38,714 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:34:38,945 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:34:38,954 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:38,954 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:34:38,955 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:34:38,955 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:34:38,955 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:34:38,956 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-16 17:34:38,956 [printer.py:change_state()] - Adding callback for state: startup
2023-12-16 17:34:43,598 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:43,598 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:34:44,271 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:34:44,605 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:44,606 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:34:46,578 [screen.py:_websocket_callback()] - Power status changed: {'device': 'my_light', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:34:47,959 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-16 17:34:47,959 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 17:34:47,962 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:34:48,022 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 17:34:48,028 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 17:34:48,034 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 17:34:48,061 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 17:34:48,062 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-12-16 17:34:48,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:48,598 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:34:49,598 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:49,605 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:34:49,613 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:34:49,614 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:34:53,601 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:34:53,616 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:34:53,629 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:34:53,631 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:35:02,768 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-16 17:35:02,768 [printer.py:change_state()] - Adding callback for state: printing
2023-12-16 17:35:02,781 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:35:02,891 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 17:35:02,896 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-16 17:35:02,908 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_20-35mm3_PLA_24m52s.gcode Size: 1118832
2023-12-16 17:35:02,914 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_20-35mm3_PLA_24m52s.gcode
2023-12-16 17:35:32,924 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:35:37,858 [printer.py:change_state()] - Changing state from 'printing' to 'shutdown'
2023-12-16 17:35:37,858 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 17:35:37,877 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:35:37,922 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:35:45,345 [KlippyWebsocket.py:on_close()] - Server Shutdown
2023-12-16 17:35:45,345 [KlippyWebsocket.py:on_close()] - Moonraker Websocket Closed
2023-12-16 17:35:45,347 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:35:45,395 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:35:45,410 [screen.py:connect_printer()] - Connecting to printer: Printer
2023-12-16 17:35:45,411 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:35:45,472 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:35:45,493 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 17:35:45,499 [KlippyRest.py:_do_request()] - host=127.0.0.1, port=7125>>Max retries exceeded with url>>Failed to establish a new connection>>[Errno 111] Connection refused
2023-12-16 17:35:55,592 [KlippyWebsocket.py:connect()] - Attempting to connect
2023-12-16 17:35:55,600 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:35:55,608 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/access/oneshot_token
2023-12-16 17:35:55,609 [KlippyWebsocket.py:connect()] - Starting websocket thread
2023-12-16 17:35:55,616 [_logging.py:info()] - Websocket connected
2023-12-16 17:35:55,616 [KlippyWebsocket.py:on_open()] - Moonraker Websocket Open
2023-12-16 17:35:55,623 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:35:55,631 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:35:55,632 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'shutdown', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'authorization', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:35:55,639 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:35:55,640 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:35:55,640 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 17:35:55,647 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:35:55,648 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:35:55,656 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:35:55,855 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:35:55,858 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:35:55,862 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:35:55,863 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:35:55,863 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:35:55,863 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:35:55,864 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:35:55,864 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:35:55,887 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:35:55,888 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:35:56,119 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:35:56,129 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:35:56,130 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:35:56,130 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:35:56,130 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:35:56,131 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:35:56,131 [printer.py:change_state()] - Changing state from 'disconnected' to 'shutdown'
2023-12-16 17:35:56,131 [printer.py:change_state()] - Adding callback for state: shutdown
2023-12-16 17:35:56,134 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:35:56,180 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:36:01,622 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:36:01,624 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:36:01,630 [printer.py:change_state()] - Changing state from 'shutdown' to 'disconnected'
2023-12-16 17:36:01,631 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 17:36:01,631 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 17:36:01,635 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:36:01,691 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:36:04,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:36:04,604 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:36:04,605 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'startup', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'authorization', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:36:04,612 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:36:04,613 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:36:04,613 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'off'}, 'my_light': {'status': 'off'}}
2023-12-16 17:36:04,620 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:36:04,621 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:36:04,629 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:36:04,644 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:36:04,646 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '200', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 200.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 53.21621607382886, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:36:04,648 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:36:04,648 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:36:04,648 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:36:04,648 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:36:04,649 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:36:04,649 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:36:04,658 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:36:04,660 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:36:04,906 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:36:04,914 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:36:04,915 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:36:04,916 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:36:04,916 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:36:04,917 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:36:04,918 [printer.py:change_state()] - Changing state from 'disconnected' to 'startup'
2023-12-16 17:36:04,918 [printer.py:change_state()] - Adding callback for state: startup
2023-12-16 17:36:06,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:36:06,598 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:36:07,637 [screen.py:_websocket_callback()] - Power status changed: {'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}
2023-12-16 17:36:10,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:36:10,598 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:36:11,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:36:11,598 [screen.py:init_tempstore()] - Tempstore not ready: {'result': {}} Retrying in 5 seconds
2023-12-16 17:36:14,422 [printer.py:change_state()] - Changing state from 'startup' to 'ready'
2023-12-16 17:36:14,422 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 17:36:14,425 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:36:14,488 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 17:36:14,495 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 17:36:14,501 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 17:36:14,527 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 17:36:14,528 [main_menu.py:update_graph_visibility()] - Could not create graph tempstore: []
2023-12-16 17:36:15,599 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:36:15,606 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:36:15,615 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:36:15,617 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:36:16,598 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:36:16,604 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:36:16,613 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:36:16,613 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:36:57,022 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 17:36:57,023 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 17:36:57,024 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 17:36:57,028 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:36:57,108 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 17:37:00,363 [screen.py:_websocket_callback()] - Still not initialized
2023-12-16 17:37:00,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:37:00,604 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 17:37:00,605 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'authorization', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 17:37:00,615 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 17:37:00,616 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 17:37:00,616 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'off'}}
2023-12-16 17:37:00,624 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 17:37:00,625 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 17:37:00,633 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 17:37:00,867 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 17:37:00,868 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '21.465', 'pid_ki': '0.980', 'pid_kd': '117.521'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 300.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 21.465, 'pid_ki': 0.98, 'pid_kd': 117.521, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 17:37:00,871 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 17:37:00,871 [printer.py:reinit()] - # Extruders: 1
2023-12-16 17:37:00,871 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 17:37:00,871 [printer.py:reinit()] - # Fans: 2
2023-12-16 17:37:00,871 [printer.py:reinit()] - # Output pins: 0
2023-12-16 17:37:00,871 [printer.py:reinit()] - # Leds: 0
2023-12-16 17:37:00,881 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 17:37:00,882 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 17:37:01,116 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 17:37:01,125 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 17:37:01,131 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 17:37:01,139 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 17:37:01,140 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 17:37:01,140 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 17:37:01,140 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 17:37:01,141 [screen.py:init_printer()] - Printer initialized
2023-12-16 17:37:01,141 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 17:37:01,141 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 17:37:01,156 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 17:37:01,221 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 17:37:01,228 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 17:37:01,234 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 17:37:01,264 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 18:26:21,731 [printer.py:change_state()] - Changing state from 'ready' to 'printing'
2023-12-16 18:26:21,731 [printer.py:change_state()] - Adding callback for state: printing
2023-12-16 18:26:21,741 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 18:26:21,857 [screen.py:attach_panel()] - Current panel hierarchy: job_status
2023-12-16 18:26:21,863 [job_status.py:set_state()] - Changing job_status state from 'standby' to 'printing'
2023-12-16 18:26:21,875 [job_status.py:update_file_metadata()] - Update Metadata. File: SpeedTestStructure_20-35mm3_PLA_24m52s.gcode Size: 1118832
2023-12-16 18:26:21,880 [job_status.py:show_file_thumbnail()] - SpeedTestStructure_20-35mm3_PLA_24m52s.gcode
2023-12-16 18:27:57,592 [screen.py:show_screensaver()] - Showing Screensaver
2023-12-16 18:51:24,675 [screen.py:close_screensaver()] - Closing Screensaver
2023-12-16 18:51:24,719 [screen.py:wake_screen()] - Screen wake up
2023-12-16 18:51:25,126 [screen.py:show_popup_message()] - error: // Unknown command:"M200"
2023-12-16 18:51:25,227 [screen.py:show_popup_message()] - error: // Unknown command:"M150"
2023-12-16 18:51:25,239 [screen.py:show_popup_message()] - error: // Unknown command:"M85"
2023-12-16 18:51:33,016 [job_status.py:set_state()] - Changing job_status state from 'printing' to 'complete'
2023-12-16 18:51:35,515 [printer.py:change_state()] - Changing state from 'printing' to 'ready'
2023-12-16 18:51:35,515 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 19:08:08,758 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-16 19:32:27,001 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 19:32:27,002 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 19:32:27,002 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 19:32:27,005 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-16 19:32:27,006 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 19:32:27,049 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 19:32:30,356 [screen.py:_websocket_callback()] - Still not initialized
2023-12-16 19:32:30,597 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 19:32:30,608 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 19:32:30,609 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'authorization', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 19:32:30,616 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 19:32:30,617 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 19:32:30,617 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'off'}}
2023-12-16 19:32:30,624 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 19:32:30,625 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 19:32:30,637 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 19:32:30,859 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 19:32:30,860 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '17.519', 'pid_ki': '0.645', 'pid_kd': '118.907'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '48.362', 'pid_ki': '0.638', 'pid_kd': '915.854'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 48.362, 'pid_ki': 0.638, 'pid_kd': 915.854, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 300.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 17.519, 'pid_ki': 0.645, 'pid_kd': 118.907, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 19:32:30,863 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 19:32:30,863 [printer.py:reinit()] - # Extruders: 1
2023-12-16 19:32:30,863 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 19:32:30,863 [printer.py:reinit()] - # Fans: 2
2023-12-16 19:32:30,863 [printer.py:reinit()] - # Output pins: 0
2023-12-16 19:32:30,863 [printer.py:reinit()] - # Leds: 0
2023-12-16 19:32:30,872 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 19:32:30,873 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 19:32:31,120 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 19:32:31,145 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 19:32:31,150 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 19:32:31,164 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 19:32:31,165 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 19:32:31,166 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 19:32:31,166 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 19:32:31,167 [screen.py:init_printer()] - Printer initialized
2023-12-16 19:32:31,167 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 19:32:31,167 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 19:32:31,172 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 19:32:31,260 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 19:32:31,267 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 19:32:31,273 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 19:32:31,300 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
2023-12-16 19:46:59,416 [KlippyGtk.py:remove_dialog()] - Cannot remove dialog <Gtk.Dialog object at 0x7f9292f380 (GtkDialog at 0x146d0600)>
2023-12-16 19:46:59,454 [KlippyGtk.py:Dialog()] - Showing dialog KlipperScreen (width=800, height=480)
2023-12-16 19:48:09,414 [printer.py:change_state()] - Changing state from 'ready' to 'disconnected'
2023-12-16 19:48:09,414 [printer.py:change_state()] - Adding callback for state: disconnected
2023-12-16 19:48:09,415 [screen.py:state_disconnected()] - ### Going to disconnected
2023-12-16 19:48:09,418 [KlippyGtk.py:remove_dialog()] - Removing Dialog
2023-12-16 19:48:09,419 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 19:48:09,463 [screen.py:attach_panel()] - Current panel hierarchy: splash_screen
2023-12-16 19:48:12,599 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 19:48:12,605 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/info
2023-12-16 19:48:12,606 [screen.py:init_printer()] - Moonraker info {'klippy_connected': True, 'klippy_state': 'ready', 'components': ['klippy_connection', 'application', 'websockets', 'internal_transport', 'dbus_manager', 'database', 'file_manager', 'klippy_apis', 'secrets', 'template', 'shell_command', 'machine', 'data_store', 'proc_stats', 'job_state', 'job_queue', 'http_client', 'announcements', 'webcam', 'extensions', 'history', 'octoprint_compat', 'authorization', 'update_manager', 'gpio', 'power'], 'failed_components': [], 'registered_directories': ['config', 'logs', 'gcodes', 'config_examples', 'docs'], 'warnings': [], 'websocket_count': 2, 'moonraker_version': 'v0.8.0-204-gfb15b2a', 'missing_klippy_requirements': [], 'api_version': [1, 4, 0], 'api_version_string': '1.4.0'}
2023-12-16 19:48:12,612 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/machine/device_power/devices
2023-12-16 19:48:12,613 [printer.py:configure_power_devices()] - Processing power devices: {'devices': [{'device': 'printer', 'status': 'on', 'locked_while_printing': False, 'type': 'gpio'}, {'device': 'my_light', 'status': 'off', 'locked_while_printing': False, 'type': 'gpio'}]}
2023-12-16 19:48:12,613 [printer.py:configure_power_devices()] - Power devices: {'printer': {'status': 'on'}, 'my_light': {'status': 'off'}}
2023-12-16 19:48:12,619 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/webcams/list
2023-12-16 19:48:12,620 [printer.py:configure_cameras()] - Cameras: [{'name': 'webcam', 'enabled': True, 'icon': 'mdiRadiatorDisabled', 'aspect_ratio': '4:3', 'target_fps': 30, 'target_fps_idle': 15, 'location': 'printer', 'service': 'mjpegstreamer-adaptive', 'stream_url': '/webcam/?action=stream', 'snapshot_url': '/webcam/?action=snapshot', 'flip_horizontal': False, 'flip_vertical': False, 'rotation': 0, 'source': 'database', 'extra_data': {}, 'uid': 'aa733029-cf9a-4bd7-b68f-17965bcc9cfd'}]
2023-12-16 19:48:12,627 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/info
2023-12-16 19:48:12,765 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?configfile
2023-12-16 19:48:12,768 [screen.py:init_printer()] - {'configfile': {'config': {'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': '2.', 'verbose': 'True'}, 'gcode_macro HELLO_WORLD': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': '50.'}, 'display_status': {}, 'respond': {}, 'gcode_macro CANCEL_PRINT': {'description': 'Cancel the actual running print', 'rename_existing': 'CANCEL_PRINT_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE'}, 'gcode_macro PAUSE': {'description': 'Pause the actual running print', 'rename_existing': 'PAUSE_BASE', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}'}, 'gcode_macro RESUME': {'description': 'Resume the actual running print', 'rename_existing': 'RESUME_BASE', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}'}, 'gcode_macro SET_PAUSE_NEXT_LAYER': {'description': 'Enable a pause if the next layer is reached', 'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"'}, 'gcode_macro SET_PAUSE_AT_LAYER': {'description': 'Enable/disable a pause if a given layer number is reached', 'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"'}, 'gcode_macro SET_PRINT_STATS_INFO': {'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }', 'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}'}, 'gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL': {'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}'}, 'gcode_macro _CLIENT_EXTRUDE': {'description': 'Extrudes, if the extruder is hot enough', 'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}'}, 'gcode_macro _CLIENT_RETRACT': {'description': 'Retracts, if the extruder is hot enough', 'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}"}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'enable_pin': '!ar38', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar3', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40.0'}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'enable_pin': '!ar56', 'microsteps': '16', 'rotation_distance': '40', 'endstop_pin': '^!ar14', 'position_endstop': '0', 'position_max': '310', 'homing_speed': '40', 'homing_positive_dir': 'false'}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'enable_pin': '!ar62', 'microsteps': '16', 'rotation_distance': '8', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': '-3', 'position_max': '400', 'homing_speed': '30', 'second_homing_speed': '1'}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'enable_pin': '!ar30', 'microsteps': '16', 'rotation_distance': '8'}, 'extruder': {'step_pin': 'ar26', 'dir_pin': 'ar28', 'enable_pin': '!ar24', 'microsteps': '16', 'rotation_distance': '7.504', 'nozzle_diameter': '0.400', 'filament_diameter': '1.750', 'heater_pin': 'ar10', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog13', 'min_extrude_temp': '170', 'min_temp': '5', 'max_temp': '240', 'max_extrude_only_distance': '500', 'max_extrude_cross_section': '2.0', 'control': 'pid', 'pid_kp': '17.519', 'pid_ki': '0.645', 'pid_kd': '118.907'}, 'heater_bed': {'heater_pin': 'ar8', 'sensor_type': 'EPCOS 100K B57560G104F', 'sensor_pin': 'analog14', 'min_temp': '5', 'max_temp': '150', 'control': 'pid', 'pid_kp': '51.355', 'pid_ki': '0.699', 'pid_kd': '943.643'}, 'fan': {'pin': 'ar9', 'kick_start_time': '0.500'}, 'heater_fan my_nozzle_fan': {'pin': 'ar7', 'heater': 'extruder', 'heater_temp': '50.0', 'fan_speed': '1.0'}, 'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0'}, 'printer': {'kinematics': 'cartesian', 'max_velocity': '300', 'max_accel': '3000', 'max_z_velocity': '50', 'max_z_accel': '100', 'square_corner_velocity': '5'}, 'probe': {'pin': '^!ar18', 'x_offset': '28.0', 'y_offset': '-33.0', 'speed': '10.0', 'samples': '1', 'samples_result': 'average', 'z_offset': '0.535'}, 'safe_z_home': {'home_xy_position': '122,183', 'speed': '100', 'z_hop': '20', 'z_hop_speed': '20'}, 'bed_mesh': {'speed': '800', 'mesh_min': '30,30', 'mesh_max': '270,270', 'probe_count': '5,5', 'mesh_pps': '2,2', 'algorithm': 'bicubic', 'bicubic_tension': '0.2', 'move_check_distance': '3.0', 'split_delta_z': '.010', 'fade_start': '1.0', 'fade_end': '5.0'}, 'bed_screws': {'screw1': '55,55', 'screw1_name': 'front left', 'screw2': '255,55', 'screw2_name': 'front right', 'screw3': '255,255', 'screw3_name': 'back right', 'screw4': '55,255', 'screw4_name': 'back left', 'speed': '100.0'}, 'screws_tilt_adjust': {'screw1': '22,83', 'screw1_name': 'front left', 'screw2': '222,83', 'screw2_name': 'front right', 'screw3': '22,283', 'screw3_name': 'back left', 'screw4': '222,283', 'screw4_name': 'back right', 'speed': '100.0', 'screw_thread': 'CW-M5'}, 'exclude_object': {}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu'}, 'gcode_macro G29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1'}, 'gcode_macro START_PRINT': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0'}, 'gcode_macro END_PRINT': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84'}, 'filament_switch_sensor RUNOUT': {'pause_on_runout': 'False', 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'switch_pin': 'rpi:gpio27'}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': '90.0', 'verbose': 'True'}, 'board_pins arduino-mega': {'aliases': '\nar0=PE0, ar1=PE1, ar2=PE4, ar3=PE5, ar4=PG5,\nar5=PE3, ar6=PH3, ar7=PH4, ar8=PH5, ar9=PH6,\nar10=PB4, ar11=PB5, ar12=PB6, ar13=PB7, ar14=PJ1,\nar15=PJ0, ar16=PH1, ar17=PH0, ar18=PD3, ar19=PD2,\nar20=PD1, ar21=PD0, ar22=PA0, ar23=PA1, ar24=PA2,\nar25=PA3, ar26=PA4, ar27=PA5, ar28=PA6, ar29=PA7,\nar30=PC7, ar31=PC6, ar32=PC5, ar33=PC4, ar34=PC3,\nar35=PC2, ar36=PC1, ar37=PC0, ar38=PD7, ar39=PG2,\nar40=PG1, ar41=PG0, ar42=PL7, ar43=PL6, ar44=PL5,\nar45=PL4, ar46=PL3, ar47=PL2, ar48=PL1, ar49=PL0,\nar50=PB3, ar51=PB2, ar52=PB1, ar53=PB0, ar54=PF0,\nar55=PF1, ar56=PF2, ar57=PF3, ar58=PF4, ar59=PF5,\nar60=PF6, ar61=PF7, ar62=PK0, ar63=PK1, ar64=PK2,\nar65=PK3, ar66=PK4, ar67=PK5, ar68=PK6, ar69=PK7,\nanalog0=PF0, analog1=PF1, analog2=PF2, analog3=PF3, analog4=PF4,\nanalog5=PF5, analog6=PF6, analog7=PF7, analog8=PK0, analog9=PK1,\nanalog10=PK2, analog11=PK3, analog12=PK4, analog13=PK5, analog14=PK6,\nanalog15=PK7,\n\nml70=PG4, ml71=PG3, ml72=PJ2, ml73=PJ3, ml74=PJ7,\nml75=PJ4, ml76=PJ5, ml77=PJ6, ml78=PE2, ml79=PE6,\nml80=PE7, ml81=PD4, ml82=PD5, ml83=PD6, ml84=PH2,\nml85=PH7'}, 'bed_mesh default': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}, 'bed_mesh x1': {'version': '1', 'points': '\n-0.020000, 0.022500, 0.035000, 0.112500, 0.220000\n-0.055000, -0.050000, -0.015000, 0.047500, 0.125000\n-0.062500, -0.037500, -0.007500, 0.060000, 0.155000\n0.092500, 0.035000, 0.005000, 0.022500, 0.030000\n0.017500, -0.042500, -0.055000, -0.052500, 0.000000', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0000000001', 'max_y': '270.0'}, 'bed_mesh smooth': {'version': '1', 'points': '\n0.060000, 0.022500, -0.040000, -0.135000, -0.250000\n0.035000, -0.015000, -0.005000, -0.057500, -0.167500\n0.025000, 0.027500, 0.010000, -0.072500, -0.170000\n-0.112500, -0.092500, -0.040000, -0.090000, -0.140000\n-0.232500, -0.175000, -0.137500, -0.115000, -0.157500', 'x_count': '5', 'y_count': '5', 'mesh_x_pps': '2', 'mesh_y_pps': '2', 'algo': 'bicubic', 'tension': '0.2', 'min_x': '30.0', 'max_x': '270.0', 'min_y': '30.0', 'max_y': '270.0'}}, 'settings': {'mcu': {'serial': '/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0', 'baud': 250000, 'max_stepper_error': 2.5e-05}, 'mcu rpi': {'serial': '/tmp/klipper_host_mcu', 'max_stepper_error': 2.5e-05}, 'gcode_shell_command hello_world': {'command': 'echo hello world', 'timeout': 2.0, 'verbose': True}, 'gcode_macro hello_world': {'gcode': '\nRUN_SHELL_COMMAND CMD=hello_world', 'description': 'G-Code macro'}, 'virtual_sdcard': {'path': '~/printer_data/gcodes', 'on_error_gcode': 'CANCEL_PRINT'}, 'pause_resume': {'recover_velocity': 50.0}, 'respond': {'default_type': 'echo', 'default_prefix': 'echo:'}, 'gcode_macro cancel_print': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set allow_park = client.park_at_cancel|default(false)|lower == \'true\' %}\n{% set retract = client.cancel_retract|default(5.0)|abs %}\n\n{% set park_x = "" if (client.park_at_cancel_x|default(none) is none)\nelse "X=" ~ client.park_at_cancel_x %}\n{% set park_y = "" if (client.park_at_cancel_y|default(none) is none)\nelse "Y=" ~ client.park_at_cancel_y %}\n{% set custom_park = park_x|length > 0 or park_y|length > 0 %}\n\n\n{% if printer[\'gcode_macro RESUME\'].restore_idle_timeout > 0 %}\nSET_IDLE_TIMEOUT TIMEOUT={printer[\'gcode_macro RESUME\'].restore_idle_timeout}\n{% endif %}\n{% if (custom_park or not printer.pause_resume.is_paused) and allow_park %} _TOOLHEAD_PARK_PAUSE_CANCEL {park_x} {park_y} {% endif %}\n_CLIENT_RETRACT LENGTH={retract}\nTURN_OFF_HEATERS\nM106 S0\n{client.user_cancel_macro|default("")}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n\nSET_PAUSE_NEXT_LAYER ENABLE=0\nSET_PAUSE_AT_LAYER ENABLE=0 LAYER=0\nCANCEL_PRINT_BASE', 'rename_existing': 'CANCEL_PRINT_BASE', 'description': 'Cancel the actual running print'}, 'gcode_macro pause': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set idle_timeout = client.idle_timeout|default(0) %}\n{% set temp = printer[printer.toolhead.extruder].target if printer.toolhead.extruder != \'\' else 0 %}\n{% set restore = False if printer.toolhead.extruder == \'\'\nelse True  if params.RESTORE|default(1)|int == 1 else False %}\n\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=last_extruder_temp VALUE="{{\'restore\': restore, \'temp\': temp}}"\n\n{% if idle_timeout > 0 %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=restore_idle_timeout VALUE={printer.configfile.settings.idle_timeout.timeout}\nSET_IDLE_TIMEOUT TIMEOUT={idle_timeout}\n{% endif %}\nPAUSE_BASE\n{client.user_pause_macro|default("")}\n_TOOLHEAD_PARK_PAUSE_CANCEL {rawparams}', 'rename_existing': 'PAUSE_BASE', 'description': 'Pause the actual running print'}, 'gcode_macro resume': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set sp_move = client.speed_move|default(velocity) %}\n{% set runout_resume = True if client.runout_sensor|default("") == ""\nelse True if not printer[client.runout_sensor].enabled\nelse printer[client.runout_sensor].filament_detected %}\n{% set can_extrude = True if printer.toolhead.extruder == \'\'\nelse printer[printer.toolhead.extruder].can_extrude %}\n{% set do_resume = False %}\n\n\n{% if printer.idle_timeout.state|upper == "IDLE" or idle_state %}\nSET_GCODE_VARIABLE MACRO=RESUME VARIABLE=idle_state VALUE=False\n{% if last_extruder_temp.restore %}\n\nRESPOND TYPE=echo MSG=\'{"Restoring \\"%s\\" temperature to %3.1f\\u00B0C, this may take some time" % (printer.toolhead.extruder, last_extruder_temp.temp) }\'\nM109 S{last_extruder_temp.temp}\n{% set do_resume = True %}\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n\n{% elif can_extrude %}\n{% set do_resume = True %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" not hot enough, please heat up again and press RESUME" % printer.toolhead.extruder}\'\n{% endif %}\n{% if runout_resume %}\n{% if do_resume %}\n{% if restore_idle_timeout > 0 %} SET_IDLE_TIMEOUT TIMEOUT={restore_idle_timeout} {% endif %}\n{client.user_resume_macro|default("")}\n_CLIENT_EXTRUDE\nRESUME_BASE VELOCITY={params.VELOCITY|default(sp_move)}\n{% endif %}\n{% else %}\nRESPOND TYPE=error MSG=\'{"Resume aborted !!! \\"%s\\" detects no filament, please load filament and press RESUME" % (client.runout_sensor.split(" "))[1]}\'\n{% endif %}', 'rename_existing': 'RESUME_BASE', 'description': 'Resume the actual running print', 'variable_last_extruder_temp': "{'restore': False, 'temp': 0}", 'variable_restore_idle_timeout': '0', 'variable_idle_state': 'False'}, 'gcode_macro set_pause_next_layer': {'gcode': '\n{% set pause_next_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_next_layer %}\n{% set ENABLE = params.ENABLE|default(1)|int != 0 %}\n{% set MACRO = params.MACRO|default(pause_next_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_next_layer VALUE="{{ \'enable\': ENABLE, \'call\': MACRO }}"', 'description': 'Enable a pause if the next layer is reached'}, 'gcode_macro set_pause_at_layer': {'gcode': '\n{% set pause_at_layer = printer[\'gcode_macro SET_PRINT_STATS_INFO\'].pause_at_layer %}\n{% set ENABLE = params.ENABLE|int != 0 if params.ENABLE is defined\nelse params.LAYER is defined %}\n{% set LAYER = params.LAYER|default(pause_at_layer.layer)|int %}\n{% set MACRO = params.MACRO|default(pause_at_layer.call, True) %}\nSET_GCODE_VARIABLE MACRO=SET_PRINT_STATS_INFO VARIABLE=pause_at_layer VALUE="{{ \'enable\': ENABLE, \'layer\': LAYER, \'call\': MACRO }}"', 'description': 'Enable/disable a pause if a given layer number is reached'}, 'gcode_macro set_print_stats_info': {'gcode': '\n{% if pause_next_layer.enable %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_next_layer" % pause_next_layer.call}\'\n{pause_next_layer.call}\nSET_PAUSE_NEXT_LAYER ENABLE=0\n{% elif pause_at_layer.enable and params.CURRENT_LAYER is defined and params.CURRENT_LAYER|int == pause_at_layer.layer %}\nRESPOND TYPE=echo MSG=\'{"%s, forced by pause_at_layer [%d]" % (pause_at_layer.call, pause_at_layer.layer)}\'\n{pause_at_layer.call}\nSET_PAUSE_AT_LAYER ENABLE=0\n{% endif %}\nSET_PRINT_STATS_INFO_BASE {rawparams}', 'rename_existing': 'SET_PRINT_STATS_INFO_BASE', 'description': 'Overwrite, to get pause_next_layer and pause_at_layer feature', 'variable_pause_next_layer': '{ \'enable\': False, \'call\': "PAUSE" }', 'variable_pause_at_layer': '{ \'enable\': False, \'layer\': 0, \'call\': "PAUSE" }'}, 'gcode_macro _toolhead_park_pause_cancel': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set velocity = printer.configfile.settings.pause_resume.recover_velocity %}\n{% set use_custom     = client.use_custom_pos|default(false)|lower == \'true\' %}\n{% set custom_park_x  = client.custom_park_x|default(0.0) %}\n{% set custom_park_y  = client.custom_park_y|default(0.0) %}\n{% set park_dz        = client.custom_park_dz|default(2.0)|abs %}\n{% set sp_hop         = client.speed_hop|default(15) * 60 %}\n{% set sp_move        = client.speed_move|default(velocity) * 60 %}\n\n{% set origin    = printer.gcode_move.homing_origin %}\n{% set act       = printer.gcode_move.gcode_position %}\n{% set max       = printer.toolhead.axis_maximum %}\n{% set cone      = printer.toolhead.cone_start_z|default(max.z) %}\n{% set round_bed = True if printer.configfile.settings.printer.kinematics is in [\'delta\',\'polar\',\'rotary_delta\',\'winch\']\nelse False %}\n\n{% set z_min = params.Z_MIN|default(0)|float %}\n{% set z_park = [[(act.z + park_dz), z_min]|max, (max.z - origin.z)]|min %}\n{% set x_park = params.X       if params.X is defined\nelse custom_park_x  if use_custom\nelse 0.0            if round_bed\nelse (max.x - 5.0) %}\n{% set y_park = params.Y       if params.Y is defined\nelse custom_park_y  if use_custom\nelse (max.y - 5.0)  if round_bed and z_park < cone\nelse 0.0            if round_bed\nelse (max.y - 5.0) %}\n\n_CLIENT_RETRACT\n{% if "xyz" in printer.toolhead.homed_axes %}\nG90\nG1 Z{z_park} F{sp_hop}\nG1 X{x_park} Y{y_park} F{sp_move}\n{% if not printer.gcode_move.absolute_coordinates %} G91 {% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'Printer not homed\'\n{% endif %}', 'description': 'Helper: park toolhead used in PAUSE and CANCEL_PRINT'}, 'gcode_macro _client_extrude': {'gcode': '\n\n{% set client = printer[\'gcode_macro _CLIENT_VARIABLE\']|default({}) %}\n{% set use_fw_retract = (client.use_fw_retract|default(false)|lower == \'true\') and (printer.firmware_retraction is defined) %}\n{% set length = params.LENGTH|default(client.unretract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_unretract)|default(35) %}\n{% set absolute_extrude = printer.gcode_move.absolute_extrude %}\n\n{% if printer.toolhead.extruder != \'\' %}\n{% if printer[printer.toolhead.extruder].can_extrude %}\n{% if use_fw_retract %}\n{% if length < 0 %}\nG10\n{% else %}\nG11\n{% endif %}\n{% else %}\nM83\nG1 E{length} F{(speed|float|abs) * 60}\n{% if absolute_extrude %}\nM82\n{% endif %}\n{% endif %}\n{% else %}\nRESPOND TYPE=echo MSG=\'{"\\"%s\\" not hot enough" % printer.toolhead.extruder}\'\n{% endif %}\n{% endif %}', 'description': 'Extrudes, if the extruder is hot enough'}, 'gcode_macro _client_retract': {'gcode': "\n{% set client = printer['gcode_macro _CLIENT_VARIABLE']|default({}) %}\n{% set length = params.LENGTH|default(client.retract)|default(1.0)|float %}\n{% set speed = params.SPEED|default(client.speed_retract)|default(35) %}\n\n_CLIENT_EXTRUDE LENGTH=-{length|float|abs} SPEED={speed|float|abs}", 'description': 'Retracts, if the extruder is hot enough'}, 'heater_bed': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog14', 'min_temp': 5.0, 'max_temp': 150.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 51.355, 'pid_ki': 0.699, 'pid_kd': 943.643, 'heater_pin': 'ar8', 'pwm_cycle_time': 0.1}, 'verify_heater heater_bed': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 60.0}, 'fan': {'max_power': 1.0, 'kick_start_time': 0.5, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 0.0, 'pin': 'ar9'}, 'heater_fan my_nozzle_fan': {'heater': ['extruder'], 'heater_temp': 50.0, 'max_power': 1.0, 'kick_start_time': 0.1, 'off_below': 0.0, 'cycle_time': 0.01, 'hardware_pwm': False, 'shutdown_speed': 1.0, 'pin': 'ar7', 'fan_speed': 1.0}, 'probe': {'z_offset': 0.535, 'deactivate_on_each_sample': True, 'activate_gcode': '', 'deactivate_gcode': '', 'pin': '^!ar18', 'speed': 10.0, 'lift_speed': 10.0, 'x_offset': 28.0, 'y_offset': -33.0, 'samples': 1, 'sample_retract_dist': 2.0, 'samples_result': 'average', 'samples_tolerance': 0.1, 'samples_tolerance_retries': 0}, 'safe_z_home': {'home_xy_position': [122.0, 183.0], 'z_hop': 20.0, 'z_hop_speed': 20.0, 'speed': 100.0, 'move_to_previous': False}, 'bed_mesh': {'probe_count': [5, 5], 'mesh_min': [30.0, 30.0], 'mesh_max': [270.0, 270.0], 'mesh_pps': [2, 2], 'algorithm': 'bicubic', 'bicubic_tension': 0.2, 'horizontal_move_z': 5.0, 'speed': 800.0, 'fade_start': 1.0, 'fade_end': 5.0, 'split_delta_z': 0.01, 'move_check_distance': 3.0}, 'bed_mesh default': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh x1': {'version': 1, 'points': [[-0.02, 0.0225, 0.035, 0.1125, 0.22], [-0.055, -0.05, -0.015, 0.0475, 0.125], [-0.0625, -0.0375, -0.0075, 0.06, 0.155], [0.0925, 0.035, 0.005, 0.0225, 0.03], [0.0175, -0.0425, -0.055, -0.0525, 0.0]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0000000001, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_mesh smooth': {'version': 1, 'points': [[0.06, 0.0225, -0.04, -0.135, -0.25], [0.035, -0.015, -0.005, -0.0575, -0.1675], [0.025, 0.0275, 0.01, -0.0725, -0.17], [-0.1125, -0.0925, -0.04, -0.09, -0.14], [-0.2325, -0.175, -0.1375, -0.115, -0.1575]], 'min_x': 30.0, 'max_x': 270.0, 'min_y': 30.0, 'max_y': 270.0, 'x_count': 5, 'y_count': 5, 'mesh_x_pps': 2, 'mesh_y_pps': 2, 'algo': 'bicubic', 'tension': 0.2}, 'bed_screws': {'screw1': [55.0, 55.0], 'screw1_name': 'front left', 'screw2': [255.0, 55.0], 'screw2_name': 'front right', 'screw3': [255.0, 255.0], 'screw3_name': 'back right', 'screw4': [55.0, 255.0], 'screw4_name': 'back left', 'speed': 100.0, 'probe_speed': 5.0, 'horizontal_move_z': 5.0, 'probe_height': 0.0}, 'screws_tilt_adjust': {'screw1': [22.0, 83.0], 'screw1_name': 'front left', 'screw2': [222.0, 83.0], 'screw2_name': 'front right', 'screw3': [22.0, 283.0], 'screw3_name': 'back left', 'screw4': [222.0, 283.0], 'screw4_name': 'back right', 'screw_thread': 'CW-M5', 'horizontal_move_z': 5.0, 'speed': 100.0}, 'gcode_macro g29': {'gcode': '\nBED_MESH_CLEAR\nG28\nBED_MESH_CALIBRATE\nBED_MESH_PROFILE SAVE=x1', 'description': 'G-Code macro'}, 'gcode_macro start_print': {'gcode': '\n{% set BED_TEMP = params.BED_TEMP|default(60)|float %}\n{% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}\n\nM140 S{BED_TEMP}\n\n\n\nG28\n\nG28 X Y\n\n\n\nBED_MESH_PROFILE LOAD=x1\n\nG90\n\nM190 S{BED_TEMP}\n\nM109 S{EXTRUDER_TEMP}\n\nG1 X0 Y0 Z5 F3000\n\nG1 Z0.15 F300\nG92 E0\nG1 X20 Y5 Z0.3 F5000.0\nG1 Z0.3 F1000\nG1 X200 Y5 F1500.0 E15\nG1 X200 Y5.3 Z0.3 F5000.0\nG1 X5.3  Y5.3 Z0.3 F1500.0 E30\nG1 Z3 F3000\nG21\nG90\nM83\nG92 E0', 'description': 'G-Code macro'}, 'gcode_macro end_print': {'gcode': '\n\nM140 S0\nM104 S0\nM106 S0\n\nG91\nG1 X-2 Y-2 E-3 F300\n\nG1 Z30 F3000\nG90\n\nM84', 'description': 'G-Code macro'}, 'filament_switch_sensor runout': {'switch_pin': 'rpi:gpio27', 'pause_on_runout': False, 'runout_gcode': 'PAUSE', 'insert_gcode': 'RESUME', 'pause_delay': 0.5, 'event_delay': 3.0}, 'gcode_macro update_git': {'gcode': '\nRUN_SHELL_COMMAND CMD=update_git_script', 'description': 'G-Code macro'}, 'gcode_shell_command update_git_script': {'command': 'bash /home/pi/printer_data/klipper-backup/script.sh', 'timeout': 90.0, 'verbose': True}, 'board_pins arduino-mega': {'mcu': ['mcu'], 'aliases': [['ar0', 'PE0'], ['ar1', 'PE1'], ['ar2', 'PE4'], ['ar3', 'PE5'], ['ar4', 'PG5'], ['ar5', 'PE3'], ['ar6', 'PH3'], ['ar7', 'PH4'], ['ar8', 'PH5'], ['ar9', 'PH6'], ['ar10', 'PB4'], ['ar11', 'PB5'], ['ar12', 'PB6'], ['ar13', 'PB7'], ['ar14', 'PJ1'], ['ar15', 'PJ0'], ['ar16', 'PH1'], ['ar17', 'PH0'], ['ar18', 'PD3'], ['ar19', 'PD2'], ['ar20', 'PD1'], ['ar21', 'PD0'], ['ar22', 'PA0'], ['ar23', 'PA1'], ['ar24', 'PA2'], ['ar25', 'PA3'], ['ar26', 'PA4'], ['ar27', 'PA5'], ['ar28', 'PA6'], ['ar29', 'PA7'], ['ar30', 'PC7'], ['ar31', 'PC6'], ['ar32', 'PC5'], ['ar33', 'PC4'], ['ar34', 'PC3'], ['ar35', 'PC2'], ['ar36', 'PC1'], ['ar37', 'PC0'], ['ar38', 'PD7'], ['ar39', 'PG2'], ['ar40', 'PG1'], ['ar41', 'PG0'], ['ar42', 'PL7'], ['ar43', 'PL6'], ['ar44', 'PL5'], ['ar45', 'PL4'], ['ar46', 'PL3'], ['ar47', 'PL2'], ['ar48', 'PL1'], ['ar49', 'PL0'], ['ar50', 'PB3'], ['ar51', 'PB2'], ['ar52', 'PB1'], ['ar53', 'PB0'], ['ar54', 'PF0'], ['ar55', 'PF1'], ['ar56', 'PF2'], ['ar57', 'PF3'], ['ar58', 'PF4'], ['ar59', 'PF5'], ['ar60', 'PF6'], ['ar61', 'PF7'], ['ar62', 'PK0'], ['ar63', 'PK1'], ['ar64', 'PK2'], ['ar65', 'PK3'], ['ar66', 'PK4'], ['ar67', 'PK5'], ['ar68', 'PK6'], ['ar69', 'PK7'], ['analog0', 'PF0'], ['analog1', 'PF1'], ['analog2', 'PF2'], ['analog3', 'PF3'], ['analog4', 'PF4'], ['analog5', 'PF5'], ['analog6', 'PF6'], ['analog7', 'PF7'], ['analog8', 'PK0'], ['analog9', 'PK1'], ['analog10', 'PK2'], ['analog11', 'PK3'], ['analog12', 'PK4'], ['analog13', 'PK5'], ['analog14', 'PK6'], ['analog15', 'PK7'], ['ml70', 'PG4'], ['ml71', 'PG3'], ['ml72', 'PJ2'], ['ml73', 'PJ3'], ['ml74', 'PJ7'], ['ml75', 'PJ4'], ['ml76', 'PJ5'], ['ml77', 'PJ6'], ['ml78', 'PE2'], ['ml79', 'PE6'], ['ml80', 'PE7'], ['ml81', 'PD4'], ['ml82', 'PD5'], ['ml83', 'PD6'], ['ml84', 'PH2'], ['ml85', 'PH7']]}, 'printer': {'max_velocity': 300.0, 'max_accel': 3000.0, 'max_accel_to_decel': 1500.0, 'square_corner_velocity': 5.0, 'buffer_time_low': 1.0, 'buffer_time_high': 2.0, 'buffer_time_start': 0.25, 'move_flush_time': 0.05, 'kinematics': 'cartesian', 'max_z_velocity': 50.0, 'max_z_accel': 100.0}, 'stepper_x': {'step_pin': 'ar54', 'dir_pin': 'ar55', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar38', 'endstop_pin': '^!ar3', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'force_move': {'enable_force_move': False}, 'stepper_y': {'step_pin': 'ar60', 'dir_pin': 'ar61', 'rotation_distance': 40.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar56', 'endstop_pin': '^!ar14', 'position_endstop': 0.0, 'position_min': 0.0, 'position_max': 310.0, 'homing_speed': 40.0, 'second_homing_speed': 20.0, 'homing_retract_speed': 40.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z': {'step_pin': 'ar46', 'dir_pin': '!ar48', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar62', 'endstop_pin': 'probe:z_virtual_endstop', 'position_min': -3.0, 'position_max': 400.0, 'homing_speed': 30.0, 'second_homing_speed': 1.0, 'homing_retract_speed': 30.0, 'homing_retract_dist': 5.0, 'homing_positive_dir': False}, 'stepper_z1': {'step_pin': 'ar36', 'dir_pin': '!ar34', 'rotation_distance': 8.0, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar30'}, 'idle_timeout': {'timeout': 600.0, 'gcode': "\n{% if 'heaters' in printer %}\n   TURN_OFF_HEATERS\n{% endif %}\nM84\n"}, 'extruder': {'sensor_type': 'EPCOS 100K B57560G104F', 'pullup_resistor': 4700.0, 'inline_resistor': 0.0, 'sensor_pin': 'analog13', 'min_temp': 5.0, 'max_temp': 240.0, 'min_extrude_temp': 170.0, 'max_power': 1.0, 'smooth_time': 1.0, 'control': 'pid', 'pid_kp': 17.519, 'pid_ki': 0.645, 'pid_kd': 118.907, 'heater_pin': 'ar10', 'pwm_cycle_time': 0.1, 'nozzle_diameter': 0.4, 'filament_diameter': 1.75, 'max_extrude_cross_section': 2.0, 'max_extrude_only_velocity': 79.82432411074329, 'max_extrude_only_accel': 798.2432411074329, 'max_extrude_only_distance': 500.0, 'instantaneous_corner_velocity': 1.0, 'step_pin': 'ar26', 'pressure_advance': 0.0, 'pressure_advance_smooth_time': 0.04, 'dir_pin': 'ar28', 'rotation_distance': 7.504, 'microsteps': 16, 'full_steps_per_rotation': 200, 'gear_ratio': [], 'enable_pin': '!ar24'}, 'verify_heater extruder': {'hysteresis': 5.0, 'max_error': 120.0, 'heating_gain': 2.0, 'check_gain_time': 20.0}}, 'warnings': [], 'save_config_pending': False, 'save_config_pending_items': {}}}
2023-12-16 19:48:12,772 [printer.py:reinit()] - Klipper version: v0.12.0-12-g38221df8-dirty
2023-12-16 19:48:12,773 [printer.py:reinit()] - # Extruders: 1
2023-12-16 19:48:12,773 [printer.py:reinit()] - # Temperature devices: 1
2023-12-16 19:48:12,773 [printer.py:reinit()] - # Fans: 2
2023-12-16 19:48:12,774 [printer.py:reinit()] - # Output pins: 0
2023-12-16 19:48:12,774 [printer.py:reinit()] - # Leds: 0
2023-12-16 19:48:12,809 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/gcode/help
2023-12-16 19:48:12,812 [KlippyWebsocket.py:object_subscription()] - Sending printer.objects.subscribe
2023-12-16 19:48:13,038 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/printer/objects/query?bed_mesh&configfile&display_status&extruder&fan&gcode_move&heater_bed&idle_timeout&pause_resume&print_stats&toolhead&virtual_sdcard&webhooks&motion_report&firmware_retraction&exclude_object&manual_probe&extruder&heater_bed&fan&heater_fan my_nozzle_fan&filament_switch_sensor RUNOUT
2023-12-16 19:48:13,067 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/temperature_store
2023-12-16 19:48:13,072 [printer.py:init_temp_store()] - Temp store: ['heater_bed', 'extruder']
2023-12-16 19:48:13,083 [KlippyRest.py:_do_request()] - Sending request to http://127.0.0.1:7125/server/config
2023-12-16 19:48:13,084 [screen.py:init_tempstore()] - Temperature store size: 1200
2023-12-16 19:48:13,084 [files.py:initialize()] - Gcodes path: /home/pi/printer_data/gcodes
2023-12-16 19:48:13,084 [KlippyWebsocket.py:get_file_list()] - Sending server.files.list
2023-12-16 19:48:13,085 [screen.py:init_printer()] - Printer initialized
2023-12-16 19:48:13,085 [printer.py:change_state()] - Changing state from 'disconnected' to 'ready'
2023-12-16 19:48:13,085 [printer.py:change_state()] - Adding callback for state: ready
2023-12-16 19:48:13,091 [screen.py:show_panel()] - Reinitializing panel
2023-12-16 19:48:13,173 [main_menu.py:__init__()] - ### Making MainMenu
2023-12-16 19:48:13,181 [main_menu.py:add_device()] - Adding device: extruder
2023-12-16 19:48:13,186 [main_menu.py:add_device()] - Adding device: heater_bed
2023-12-16 19:48:13,212 [screen.py:attach_panel()] - Current panel hierarchy: main_menu
